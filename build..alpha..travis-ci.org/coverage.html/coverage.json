{"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_angular_jsdoc */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/lib.npmtest_angular_jsdoc.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/lib.npmtest_angular_jsdoc.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":58}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":64}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_angular_jsdoc */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_angular_jsdoc = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_angular_jsdoc = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":57}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":71},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-angular-jsdoc && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_angular_jsdoc */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_angular_jsdoc","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_angular_jsdoc.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_angular_jsdoc.rollup.js'] =","            local.assetsDict['/assets.npmtest_angular_jsdoc.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_angular_jsdoc.__dirname + '/lib.npmtest_angular_jsdoc.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":37}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":26},"end":{"line":25,"column":41}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":26},"end":{"line":28,"column":41}}},"4":{"name":"(anonymous_4)","line":29,"loc":{"start":{"line":29,"column":25},"end":{"line":29,"column":36}}},"5":{"name":"(anonymous_5)","line":37,"loc":{"start":{"line":37,"column":19},"end":{"line":37,"column":56}}},"6":{"name":"(anonymous_6)","line":63,"loc":{"start":{"line":63,"column":33},"end":{"line":63,"column":50}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":21}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}},"6":{"start":{"line":12,"column":0},"end":{"line":32,"column":2}},"7":{"start":{"line":13,"column":2},"end":{"line":13,"column":27}},"8":{"start":{"line":15,"column":2},"end":{"line":15,"column":38}},"9":{"start":{"line":16,"column":2},"end":{"line":16,"column":69}},"10":{"start":{"line":18,"column":2},"end":{"line":21,"column":23}},"11":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"12":{"start":{"line":25,"column":2},"end":{"line":27,"column":5}},"13":{"start":{"line":26,"column":4},"end":{"line":26,"column":19}},"14":{"start":{"line":28,"column":2},"end":{"line":28,"column":62}},"15":{"start":{"line":28,"column":43},"end":{"line":28,"column":58}},"16":{"start":{"line":29,"column":2},"end":{"line":29,"column":67}},"17":{"start":{"line":29,"column":38},"end":{"line":29,"column":63}},"18":{"start":{"line":31,"column":2},"end":{"line":31,"column":26}},"19":{"start":{"line":37,"column":0},"end":{"line":66,"column":2}},"20":{"start":{"line":38,"column":2},"end":{"line":38,"column":32}},"21":{"start":{"line":39,"column":2},"end":{"line":39,"column":54}},"22":{"start":{"line":42,"column":2},"end":{"line":42,"column":109}},"23":{"start":{"line":44,"column":2},"end":{"line":49,"column":17}},"24":{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},"25":{"start":{"line":53,"column":4},"end":{"line":53,"column":65}},"26":{"start":{"line":56,"column":2},"end":{"line":61,"column":4}},"27":{"start":{"line":62,"column":2},"end":{"line":62,"column":49}},"28":{"start":{"line":63,"column":2},"end":{"line":65,"column":5}},"29":{"start":{"line":64,"column":4},"end":{"line":64,"column":33}},"30":{"start":{"line":68,"column":0},"end":{"line":68,"column":30}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":97}},{"start":{"line":21,"column":6},"end":{"line":21,"column":22}}]},"2":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":15},"end":{"line":38,"column":25}},{"start":{"line":38,"column":29},"end":{"line":38,"column":31}}]},"3":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":31},"end":{"line":39,"column":35}},{"start":{"line":39,"column":38},"end":{"line":39,"column":53}}]},"4":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":16},"end":{"line":42,"column":34}},{"start":{"line":42,"column":38},"end":{"line":42,"column":108}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"6":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":25}},{"start":{"line":52,"column":29},"end":{"line":52,"column":67}}]},"7":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":12}},{"start":{"line":64,"column":16},"end":{"line":64,"column":32}}]}},"code":["'use strict';","","var spawn = require('child_process').spawn;","var extend = require('util')._extend;","var path = require('path');","var Q = require('q');","var util = require(\"util\");","","/**"," * execute shell command"," */","var runCommand = function(cmd, args) {","  var deferred = Q.defer();","","  console.log(\"cwd is: \" + __dirname);","  console.log(\"angularJsdoc Running command\\n\", cmd, args.join(\" \"));","","  var child = (process.platform === \"win32\")","    // For windows need to spawn a \"cmd\" instance and pass the command to it","    ? spawn(\"cmd\", [\"/C\", cmd + \" \" + args.join(\" \")], { cwd: process.env.PWD, env: process.env})","    : spawn(cmd, args);","","  var result = \"\";","","  child.stdout.on(\"data\", function(data) {","    result += data;","  });","  child.stderr.on(\"data\", function(data) { result += data; });","  child.stdout.on(\"end\", function() { deferred.resolve(result); });","","  return deferred.promise;","};","","/**"," * main function"," */","var angularJsdoc = function(dirs, optionsArg, callback) {","  optionsArg = optionsArg || {};","  dirs = Array.isArray(dirs) ? dirs : dirs.split(\" \");","","  //default values","  var command = optionsArg.command || util.format(\"node %s\", path.join(\"node_modules\", \"jsdoc\", \"jsdoc.js\"));","","  var options = extend({","    configure: path.join(__dirname, \"common\", \"conf.json\"),","    template: path.join(__dirname, \"default\"),","    destination: \"docs\",","    readme: 'README.md'","  }, optionsArg);","","  // if given template a single word including dash","  if (optionsArg.template && optionsArg.template.match(/^[\\w-]+$/i)) {","    options.template = path.join(__dirname, optionsArg.template);","  };","","  var args = [","    '--configure', options.configure,","    '--template', options.template,","    '--destination', options.destination,","    '--readme', options.readme","  ];","  args = args.concat(['--recurse']).concat(dirs);","  runCommand(command, args).then(function(output) {","    callback && callback(output);","  });","};","","module.exports = angularJsdoc;","",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"12":1,"13":0,"15":0,"16":0,"18":0,"23":0,"25":0,"26":0,"28":0,"29":0,"31":0,"37":1,"38":0,"39":0,"42":0,"44":0,"52":0,"53":0,"56":0,"62":0,"63":0,"64":0,"68":1}},"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/gulpfile.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/gulpfile.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":18},"end":{"line":6,"column":33}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":14},"end":{"line":12,"column":32}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":18},"end":{"line":14,"column":29}}},"4":{"name":"(anonymous_4)","line":21,"loc":{"start":{"line":21,"column":18},"end":{"line":21,"column":29}}},"5":{"name":"(anonymous_5)","line":28,"loc":{"start":{"line":28,"column":24},"end":{"line":28,"column":35}}},"6":{"name":"(anonymous_6)","line":29,"loc":{"start":{"line":29,"column":24},"end":{"line":29,"column":35}}},"7":{"name":"(anonymous_7)","line":30,"loc":{"start":{"line":30,"column":24},"end":{"line":30,"column":35}}},"8":{"name":"(anonymous_8)","line":31,"loc":{"start":{"line":31,"column":24},"end":{"line":31,"column":35}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":32}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":30}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"6":{"start":{"line":6,"column":0},"end":{"line":26,"column":2}},"7":{"start":{"line":7,"column":2},"end":{"line":7,"column":25}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":19}},"9":{"start":{"line":9,"column":2},"end":{"line":24,"column":7}},"10":{"start":{"line":13,"column":6},"end":{"line":13,"column":61}},"11":{"start":{"line":15,"column":6},"end":{"line":15,"column":31}},"12":{"start":{"line":16,"column":6},"end":{"line":23,"column":12}},"13":{"start":{"line":22,"column":10},"end":{"line":22,"column":120}},"14":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"15":{"start":{"line":28,"column":37},"end":{"line":28,"column":58}},"16":{"start":{"line":29,"column":0},"end":{"line":29,"column":62}},"17":{"start":{"line":29,"column":37},"end":{"line":29,"column":58}},"18":{"start":{"line":30,"column":0},"end":{"line":30,"column":62}},"19":{"start":{"line":30,"column":37},"end":{"line":30,"column":58}},"20":{"start":{"line":31,"column":0},"end":{"line":31,"column":62}},"21":{"start":{"line":31,"column":37},"end":{"line":31,"column":58}}},"branchMap":{"1":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":9},"end":{"line":7,"column":13}},{"start":{"line":7,"column":17},"end":{"line":7,"column":24}}]},"2":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":29},"end":{"line":19,"column":104}},{"start":{"line":19,"column":107},"end":{"line":19,"column":113}}]}},"code":["var gulp = require('gulp');","var bump = require('gulp-bump');","var shell = require('gulp-shell');","var tap = require('gulp-tap');","var gutil = require('gulp-util');","var bumpVersion = function(type) {","  type = type || 'patch';","  var version = '';","  gulp.src(['./bower.json', './package.json'])","    .pipe(bump({type: type}))","    .pipe(gulp.dest('./'))","    .pipe(tap(function(file, t) {","      version = JSON.parse(file.contents.toString()).version;","    })).on('end', function() {","      var color = gutil.colors;","      gulp.src('')","        .pipe(shell([","          'git commit --all --message \"Version ' + version + '\"',","          (type != 'patch' ? 'git tag --annotate \"v' + version + '\" --message \"Version ' + version + '\"' : 'true')","        ], {ignoreErrors: false}))","        .pipe(tap(function() {","          gutil.log(color.green(\"Version bumped to \") + color.yellow(version) + color.green(\", don't forget to push!\"));","        }));","    });","","};","","gulp.task('bump',       function() { bumpVersion('patch'); });","gulp.task('bump:patch', function() { bumpVersion('patch'); });","gulp.task('bump:minor', function() { bumpVersion('minor'); });","gulp.task('bump:major', function() { bumpVersion('major'); });",""],"l":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"13":0,"15":0,"16":0,"22":0,"28":0,"29":0,"30":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/angular-template/publish.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/angular-template/publish.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":24},"end":{"line":16,"column":41}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":43},"end":{"line":17,"column":61}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":17},"end":{"line":35,"column":39}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":18},"end":{"line":44,"column":41}}},"5":{"name":"(anonymous_5)","line":48,"loc":{"start":{"line":48,"column":18},"end":{"line":48,"column":35}}},"6":{"name":"(anonymous_6)","line":55,"loc":{"start":{"line":55,"column":17},"end":{"line":55,"column":40}}},"7":{"name":"(anonymous_7)","line":65,"loc":{"start":{"line":65,"column":15},"end":{"line":65,"column":40}}},"8":{"name":"(anonymous_8)","line":77,"loc":{"start":{"line":77,"column":22},"end":{"line":77,"column":33}}},"9":{"name":"(anonymous_9)","line":78,"loc":{"start":{"line":78,"column":24},"end":{"line":78,"column":42}}},"10":{"name":"(anonymous_10)","line":82,"loc":{"start":{"line":82,"column":24},"end":{"line":82,"column":43}}},"11":{"name":"(anonymous_11)","line":90,"loc":{"start":{"line":90,"column":26},"end":{"line":90,"column":53}}},"12":{"name":"(anonymous_12)","line":113,"loc":{"start":{"line":113,"column":28},"end":{"line":113,"column":57}}},"13":{"name":"(anonymous_13)","line":138,"loc":{"start":{"line":138,"column":30},"end":{"line":138,"column":50}}},"14":{"name":"(anonymous_14)","line":141,"loc":{"start":{"line":141,"column":21},"end":{"line":141,"column":34}}},"15":{"name":"(anonymous_15)","line":157,"loc":{"start":{"line":157,"column":27},"end":{"line":157,"column":63}}},"16":{"name":"(anonymous_16)","line":167,"loc":{"start":{"line":167,"column":21},"end":{"line":167,"column":41}}},"17":{"name":"(anonymous_17)","line":183,"loc":{"start":{"line":183,"column":28},"end":{"line":183,"column":43}}},"18":{"name":"(anonymous_18)","line":186,"loc":{"start":{"line":186,"column":24},"end":{"line":186,"column":40}}},"19":{"name":"(anonymous_19)","line":201,"loc":{"start":{"line":201,"column":18},"end":{"line":201,"column":50}}},"20":{"name":"(anonymous_20)","line":211,"loc":{"start":{"line":211,"column":18},"end":{"line":211,"column":35}}},"21":{"name":"(anonymous_21)","line":244,"loc":{"start":{"line":244,"column":14},"end":{"line":244,"column":30}}},"22":{"name":"(anonymous_22)","line":257,"loc":{"start":{"line":257,"column":14},"end":{"line":257,"column":31}}},"23":{"name":"(anonymous_23)","line":261,"loc":{"start":{"line":261,"column":26},"end":{"line":261,"column":46}}},"24":{"name":"(anonymous_24)","line":280,"loc":{"start":{"line":280,"column":25},"end":{"line":280,"column":46}}},"25":{"name":"(anonymous_25)","line":291,"loc":{"start":{"line":291,"column":18},"end":{"line":291,"column":35}}},"26":{"name":"(anonymous_26)","line":311,"loc":{"start":{"line":311,"column":18},"end":{"line":311,"column":35}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":50}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":50}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":17}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":64}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":64}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":38}},"11":{"start":{"line":16,"column":0},"end":{"line":31,"column":2}},"12":{"start":{"line":17,"column":2},"end":{"line":29,"column":5}},"13":{"start":{"line":18,"column":4},"end":{"line":18,"column":22}},"14":{"start":{"line":20,"column":4},"end":{"line":23,"column":5}},"15":{"start":{"line":21,"column":6},"end":{"line":21,"column":26}},"16":{"start":{"line":22,"column":6},"end":{"line":22,"column":24}},"17":{"start":{"line":25,"column":4},"end":{"line":28,"column":6}},"18":{"start":{"line":30,"column":2},"end":{"line":30,"column":18}},"19":{"start":{"line":33,"column":0},"end":{"line":33,"column":21}},"20":{"start":{"line":35,"column":0},"end":{"line":41,"column":1}},"21":{"start":{"line":36,"column":4},"end":{"line":36,"column":47}},"22":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"23":{"start":{"line":38,"column":8},"end":{"line":38,"column":44}},"24":{"start":{"line":40,"column":4},"end":{"line":40,"column":25}},"25":{"start":{"line":44,"column":0},"end":{"line":53,"column":2}},"26":{"start":{"line":46,"column":2},"end":{"line":46,"column":42}},"27":{"start":{"line":47,"column":2},"end":{"line":47,"column":20}},"28":{"start":{"line":48,"column":2},"end":{"line":51,"column":5}},"29":{"start":{"line":49,"column":4},"end":{"line":49,"column":56}},"30":{"start":{"line":50,"column":4},"end":{"line":50,"column":39}},"31":{"start":{"line":52,"column":2},"end":{"line":52,"column":18}},"32":{"start":{"line":55,"column":0},"end":{"line":63,"column":2}},"33":{"start":{"line":56,"column":2},"end":{"line":62,"column":3}},"34":{"start":{"line":57,"column":4},"end":{"line":57,"column":16}},"35":{"start":{"line":59,"column":4},"end":{"line":59,"column":40}},"36":{"start":{"line":60,"column":4},"end":{"line":60,"column":39}},"37":{"start":{"line":61,"column":4},"end":{"line":61,"column":52}},"38":{"start":{"line":65,"column":0},"end":{"line":74,"column":2}},"39":{"start":{"line":66,"column":2},"end":{"line":66,"column":25}},"40":{"start":{"line":67,"column":2},"end":{"line":67,"column":51}},"41":{"start":{"line":68,"column":2},"end":{"line":68,"column":28}},"42":{"start":{"line":69,"column":2},"end":{"line":69,"column":23}},"43":{"start":{"line":71,"column":2},"end":{"line":71,"column":66}},"44":{"start":{"line":72,"column":2},"end":{"line":72,"column":63}},"45":{"start":{"line":73,"column":2},"end":{"line":73,"column":43}},"46":{"start":{"line":77,"column":0},"end":{"line":88,"column":2}},"47":{"start":{"line":78,"column":2},"end":{"line":87,"column":5}},"48":{"start":{"line":79,"column":4},"end":{"line":79,"column":51}},"49":{"start":{"line":80,"column":4},"end":{"line":80,"column":40}},"50":{"start":{"line":82,"column":4},"end":{"line":86,"column":7}},"51":{"start":{"line":83,"column":6},"end":{"line":83,"column":84}},"52":{"start":{"line":84,"column":6},"end":{"line":84,"column":23}},"53":{"start":{"line":85,"column":6},"end":{"line":85,"column":39}},"54":{"start":{"line":90,"column":0},"end":{"line":111,"column":2}},"55":{"start":{"line":91,"column":2},"end":{"line":91,"column":41}},"56":{"start":{"line":92,"column":2},"end":{"line":92,"column":66}},"57":{"start":{"line":94,"column":2},"end":{"line":110,"column":3}},"58":{"start":{"line":95,"column":4},"end":{"line":95,"column":30}},"59":{"start":{"line":96,"column":4},"end":{"line":96,"column":89}},"60":{"start":{"line":97,"column":4},"end":{"line":97,"column":70}},"61":{"start":{"line":98,"column":4},"end":{"line":107,"column":6}},"62":{"start":{"line":108,"column":4},"end":{"line":108,"column":49}},"63":{"start":{"line":109,"column":4},"end":{"line":109,"column":47}},"64":{"start":{"line":113,"column":0},"end":{"line":136,"column":2}},"65":{"start":{"line":114,"column":2},"end":{"line":114,"column":44}},"66":{"start":{"line":116,"column":2},"end":{"line":135,"column":3}},"67":{"start":{"line":117,"column":4},"end":{"line":117,"column":32}},"68":{"start":{"line":118,"column":4},"end":{"line":134,"column":5}},"69":{"start":{"line":119,"column":6},"end":{"line":119,"column":73}},"70":{"start":{"line":120,"column":6},"end":{"line":120,"column":69}},"71":{"start":{"line":121,"column":6},"end":{"line":129,"column":8}},"72":{"start":{"line":131,"column":6},"end":{"line":131,"column":70}},"73":{"start":{"line":132,"column":6},"end":{"line":132,"column":51}},"74":{"start":{"line":133,"column":6},"end":{"line":133,"column":49}},"75":{"start":{"line":138,"column":0},"end":{"line":155,"column":2}},"76":{"start":{"line":139,"column":2},"end":{"line":139,"column":39}},"77":{"start":{"line":141,"column":2},"end":{"line":154,"column":5}},"78":{"start":{"line":142,"column":4},"end":{"line":142,"column":51}},"79":{"start":{"line":143,"column":4},"end":{"line":143,"column":58}},"80":{"start":{"line":144,"column":4},"end":{"line":149,"column":6}},"81":{"start":{"line":151,"column":4},"end":{"line":151,"column":68}},"82":{"start":{"line":152,"column":4},"end":{"line":152,"column":57}},"83":{"start":{"line":153,"column":4},"end":{"line":153,"column":47}},"84":{"start":{"line":157,"column":0},"end":{"line":181,"column":2}},"85":{"start":{"line":158,"column":2},"end":{"line":158,"column":68}},"86":{"start":{"line":159,"column":2},"end":{"line":164,"column":4}},"87":{"start":{"line":166,"column":2},"end":{"line":166,"column":49}},"88":{"start":{"line":167,"column":2},"end":{"line":170,"column":4}},"89":{"start":{"line":168,"column":4},"end":{"line":169,"column":66}},"90":{"start":{"line":172,"column":2},"end":{"line":176,"column":5}},"91":{"start":{"line":179,"column":2},"end":{"line":179,"column":35}},"92":{"start":{"line":180,"column":2},"end":{"line":180,"column":47}},"93":{"start":{"line":183,"column":0},"end":{"line":195,"column":2}},"94":{"start":{"line":184,"column":2},"end":{"line":184,"column":44}},"95":{"start":{"line":186,"column":2},"end":{"line":194,"column":5}},"96":{"start":{"line":187,"column":4},"end":{"line":191,"column":8}},"97":{"start":{"line":193,"column":4},"end":{"line":193,"column":33}},"98":{"start":{"line":201,"column":0},"end":{"line":330,"column":2}},"99":{"start":{"line":202,"column":2},"end":{"line":202,"column":33}},"100":{"start":{"line":204,"column":2},"end":{"line":204,"column":40}},"101":{"start":{"line":206,"column":2},"end":{"line":206,"column":31}},"102":{"start":{"line":208,"column":2},"end":{"line":208,"column":52}},"103":{"start":{"line":209,"column":2},"end":{"line":209,"column":43}},"104":{"start":{"line":211,"column":2},"end":{"line":242,"column":5}},"105":{"start":{"line":213,"column":4},"end":{"line":220,"column":5}},"106":{"start":{"line":214,"column":6},"end":{"line":219,"column":8}},"107":{"start":{"line":222,"column":4},"end":{"line":241,"column":5}},"108":{"start":{"line":223,"column":6},"end":{"line":224,"column":67}},"109":{"start":{"line":225,"column":6},"end":{"line":225,"column":58}},"110":{"start":{"line":226,"column":6},"end":{"line":226,"column":46}},"111":{"start":{"line":227,"column":6},"end":{"line":240,"column":7}},"112":{"start":{"line":228,"column":8},"end":{"line":228,"column":62}},"113":{"start":{"line":229,"column":8},"end":{"line":229,"column":39}},"114":{"start":{"line":230,"column":8},"end":{"line":236,"column":10}},"115":{"start":{"line":237,"column":8},"end":{"line":237,"column":43}},"116":{"start":{"line":238,"column":8},"end":{"line":238,"column":77}},"117":{"start":{"line":239,"column":8},"end":{"line":239,"column":50}},"118":{"start":{"line":244,"column":2},"end":{"line":255,"column":5}},"119":{"start":{"line":245,"column":4},"end":{"line":247,"column":5}},"120":{"start":{"line":246,"column":6},"end":{"line":246,"column":13}},"121":{"start":{"line":249,"column":4},"end":{"line":249,"column":45}},"122":{"start":{"line":250,"column":4},"end":{"line":254,"column":5}},"123":{"start":{"line":251,"column":8},"end":{"line":251,"column":48}},"124":{"start":{"line":253,"column":8},"end":{"line":253,"column":27}},"125":{"start":{"line":257,"column":2},"end":{"line":284,"column":5}},"126":{"start":{"line":258,"column":4},"end":{"line":258,"column":48}},"127":{"start":{"line":259,"column":4},"end":{"line":259,"column":48}},"128":{"start":{"line":260,"column":4},"end":{"line":260,"column":48}},"129":{"start":{"line":261,"column":4},"end":{"line":264,"column":6}},"130":{"start":{"line":262,"column":6},"end":{"line":263,"column":68}},"131":{"start":{"line":266,"column":4},"end":{"line":277,"column":5}},"132":{"start":{"line":267,"column":6},"end":{"line":276,"column":7}},"133":{"start":{"line":268,"column":8},"end":{"line":270,"column":42}},"134":{"start":{"line":271,"column":13},"end":{"line":276,"column":7}},"135":{"start":{"line":273,"column":8},"end":{"line":275,"column":42}},"136":{"start":{"line":279,"column":4},"end":{"line":283,"column":5}},"137":{"start":{"line":280,"column":6},"end":{"line":282,"column":9}},"138":{"start":{"line":281,"column":8},"end":{"line":281,"column":52}},"139":{"start":{"line":287,"column":2},"end":{"line":290,"column":4}},"140":{"start":{"line":291,"column":2},"end":{"line":297,"column":5}},"141":{"start":{"line":292,"column":4},"end":{"line":292,"column":54}},"142":{"start":{"line":293,"column":4},"end":{"line":293,"column":44}},"143":{"start":{"line":294,"column":4},"end":{"line":294,"column":50}},"144":{"start":{"line":295,"column":4},"end":{"line":295,"column":64}},"145":{"start":{"line":296,"column":4},"end":{"line":296,"column":73}},"146":{"start":{"line":300,"column":2},"end":{"line":300,"column":20}},"147":{"start":{"line":302,"column":2},"end":{"line":302,"column":40}},"148":{"start":{"line":304,"column":2},"end":{"line":304,"column":41}},"149":{"start":{"line":306,"column":2},"end":{"line":306,"column":35}},"150":{"start":{"line":308,"column":2},"end":{"line":308,"column":44}},"151":{"start":{"line":311,"column":2},"end":{"line":316,"column":5}},"152":{"start":{"line":312,"column":4},"end":{"line":312,"column":75}},"153":{"start":{"line":313,"column":4},"end":{"line":313,"column":50}},"154":{"start":{"line":314,"column":4},"end":{"line":314,"column":21}},"155":{"start":{"line":315,"column":4},"end":{"line":315,"column":33}},"156":{"start":{"line":319,"column":2},"end":{"line":329,"column":3}},"157":{"start":{"line":320,"column":4},"end":{"line":320,"column":68}},"158":{"start":{"line":321,"column":4},"end":{"line":326,"column":6}},"159":{"start":{"line":327,"column":4},"end":{"line":327,"column":71}},"160":{"start":{"line":328,"column":4},"end":{"line":328,"column":68}}},"branchMap":{"1":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":24},"end":{"line":12,"column":38}},{"start":{"line":12,"column":42},"end":{"line":12,"column":63}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":15},"end":{"line":13,"column":29}},{"start":{"line":13,"column":33},"end":{"line":13,"column":63}}]},"3":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":13},"end":{"line":14,"column":31}},{"start":{"line":14,"column":35},"end":{"line":14,"column":37}}]},"4":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":18},"end":{"line":17,"column":33}},{"start":{"line":17,"column":35},"end":{"line":17,"column":37}}]},"5":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"6":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":15},"end":{"line":26,"column":22}},{"start":{"line":26,"column":26},"end":{"line":26,"column":28}}]},"7":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":13},"end":{"line":27,"column":17}},{"start":{"line":27,"column":21},"end":{"line":27,"column":28}}]},"8":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"9":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":38}},{"start":{"line":37,"column":42},"end":{"line":37,"column":65}}]},"10":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":11},"end":{"line":40,"column":18}},{"start":{"line":40,"column":22},"end":{"line":40,"column":24}}]},"11":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":28},"end":{"line":49,"column":49}},{"start":{"line":49,"column":53},"end":{"line":49,"column":55}}]},"12":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"13":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"14":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":3},"end":{"line":141,"column":7}},{"start":{"line":141,"column":9},"end":{"line":141,"column":11}}]},"15":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":4},"end":{"line":213,"column":4}},{"start":{"line":213,"column":4},"end":{"line":213,"column":4}}]},"16":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":8},"end":{"line":213,"column":19}},{"start":{"line":213,"column":23},"end":{"line":213,"column":45}}]},"17":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":222,"column":4}},{"start":{"line":222,"column":4},"end":{"line":222,"column":4}}]},"18":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":24},"end":{"line":226,"column":31}},{"start":{"line":226,"column":35},"end":{"line":226,"column":45}}]},"19":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":6},"end":{"line":227,"column":6}},{"start":{"line":227,"column":6},"end":{"line":227,"column":6}}]},"20":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":10},"end":{"line":227,"column":21}},{"start":{"line":227,"column":25},"end":{"line":227,"column":63}}]},"21":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":4},"end":{"line":245,"column":4}},{"start":{"line":245,"column":4},"end":{"line":245,"column":4}}]},"22":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":250,"column":4}},{"start":{"line":250,"column":4},"end":{"line":250,"column":4}}]},"23":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":4},"end":{"line":266,"column":4}},{"start":{"line":266,"column":4},"end":{"line":266,"column":4}}]},"24":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":6},"end":{"line":267,"column":6}},{"start":{"line":267,"column":6},"end":{"line":267,"column":6}}]},"25":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":13},"end":{"line":271,"column":13}},{"start":{"line":271,"column":13},"end":{"line":271,"column":13}}]},"26":{"line":271,"type":"binary-expr","locations":[{"start":{"line":271,"column":19},"end":{"line":271,"column":44}},{"start":{"line":271,"column":48},"end":{"line":271,"column":71}},{"start":{"line":272,"column":8},"end":{"line":272,"column":36}}]},"27":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":4},"end":{"line":279,"column":4}},{"start":{"line":279,"column":4},"end":{"line":279,"column":4}}]},"28":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":10},"end":{"line":288,"column":18}},{"start":{"line":288,"column":22},"end":{"line":288,"column":24}}]},"29":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":17},"end":{"line":292,"column":32}},{"start":{"line":292,"column":36},"end":{"line":292,"column":53}}]},"30":{"line":293,"type":"binary-expr","locations":[{"start":{"line":293,"column":16},"end":{"line":293,"column":28}},{"start":{"line":293,"column":32},"end":{"line":293,"column":43}}]},"31":{"line":294,"type":"binary-expr","locations":[{"start":{"line":294,"column":25},"end":{"line":294,"column":43}},{"start":{"line":294,"column":47},"end":{"line":294,"column":49}}]},"32":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":32},"end":{"line":295,"column":57}},{"start":{"line":295,"column":61},"end":{"line":295,"column":63}}]},"33":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":2},"end":{"line":319,"column":2}},{"start":{"line":319,"column":2},"end":{"line":319,"column":2}}]}},"code":["/*global env: true */","'use strict';","","var fs = require('jsdoc/fs');","var path = require('jsdoc/path');","var angularTemplate = require('angular-template');","var marked = require('marked');","var helper = require('jsdoc/util/templateHelper');","","var templatePath;","var outdir = env.opts.destination;","var defaultModuleName = env.opts.query && env.opts.query.module;","var docFiles = env.opts.query && env.opts.query.docs.split(\",\");","var conf   = env.conf.templates || {}; //jshint ignore:line","","var getDocletExamples = function(doclet) {","  var examples = (doclet.examples||[]).map(function(example) {","    var caption, code;","","    if (example.match(/^\\s*<caption>([\\s\\S]+?)<\\/caption>(\\s*[\\n\\r])([\\s\\S]+)$/i)) {","      caption = RegExp.$1;","      code  = RegExp.$3;","    }","","    return {","      caption: caption || '',","      code: (code || example).replace(/</g,'&lt;')","    };","  });","  return examples;","};","","var memberCache = {};","","var getMembers = function(data, doclet){","    var members = memberCache[doclet.longname];","    if (typeof members === 'undefined' && doclet.kind === 'class') {","        members  = memberCache[doclet.name];","    }","    return members || [];","}","","// get children doclets that has member of current doclet longname","var getChildren = function(data, doclet) {","","  var members  = getMembers(data, doclet);","  var children = {};","  members.forEach(function(doclet) {","    children[doclet.kind] = children[doclet.kind] || [];","    children[doclet.kind].push(doclet);","  });","  return children;","};","","var hashToLink = function(doclet, hash) {","  if ( !/^(#.+)/.test(hash) ) {","    return hash;","  } else {","    var url = helper.createLink(doclet);","    url = url.replace(/(#.+|$)/, hash);","    return '<a href=\"' + url + '\">' + hash + '</a>';","  }","};","","var generate = function(filepath, data) {","  data.title = data.name;","  data.prettyJson = JSON.stringify(data,null,'  ');","  data.basePath = __dirname;","  data.marked = marked;","","  var layoutPath = path.join(templatePath, 'html', 'layout.html');","  var html = angularTemplate(layoutPath, data, {jsMode:false});","  fs.writeFileSync(filepath, html, 'utf8');","};","","// copy the template's static files to outdir","var copyStaticFiles = function() {","  ['css', 'js'].forEach(function(dirName) {","    var fromDir = path.join(templatePath, dirName);","    var staticFiles = fs.ls(fromDir, 3);","","    staticFiles.forEach(function(fileName) {","      var toDir = fs.toDir( fileName.replace(fromDir, path.join(outdir, dirName)) );","      fs.mkPath(toDir);","      fs.copyFileSync(fileName, toDir);","    });","  });","};","","var generateSourceFiles = function(sourceCodes, nav) {","  fs.mkPath(path.join(outdir, \"source\"));","  var layoutPath = path.join(templatePath, 'html', 'layout.html');","","  for (var key in sourceCodes) {","    var el = sourceCodes[key];","    var sourceCode = require('fs').readFileSync(path.join(el.path, el.filename), 'utf8');","    var outputPath = path.join(outdir, \"source\", el.longname+\".html\");","    var data = {","      name: el.name,","      longname: el.longname,","      path: el.path,","      filename: el.filename,","      code: sourceCode.replace(/</g,'&lt;'),","      nav: nav,","      basePath: __dirname,","      title: \"source : \"+el.filename","    };","    var html = angularTemplate(layoutPath, data);","    fs.writeFileSync(outputPath, html, 'utf8');","  }","};","","var generateTemplateFiles = function(templateCodes, nav) {","  fs.mkPath(path.join(outdir, \"templates\"));","","  for (var key in templateCodes) {","    var el = templateCodes[key];","    if (fs.existsSync(el.filePath)) {","      var templateHtml = require('fs').readFileSync(el.filePath, 'utf8');","      var outputPath = path.join(outdir, \"templates\", el.outputName);","      var data = {","        name: el.name,","        longname: el.longname,","        path: el.filePath,","        code: templateHtml.replace(/</g,'&lt;'),","        nav: nav,","        basePath: __dirname,","        title: \"template : \"+el.templateUrl","      };","","      var layoutPath = path.join(templatePath, 'html', 'layout.html');","      var html = angularTemplate(layoutPath, data);","      fs.writeFileSync(outputPath, html, 'utf8');","    }","  }","};","","var generateStaticDocuments = function(docs, nav) {","  fs.mkPath(path.join(outdir, \"docs\"));","","  (docs||[]).forEach(function(el) {","    var outputPath = path.join(outdir, el+\".html\");","    var markdown = require('fs').readFileSync(el, 'utf8');","    var documentData = {","      nav: nav,","      readme: marked(markdown),","      basePath: __dirname,","      title: el,","    };","","    var layoutPath = path.join(templatePath, 'html', 'layout.html');","    var html = angularTemplate(layoutPath, documentData);","    fs.writeFileSync(outputPath, html, 'utf8');","  });","};","","var generateTutorialFile = function(title, tutorial, filename) {","  var layoutPath = path.join(templatePath, 'html', 'tutorial.html');","  var tutorialData = {","    title: title,","    header: tutorial.title,","    content: tutorial.parse(),","    children: tutorial.children","  };","","  var tutorialPath = path.join(outdir, filename);","  var tutoriallink = function (tutorial) {","    return helper.toTutorial(tutorial, null,","      { tag: 'em', classname: 'disabled', prefix: 'Tutorial: ' });","  };","","  var html = angularTemplate(layoutPath, {","    basePath: __dirname,","    tutorialData: tutorialData,","    tutoriallink: tutoriallink","  });","  // yes, you can use {@link} in tutorials too!","  // turn {@link foo} into <a href=\"foodoc.html\">foo</a>","  html = helper.resolveLinks(html);","  fs.writeFileSync(tutorialPath, html, 'utf8');","};","","var generateTutorialFiles = function(node) {","  fs.mkPath(path.join(outdir, \"tutorials\"));","","  node.children.forEach(function(child) {","    generateTutorialFile(","        'Tutorial: ' + child.title,","        child,","        helper.tutorialToUrl(child.name)","      );","","    generateTutorialFiles(child);","  });","};","","/**","  @param {TAFFY} taffyData See <http://taffydb.com/>.","  @param {object} opts"," */","exports.publish = function(data, opts, tutorials) {","  helper.setTutorials(tutorials);","","  data.sort('longname, version, since');","","  templatePath = opts.template;","","  var classes  = helper.find(data, {kind: 'class'});","  var sourceCodes = {}, templateCodes = {};","","  classes.forEach(function(doclet) {","","    if (doclet.meta && doclet.kind == 'class') {","      sourceCodes[doclet.name] = {","        name: doclet.name,","        longname: doclet.longname,","        path: doclet.meta.path,","        filename: doclet.meta.filename","      };","    }","","    if (doclet.ngdoc == 'directive') {","      var code = fs.readFileSync(","        path.join(doclet.meta.path, doclet.meta.filename), 'utf8');","      var matches = code.match(/templateUrl\\s*:\\s* (.*)/);","      var templateUrl = matches && matches[1];","      if (templateUrl && templateUrl.indexOf('function') === -1) {","        templateUrl = templateUrl.trim().replace(/['\",]/g,'');","        var templatePath = templateUrl;","        var templateCode =  {","          name: doclet.name,","          longname: doclet.longname,","          filePath: templatePath,","          templateUrl: templateUrl,","          outputName: templateUrl.replace(/[\\/\\\\]/g,'_')","        };","        doclet.templateCode = templateCode;","        doclet.templateUrl = path.join('templates', templateCode.outputName);","        templateCodes[doclet.name] = templateCode;","      }","    }","  });","","  data().each(function(doclet){","    if(!doclet.memberof){","      return;","    }","    ","    var cache = memberCache[doclet.memberof];","    if(!cache){","        memberCache[doclet.memberof] = [doclet];","    } else {","        cache.push(doclet);","    }","  });","","  data().each(function(doclet) {","    doclet.children = getChildren(data, doclet);","    doclet.examples = getDocletExamples(doclet);","    doclet.jsDocUrl = helper.createLink(doclet);","    doclet.tutoriallink = function (tutorial) {","      return helper.toTutorial(tutorial, null,","        { tag: 'em', classname: 'disabled', prefix: 'Tutorial: ' });","    };","","    if (doclet.meta) {","      if (doclet.kind == 'class') {","        doclet.sourceUrl = 'source/'+","                encodeURIComponent(sourceCodes[doclet.name].longname)+","          \".html#line\"+doclet.meta.lineno;","      } else if ( (doclet.kind == 'function' || doclet.kind == 'member') &&","        sourceCodes[doclet.memberof]) {","        doclet.sourceUrl = 'source/'+","                encodeURIComponent(sourceCodes[doclet.memberof].longname)+","          \".html#line\"+doclet.meta.lineno;","      }","    }","","    if (doclet.see) {","      doclet.see.forEach(function(seeItem, i) {","        doclet.see[i] = hashToLink(doclet, seeItem);","      });","    }","  });","","  // build navigation","  var nav = {","    docs: docFiles || [],","    module: {}","  };","  classes.forEach(function(doclet) {","    var module = doclet.memberof || defaultModuleName;","    var group = doclet.ngdoc || 'undefined';","    nav.module[module] = nav.module[module] || {};","    nav.module[module][group] = nav.module[module][group] || {};","    nav.module[module][group][doclet.name] = {jsDocUrl: doclet.jsDocUrl};","  });","","  // generate source html files","  copyStaticFiles();                         // copy static files e.g., css, js","  // generate source file as html","  generateSourceFiles(sourceCodes, nav);","  // generate static documents from env.opts.query.docs","  generateStaticDocuments(docFiles, nav);","  // generate tutorial files","  generateTutorialFiles(tutorials);","  // angular directive has its template, we make those as file","  generateTemplateFiles(templateCodes, nav); // generate template file for directives","","  // generate jsdoc html files","  classes.forEach(function(doclet) {","    var jsDocPath = decodeURIComponent(doclet.jsDocUrl.replace(/#.*$/,''));","    var outputPath = path.join(outdir, jsDocPath);","    doclet.nav = nav;","    generate(outputPath, doclet);","  });","","  // generate index.html","  if (opts.readme) {","    var layoutPath = path.join(templatePath, 'html', 'layout.html');","    var readmeData = {","      nav: nav,","      readme: opts.readme,","      basePath: __dirname,","      title: \"Index\"","    };","    var html = angularTemplate(layoutPath, readmeData, {jsMode:false});","    fs.writeFileSync(path.join(outdir, 'index.html'), html, 'utf8');","  }","};",""],"l":{"4":2,"5":0,"6":0,"7":0,"8":0,"10":0,"11":0,"12":0,"13":0,"14":0,"16":0,"17":0,"18":0,"20":0,"21":0,"22":0,"25":0,"30":0,"33":0,"35":0,"36":0,"37":0,"38":0,"40":0,"44":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"55":0,"56":0,"57":0,"59":0,"60":0,"61":0,"65":0,"66":0,"67":0,"68":0,"69":0,"71":0,"72":0,"73":0,"77":0,"78":0,"79":0,"80":0,"82":0,"83":0,"84":0,"85":0,"90":0,"91":0,"92":0,"94":0,"95":0,"96":0,"97":0,"98":0,"108":0,"109":0,"113":0,"114":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"131":0,"132":0,"133":0,"138":0,"139":0,"141":0,"142":0,"143":0,"144":0,"151":0,"152":0,"153":0,"157":0,"158":0,"159":0,"166":0,"167":0,"168":0,"172":0,"179":0,"180":0,"183":0,"184":0,"186":0,"187":0,"193":0,"201":0,"202":0,"204":0,"206":0,"208":0,"209":0,"211":0,"213":0,"214":0,"222":0,"223":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"237":0,"238":0,"239":0,"244":0,"245":0,"246":0,"249":0,"250":0,"251":0,"253":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"266":0,"267":0,"268":0,"271":0,"273":0,"279":0,"280":0,"281":0,"287":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"300":0,"302":0,"304":0,"306":0,"308":0,"311":0,"312":0,"313":0,"314":0,"315":0,"319":0,"320":0,"321":0,"327":0,"328":0}},"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/default/publish.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/default/publish.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":24},"end":{"line":18,"column":41}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":43},"end":{"line":19,"column":61}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":24},"end":{"line":35,"column":41}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":22},"end":{"line":46,"column":33}}},"5":{"name":"(anonymous_5)","line":47,"loc":{"start":{"line":47,"column":33},"end":{"line":47,"column":51}}},"6":{"name":"(anonymous_6)","line":51,"loc":{"start":{"line":51,"column":24},"end":{"line":51,"column":43}}},"7":{"name":"(anonymous_7)","line":60,"loc":{"start":{"line":60,"column":18},"end":{"line":60,"column":41}}},"8":{"name":"(anonymous_8)","line":66,"loc":{"start":{"line":66,"column":18},"end":{"line":66,"column":35}}},"9":{"name":"(anonymous_9)","line":73,"loc":{"start":{"line":73,"column":17},"end":{"line":73,"column":40}}},"10":{"name":"(anonymous_10)","line":83,"loc":{"start":{"line":83,"column":15},"end":{"line":83,"column":40}}},"11":{"name":"(anonymous_11)","line":95,"loc":{"start":{"line":95,"column":26},"end":{"line":95,"column":53}}},"12":{"name":"(anonymous_12)","line":116,"loc":{"start":{"line":116,"column":30},"end":{"line":116,"column":50}}},"13":{"name":"(anonymous_13)","line":119,"loc":{"start":{"line":119,"column":21},"end":{"line":119,"column":34}}},"14":{"name":"(anonymous_14)","line":136,"loc":{"start":{"line":136,"column":27},"end":{"line":136,"column":63}}},"15":{"name":"(anonymous_15)","line":145,"loc":{"start":{"line":145,"column":21},"end":{"line":145,"column":41}}},"16":{"name":"(anonymous_16)","line":163,"loc":{"start":{"line":163,"column":28},"end":{"line":163,"column":43}}},"17":{"name":"(anonymous_17)","line":166,"loc":{"start":{"line":166,"column":24},"end":{"line":166,"column":40}}},"18":{"name":"(anonymous_18)","line":181,"loc":{"start":{"line":181,"column":18},"end":{"line":181,"column":50}}},"19":{"name":"(anonymous_19)","line":188,"loc":{"start":{"line":188,"column":14},"end":{"line":188,"column":31}}},"20":{"name":"(anonymous_20)","line":193,"loc":{"start":{"line":193,"column":26},"end":{"line":193,"column":46}}},"21":{"name":"(anonymous_21)","line":210,"loc":{"start":{"line":210,"column":25},"end":{"line":210,"column":46}}},"22":{"name":"(anonymous_22)","line":222,"loc":{"start":{"line":222,"column":18},"end":{"line":222,"column":35}}},"23":{"name":"(anonymous_23)","line":239,"loc":{"start":{"line":239,"column":18},"end":{"line":239,"column":35}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":17}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":64}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":64}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":38}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":16}},"12":{"start":{"line":18,"column":0},"end":{"line":33,"column":2}},"13":{"start":{"line":19,"column":2},"end":{"line":31,"column":5}},"14":{"start":{"line":20,"column":4},"end":{"line":20,"column":22}},"15":{"start":{"line":22,"column":4},"end":{"line":25,"column":5}},"16":{"start":{"line":23,"column":6},"end":{"line":23,"column":26}},"17":{"start":{"line":24,"column":6},"end":{"line":24,"column":24}},"18":{"start":{"line":27,"column":4},"end":{"line":30,"column":6}},"19":{"start":{"line":32,"column":2},"end":{"line":32,"column":18}},"20":{"start":{"line":35,"column":0},"end":{"line":43,"column":2}},"21":{"start":{"line":36,"column":2},"end":{"line":42,"column":3}},"22":{"start":{"line":37,"column":4},"end":{"line":37,"column":16}},"23":{"start":{"line":38,"column":9},"end":{"line":42,"column":3}},"24":{"start":{"line":39,"column":4},"end":{"line":39,"column":61}},"25":{"start":{"line":41,"column":4},"end":{"line":41,"column":32}},"26":{"start":{"line":46,"column":0},"end":{"line":57,"column":2}},"27":{"start":{"line":47,"column":2},"end":{"line":56,"column":5}},"28":{"start":{"line":48,"column":4},"end":{"line":48,"column":51}},"29":{"start":{"line":49,"column":4},"end":{"line":49,"column":40}},"30":{"start":{"line":51,"column":4},"end":{"line":55,"column":7}},"31":{"start":{"line":52,"column":6},"end":{"line":52,"column":84}},"32":{"start":{"line":53,"column":6},"end":{"line":53,"column":23}},"33":{"start":{"line":54,"column":6},"end":{"line":54,"column":39}},"34":{"start":{"line":60,"column":0},"end":{"line":71,"column":2}},"35":{"start":{"line":61,"column":2},"end":{"line":61,"column":64}},"36":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"37":{"start":{"line":63,"column":4},"end":{"line":63,"column":58}},"38":{"start":{"line":65,"column":2},"end":{"line":65,"column":20}},"39":{"start":{"line":66,"column":2},"end":{"line":69,"column":5}},"40":{"start":{"line":67,"column":4},"end":{"line":67,"column":56}},"41":{"start":{"line":68,"column":4},"end":{"line":68,"column":39}},"42":{"start":{"line":70,"column":2},"end":{"line":70,"column":18}},"43":{"start":{"line":73,"column":0},"end":{"line":81,"column":2}},"44":{"start":{"line":74,"column":2},"end":{"line":80,"column":3}},"45":{"start":{"line":75,"column":4},"end":{"line":75,"column":16}},"46":{"start":{"line":77,"column":4},"end":{"line":77,"column":40}},"47":{"start":{"line":78,"column":4},"end":{"line":78,"column":39}},"48":{"start":{"line":79,"column":4},"end":{"line":79,"column":52}},"49":{"start":{"line":83,"column":0},"end":{"line":93,"column":2}},"50":{"start":{"line":84,"column":2},"end":{"line":84,"column":48}},"51":{"start":{"line":85,"column":2},"end":{"line":85,"column":51}},"52":{"start":{"line":86,"column":2},"end":{"line":86,"column":28}},"53":{"start":{"line":87,"column":2},"end":{"line":87,"column":23}},"54":{"start":{"line":89,"column":2},"end":{"line":89,"column":66}},"55":{"start":{"line":90,"column":2},"end":{"line":90,"column":66}},"56":{"start":{"line":91,"column":2},"end":{"line":91,"column":42}},"57":{"start":{"line":92,"column":2},"end":{"line":92,"column":43}},"58":{"start":{"line":95,"column":0},"end":{"line":114,"column":2}},"59":{"start":{"line":96,"column":2},"end":{"line":96,"column":41}},"60":{"start":{"line":97,"column":2},"end":{"line":97,"column":66}},"61":{"start":{"line":98,"column":2},"end":{"line":98,"column":66}},"62":{"start":{"line":99,"column":2},"end":{"line":113,"column":3}},"63":{"start":{"line":100,"column":4},"end":{"line":100,"column":36}},"64":{"start":{"line":101,"column":4},"end":{"line":101,"column":69}},"65":{"start":{"line":102,"column":4},"end":{"line":102,"column":49}},"66":{"start":{"line":103,"column":4},"end":{"line":109,"column":6}},"67":{"start":{"line":110,"column":4},"end":{"line":110,"column":56}},"68":{"start":{"line":111,"column":4},"end":{"line":111,"column":44}},"69":{"start":{"line":112,"column":4},"end":{"line":112,"column":47}},"70":{"start":{"line":116,"column":0},"end":{"line":134,"column":2}},"71":{"start":{"line":117,"column":2},"end":{"line":117,"column":39}},"72":{"start":{"line":119,"column":2},"end":{"line":133,"column":5}},"73":{"start":{"line":120,"column":4},"end":{"line":120,"column":51}},"74":{"start":{"line":121,"column":4},"end":{"line":121,"column":58}},"75":{"start":{"line":122,"column":4},"end":{"line":127,"column":6}},"76":{"start":{"line":129,"column":4},"end":{"line":129,"column":68}},"77":{"start":{"line":130,"column":4},"end":{"line":130,"column":68}},"78":{"start":{"line":131,"column":4},"end":{"line":131,"column":52}},"79":{"start":{"line":132,"column":4},"end":{"line":132,"column":47}},"80":{"start":{"line":136,"column":0},"end":{"line":161,"column":2}},"81":{"start":{"line":137,"column":2},"end":{"line":142,"column":4}},"82":{"start":{"line":144,"column":2},"end":{"line":144,"column":49}},"83":{"start":{"line":145,"column":2},"end":{"line":148,"column":4}},"84":{"start":{"line":146,"column":4},"end":{"line":147,"column":66}},"85":{"start":{"line":150,"column":2},"end":{"line":150,"column":68}},"86":{"start":{"line":151,"column":2},"end":{"line":151,"column":66}},"87":{"start":{"line":152,"column":2},"end":{"line":156,"column":5}},"88":{"start":{"line":159,"column":2},"end":{"line":159,"column":35}},"89":{"start":{"line":160,"column":2},"end":{"line":160,"column":47}},"90":{"start":{"line":163,"column":0},"end":{"line":175,"column":2}},"91":{"start":{"line":164,"column":2},"end":{"line":164,"column":44}},"92":{"start":{"line":166,"column":2},"end":{"line":174,"column":5}},"93":{"start":{"line":167,"column":4},"end":{"line":171,"column":8}},"94":{"start":{"line":173,"column":4},"end":{"line":173,"column":33}},"95":{"start":{"line":181,"column":0},"end":{"line":259,"column":2}},"96":{"start":{"line":182,"column":2},"end":{"line":182,"column":33}},"97":{"start":{"line":183,"column":2},"end":{"line":183,"column":40}},"98":{"start":{"line":185,"column":2},"end":{"line":185,"column":31}},"99":{"start":{"line":186,"column":2},"end":{"line":186,"column":23}},"100":{"start":{"line":188,"column":2},"end":{"line":214,"column":5}},"101":{"start":{"line":189,"column":4},"end":{"line":189,"column":48}},"102":{"start":{"line":190,"column":4},"end":{"line":190,"column":48}},"103":{"start":{"line":192,"column":4},"end":{"line":192,"column":48}},"104":{"start":{"line":193,"column":4},"end":{"line":196,"column":6}},"105":{"start":{"line":194,"column":6},"end":{"line":195,"column":68}},"106":{"start":{"line":198,"column":4},"end":{"line":207,"column":5}},"107":{"start":{"line":199,"column":6},"end":{"line":199,"column":58}},"108":{"start":{"line":200,"column":6},"end":{"line":200,"column":73}},"109":{"start":{"line":201,"column":6},"end":{"line":206,"column":7}},"110":{"start":{"line":202,"column":8},"end":{"line":205,"column":10}},"111":{"start":{"line":209,"column":4},"end":{"line":213,"column":5}},"112":{"start":{"line":210,"column":6},"end":{"line":212,"column":9}},"113":{"start":{"line":211,"column":8},"end":{"line":211,"column":52}},"114":{"start":{"line":216,"column":2},"end":{"line":216,"column":52}},"115":{"start":{"line":219,"column":2},"end":{"line":221,"column":4}},"116":{"start":{"line":222,"column":2},"end":{"line":228,"column":5}},"117":{"start":{"line":223,"column":4},"end":{"line":223,"column":54}},"118":{"start":{"line":224,"column":4},"end":{"line":224,"column":44}},"119":{"start":{"line":225,"column":4},"end":{"line":225,"column":36}},"120":{"start":{"line":226,"column":4},"end":{"line":226,"column":50}},"121":{"start":{"line":227,"column":4},"end":{"line":227,"column":70}},"122":{"start":{"line":231,"column":2},"end":{"line":231,"column":20}},"123":{"start":{"line":232,"column":2},"end":{"line":232,"column":40}},"124":{"start":{"line":234,"column":2},"end":{"line":234,"column":41}},"125":{"start":{"line":236,"column":2},"end":{"line":236,"column":35}},"126":{"start":{"line":239,"column":2},"end":{"line":244,"column":5}},"127":{"start":{"line":240,"column":4},"end":{"line":240,"column":55}},"128":{"start":{"line":241,"column":4},"end":{"line":241,"column":50}},"129":{"start":{"line":242,"column":4},"end":{"line":242,"column":21}},"130":{"start":{"line":243,"column":4},"end":{"line":243,"column":33}},"131":{"start":{"line":247,"column":2},"end":{"line":258,"column":3}},"132":{"start":{"line":248,"column":4},"end":{"line":248,"column":68}},"133":{"start":{"line":249,"column":4},"end":{"line":249,"column":68}},"134":{"start":{"line":250,"column":4},"end":{"line":255,"column":6}},"135":{"start":{"line":256,"column":4},"end":{"line":256,"column":50}},"136":{"start":{"line":257,"column":4},"end":{"line":257,"column":68}}},"branchMap":{"1":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":24},"end":{"line":13,"column":38}},{"start":{"line":13,"column":42},"end":{"line":13,"column":63}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":15},"end":{"line":14,"column":29}},{"start":{"line":14,"column":33},"end":{"line":14,"column":63}}]},"3":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":13},"end":{"line":15,"column":31}},{"start":{"line":15,"column":35},"end":{"line":15,"column":37}}]},"4":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":18},"end":{"line":19,"column":33}},{"start":{"line":19,"column":35},"end":{"line":19,"column":37}}]},"5":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"6":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":15},"end":{"line":28,"column":22}},{"start":{"line":28,"column":26},"end":{"line":28,"column":28}}]},"7":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":13},"end":{"line":29,"column":17}},{"start":{"line":29,"column":21},"end":{"line":29,"column":28}}]},"8":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"9":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":9},"end":{"line":38,"column":9}},{"start":{"line":38,"column":9},"end":{"line":38,"column":9}}]},"10":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":13},"end":{"line":38,"column":29}},{"start":{"line":38,"column":33},"end":{"line":38,"column":60}}]},"11":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"12":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":26}},{"start":{"line":62,"column":30},"end":{"line":62,"column":53}}]},"13":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":28},"end":{"line":67,"column":49}},{"start":{"line":67,"column":53},"end":{"line":67,"column":55}}]},"14":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"15":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":3},"end":{"line":119,"column":7}},{"start":{"line":119,"column":9},"end":{"line":119,"column":11}}]},"16":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":4},"end":{"line":198,"column":4}},{"start":{"line":198,"column":4},"end":{"line":198,"column":4}}]},"17":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":6},"end":{"line":201,"column":6}},{"start":{"line":201,"column":6},"end":{"line":201,"column":6}}]},"18":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":209,"column":4}},{"start":{"line":209,"column":4},"end":{"line":209,"column":4}}]},"19":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":10},"end":{"line":220,"column":18}},{"start":{"line":220,"column":22},"end":{"line":220,"column":24}}]},"20":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":17},"end":{"line":223,"column":32}},{"start":{"line":223,"column":36},"end":{"line":223,"column":53}}]},"21":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":16},"end":{"line":224,"column":28}},{"start":{"line":224,"column":32},"end":{"line":224,"column":43}}]},"22":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":18},"end":{"line":225,"column":29}},{"start":{"line":225,"column":33},"end":{"line":225,"column":35}}]},"23":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":25},"end":{"line":226,"column":43}},{"start":{"line":226,"column":47},"end":{"line":226,"column":49}}]},"24":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":2},"end":{"line":247,"column":2}},{"start":{"line":247,"column":2},"end":{"line":247,"column":2}}]}},"code":["/*global env: true */","'use strict';","","var fs = require('jsdoc/fs');","var path = require('jsdoc/path');","var jsTemplate = require('js-template');","var marked = require('marked');","","var helper = require('jsdoc/util/templateHelper');","","var templatePath;","var outdir = env.opts.destination;","var defaultModuleName = env.opts.query && env.opts.query.module;","var docFiles = env.opts.query && env.opts.query.docs.split(\",\");","var conf   = env.conf.templates || {}; //jshint ignore:line","var toc    = {}; //table of contents","","var getDocletExamples = function(doclet) {","  var examples = (doclet.examples||[]).map(function(example) {","    var caption, code;","","    if (example.match(/^\\s*<caption>([\\s\\S]+?)<\\/caption>(\\s*[\\n\\r])([\\s\\S]+)$/i)) {","      caption = RegExp.$1;","      code  = RegExp.$3;","    }","","    return {","      caption: caption || '',","      code: (code || example).replace(/</g,'&lt;')","    };","  });","  return examples;","};","","var getPathFromDoclet = function(doclet) {","  if (!doclet.meta) {","    return null;","  } else if (doclet.meta.path && doclet.meta.path !== 'null') {","    return path.join(doclet.meta.path, doclet.meta.filename);","  } else {","    return doclet.meta.filename;","  }","};","","// copy the template's static files to outdir","var copyStaticFiles = function() {","  ['css', 'js', 'fonts'].forEach(function(dirName) {","    var fromDir = path.join(templatePath, dirName);","    var staticFiles = fs.ls(fromDir, 3);","","    staticFiles.forEach(function(fileName) {","      var toDir = fs.toDir( fileName.replace(fromDir, path.join(outdir, dirName)) );","      fs.mkPath(toDir);","      fs.copyFileSync(fileName, toDir);","    });","  });","};","","// get children doclets that has member of current doclet longname","var getChildren = function(data, doclet) {","  var members  = helper.find(data, {memberof: doclet.longname});","  if (members.length === 0 && doclet.kind === 'class') {","    members  = helper.find(data, {memberof: doclet.name});","  }","  var children = {};","  members.forEach(function(doclet) {","    children[doclet.kind] = children[doclet.kind] || [];","    children[doclet.kind].push(doclet);","  });","  return children;","};","","var hashToLink = function(doclet, hash) {","  if ( !/^(#.+)/.test(hash) ) {","    return hash;","  } else {","    var url = helper.createLink(doclet);","    url = url.replace(/(#.+|$)/, hash);","    return '<a href=\"' + url + '\">' + hash + '</a>';","  }","};","","var generate = function(filepath, data) {","  data.title = data.ngdoc + \":\" + data.longname;","  data.prettyJson = JSON.stringify(data,null,'  ');","  data.basePath = __dirname;","  data.marked = marked;","","  var layoutPath = path.join(templatePath, 'html', 'layout.html');","  var layoutHtml = require('fs').readFileSync(layoutPath, 'utf8');","  var html = jsTemplate(layoutHtml, data);","  fs.writeFileSync(filepath, html, 'utf8');","};","","var generateSourceFiles = function(sourceFiles, nav) {","  fs.mkPath(path.join(outdir, \"source\"));","  var layoutPath = path.join(templatePath, 'html', 'layout.html');","  var layoutHtml = require('fs').readFileSync(layoutPath, 'utf8');","  for(var jsDoc in sourceFiles) {","    var source = sourceFiles[jsDoc];","    var sourceCode = require('fs').readFileSync(source.path, 'utf8');","    sourceCode = sourceCode.replace(/</g,\"&lt;\");","    var data = {","      path: source.path,","      code: sourceCode,","      nav: nav,","      basePath: __dirname,","      title: \"Source:\"+source.path.replace(/^.*[\\/\\\\]/,'')","    };","    var outputPath = path.join(outdir, \"source\", jsDoc);","    var html = jsTemplate(layoutHtml, data);","    fs.writeFileSync(outputPath, html, 'utf8');","  }","};","","var generateStaticDocuments = function(docs, nav) {","  fs.mkPath(path.join(outdir, \"docs\"));","","  (docs||[]).forEach(function(el) {","    var outputPath = path.join(outdir, el+\".html\");","    var markdown = require('fs').readFileSync(el, 'utf8');","    var documentData = {","      nav: nav,","      readme: marked(markdown),","      basePath: __dirname,","      title: el,","    };","","    var layoutPath = path.join(templatePath, 'html', 'layout.html');","    var layoutHtml = require('fs').readFileSync(layoutPath, 'utf8');","    var html = jsTemplate(layoutHtml, documentData);","    fs.writeFileSync(outputPath, html, 'utf8');","  });","};","","var generateTutorialFile = function(title, tutorial, filename) {","  var tutorialData = {","    title: title,","    header: tutorial.title,","    content: tutorial.parse(),","    children: tutorial.children","  };","","  var tutorialPath = path.join(outdir, filename);","  var tutoriallink = function (tutorial) {","    return helper.toTutorial(tutorial, null,","      { tag: 'em', classname: 'disabled', prefix: 'Tutorial: ' });","  };","","  var layoutPath = path.join(templatePath, 'html', 'tutorial.html');","  var layoutHtml = require('fs').readFileSync(layoutPath, 'utf8');","  var html = jsTemplate(layoutHtml, {","    basePath: __dirname,","    tutorialData: tutorialData,","    tutoriallink: tutoriallink","  });","  // yes, you can use {@link} in tutorials too!","  // turn {@link foo} into <a href=\"foodoc.html\">foo</a>","  html = helper.resolveLinks(html);","  fs.writeFileSync(tutorialPath, html, 'utf8');","};","","var generateTutorialFiles = function(node) {","  fs.mkPath(path.join(outdir, \"tutorials\"));","","  node.children.forEach(function(child) {","    generateTutorialFile(","        'Tutorial: ' + child.title,","        child,","        helper.tutorialToUrl(child.name)","      );","","    generateTutorialFiles(child);","  });","};","","/**","  @param {TAFFY} taffyData See <http://taffydb.com/>.","  @param {object} opts"," */","exports.publish = function(data, opts, tutorials) {","  helper.setTutorials(tutorials);","  data.sort('longname, version, since');","","  templatePath = opts.template;","  var sourceFiles = {};","","  data().each(function(doclet) {","    doclet.children = getChildren(data, doclet);","    doclet.examples = getDocletExamples(doclet);","","    doclet.jsDocUrl = helper.createLink(doclet);","    doclet.tutoriallink = function (tutorial) {","      return helper.toTutorial(tutorial, null,","        { tag: 'em', classname: 'disabled', prefix: 'Tutorial: ' });","    };","","    if (doclet.meta) {","      var sourceHtml = doclet.jsDocUrl.replace(/#.*$/,'');","      doclet.sourceUrl = 'source/'+sourceHtml+\"#line\"+doclet.meta.lineno;","      if (doclet.kind == 'class') {","        sourceFiles[sourceHtml] = {","          path: getPathFromDoclet(doclet),","          toc: toc","        };","      }","    }","","    if (doclet.see) {","      doclet.see.forEach(function(seeItem, i) {","        doclet.see[i] = hashToLink(doclet, seeItem);","      });","    }","  });","","  var classes  = helper.find(data, {kind: 'class'});","","  // build navigation","  var nav = {","    docs: docFiles || [],","  };","  classes.forEach(function(doclet) {","    var module = doclet.memberof || defaultModuleName;","    var group = doclet.ngdoc || 'undefined';","    nav[module] = nav[module] || {};","    nav[module][group] = nav[module][group] || {};","    nav[module][group][doclet.longname] = {jsDocUrl: doclet.jsDocUrl};","  });","","  // generate source html files","  copyStaticFiles();                     //copy static files e.g., css, js","  generateSourceFiles(sourceFiles, nav); //generate source file as html","  // generate static documents from env.opts.query.docs","  generateStaticDocuments(docFiles, nav);","  // generate tutorial files","  generateTutorialFiles(tutorials);","","  // generate jsdoc html files","  classes.forEach(function(doclet) {","    var jsDocPath = doclet.jsDocUrl.replace(/#.*$/,'');","    var outputPath = path.join(outdir, jsDocPath);","    doclet.nav = nav;","    generate(outputPath, doclet);","  });","","  // generate index.html","  if (opts.readme) {","    var layoutPath = path.join(templatePath, 'html', 'layout.html');","    var layoutHtml = require('fs').readFileSync(layoutPath, 'utf8');","    var readmeData = {","      nav: nav,","      readme: opts.readme,","      basePath: __dirname,","      title: \"Index\"","    };","    var html = jsTemplate(layoutHtml, readmeData);","    fs.writeFileSync(path.join(outdir, 'index.html'), html, 'utf8');","  }","};",""],"l":{"4":2,"5":0,"6":0,"7":0,"9":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"18":0,"19":0,"20":0,"22":0,"23":0,"24":0,"27":0,"32":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"46":0,"47":0,"48":0,"49":0,"51":0,"52":0,"53":0,"54":0,"60":0,"61":0,"62":0,"63":0,"65":0,"66":0,"67":0,"68":0,"70":0,"73":0,"74":0,"75":0,"77":0,"78":0,"79":0,"83":0,"84":0,"85":0,"86":0,"87":0,"89":0,"90":0,"91":0,"92":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"110":0,"111":0,"112":0,"116":0,"117":0,"119":0,"120":0,"121":0,"122":0,"129":0,"130":0,"131":0,"132":0,"136":0,"137":0,"144":0,"145":0,"146":0,"150":0,"151":0,"152":0,"159":0,"160":0,"163":0,"164":0,"166":0,"167":0,"173":0,"181":0,"182":0,"183":0,"185":0,"186":0,"188":0,"189":0,"190":0,"192":0,"193":0,"194":0,"198":0,"199":0,"200":0,"201":0,"202":0,"209":0,"210":0,"211":0,"216":0,"219":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"231":0,"232":0,"234":0,"236":0,"239":0,"240":0,"241":0,"242":0,"243":0,"247":0,"248":0,"249":0,"250":0,"256":0,"257":0}},"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/angular-template/js/prettify.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/angular-template/js/prettify.js","s":{"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":1,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":1,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":0,"199":1,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":1,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":1,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":1,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":1,"337":0,"338":0,"339":0,"340":0,"341":1,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":1,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":1,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":1,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":1,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":1,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":1,"485":0,"486":0,"487":1,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":1,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0,0],"137":[0,0],"138":[0,0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"fnMap":{"1":{"name":"(anonymous_1)","line":90,"loc":{"start":{"line":90,"column":1},"end":{"line":90,"column":13}}},"2":{"name":"combinePrefixPatterns","line":250,"loc":{"start":{"line":250,"column":2},"end":{"line":250,"column":41}}},"3":{"name":"decodeEscape","line":276,"loc":{"start":{"line":276,"column":4},"end":{"line":276,"column":39}}},"4":{"name":"encodeEscape","line":294,"loc":{"start":{"line":294,"column":4},"end":{"line":294,"column":36}}},"5":{"name":"caseFoldCharset","line":303,"loc":{"start":{"line":303,"column":4},"end":{"line":303,"column":38}}},"6":{"name":"(anonymous_6)","line":351,"loc":{"start":{"line":351,"column":18},"end":{"line":351,"column":34}}},"7":{"name":"allowAnywhereFoldCaseAndRenumberGroups","line":375,"loc":{"start":{"line":375,"column":4},"end":{"line":375,"column":59}}},"8":{"name":"(anonymous_8)","line":461,"loc":{"start":{"line":461,"column":16},"end":{"line":461,"column":30}}},"9":{"name":"extractSourceSpans","line":528,"loc":{"start":{"line":528,"column":2},"end":{"line":528,"column":52}}},"10":{"name":"walk","line":536,"loc":{"start":{"line":536,"column":4},"end":{"line":536,"column":24}}},"11":{"name":"appendDecorations","line":580,"loc":{"start":{"line":580,"column":2},"end":{"line":580,"column":68}}},"12":{"name":"childContentWrapper","line":603,"loc":{"start":{"line":603,"column":2},"end":{"line":603,"column":40}}},"13":{"name":"createSimpleLexer","line":662,"loc":{"start":{"line":662,"column":2},"end":{"line":662,"column":78}}},"14":{"name":"(anonymous_14)","line":665,"loc":{"start":{"line":665,"column":5},"end":{"line":665,"column":17}}},"15":{"name":"(anonymous_15)","line":701,"loc":{"start":{"line":701,"column":19},"end":{"line":701,"column":34}}},"16":{"name":"sourceDecorator","line":805,"loc":{"start":{"line":805,"column":2},"end":{"line":805,"column":36}}},"17":{"name":"numberLines","line":991,"loc":{"start":{"line":991,"column":2},"end":{"line":991,"column":63}}},"18":{"name":"walk","line":1005,"loc":{"start":{"line":1005,"column":4},"end":{"line":1005,"column":24}}},"19":{"name":"breakAfter","line":1041,"loc":{"start":{"line":1041,"column":4},"end":{"line":1041,"column":37}}},"20":{"name":"breakLeftOf","line":1050,"loc":{"start":{"line":1050,"column":6},"end":{"line":1050,"column":40}}},"21":{"name":"recombineTagsAndDecorations","line":1127,"loc":{"start":{"line":1127,"column":2},"end":{"line":1127,"column":44}}},"22":{"name":"registerLangHandler","line":1255,"loc":{"start":{"line":1255,"column":2},"end":{"line":1255,"column":56}}},"23":{"name":"langHandlerForExtension","line":1265,"loc":{"start":{"line":1265,"column":2},"end":{"line":1265,"column":54}}},"24":{"name":"applyDecorator","line":1380,"loc":{"start":{"line":1380,"column":2},"end":{"line":1380,"column":31}}},"25":{"name":"$prettyPrintOne","line":1413,"loc":{"start":{"line":1413,"column":2},"end":{"line":1413,"column":79}}},"26":{"name":"$prettyPrint","line":1447,"loc":{"start":{"line":1447,"column":2},"end":{"line":1447,"column":48}}},"27":{"name":"byTagName","line":1450,"loc":{"start":{"line":1450,"column":4},"end":{"line":1450,"column":27}}},"28":{"name":"(anonymous_28)","line":1463,"loc":{"start":{"line":1463,"column":23},"end":{"line":1463,"column":35}}},"29":{"name":"doWork","line":1479,"loc":{"start":{"line":1479,"column":4},"end":{"line":1479,"column":22}}},"30":{"name":"(anonymous_30)","line":1505,"loc":{"start":{"line":1505,"column":16},"end":{"line":1505,"column":42}}},"31":{"name":"(anonymous_31)","line":1651,"loc":{"start":{"line":1651,"column":39},"end":{"line":1651,"column":51}}}},"statementMap":{"1":{"start":{"line":59,"column":0},"end":{"line":59,"column":27}},"2":{"start":{"line":66,"column":0},"end":{"line":66,"column":44}},"3":{"start":{"line":77,"column":0},"end":{"line":77,"column":19}},"4":{"start":{"line":87,"column":0},"end":{"line":87,"column":16}},"5":{"start":{"line":90,"column":0},"end":{"line":1655,"column":5}},"6":{"start":{"line":91,"column":2},"end":{"line":91,"column":19}},"7":{"start":{"line":95,"column":2},"end":{"line":95,"column":77}},"8":{"start":{"line":96,"column":2},"end":{"line":98,"column":74}},"9":{"start":{"line":99,"column":2},"end":{"line":100,"column":74}},"10":{"start":{"line":101,"column":2},"end":{"line":105,"column":66}},"11":{"start":{"line":106,"column":2},"end":{"line":109,"column":26}},"12":{"start":{"line":110,"column":2},"end":{"line":115,"column":51}},"13":{"start":{"line":116,"column":2},"end":{"line":118,"column":51}},"14":{"start":{"line":119,"column":2},"end":{"line":121,"column":22}},"15":{"start":{"line":122,"column":2},"end":{"line":124,"column":61}},"16":{"start":{"line":125,"column":2},"end":{"line":128,"column":25}},"17":{"start":{"line":129,"column":2},"end":{"line":132,"column":19}},"18":{"start":{"line":133,"column":3},"end":{"line":135,"column":68}},"19":{"start":{"line":136,"column":2},"end":{"line":137,"column":42}},"20":{"start":{"line":138,"column":2},"end":{"line":140,"column":51}},"21":{"start":{"line":141,"column":2},"end":{"line":141,"column":131}},"22":{"start":{"line":148,"column":2},"end":{"line":148,"column":24}},"23":{"start":{"line":153,"column":2},"end":{"line":153,"column":25}},"24":{"start":{"line":158,"column":2},"end":{"line":158,"column":25}},"25":{"start":{"line":163,"column":2},"end":{"line":163,"column":22}},"26":{"start":{"line":168,"column":2},"end":{"line":168,"column":25}},"27":{"start":{"line":173,"column":2},"end":{"line":173,"column":29}},"28":{"start":{"line":178,"column":2},"end":{"line":178,"column":23}},"29":{"start":{"line":184,"column":2},"end":{"line":184,"column":21}},"30":{"start":{"line":189,"column":2},"end":{"line":189,"column":29}},"31":{"start":{"line":194,"column":2},"end":{"line":194,"column":24}},"32":{"start":{"line":199,"column":2},"end":{"line":199,"column":29}},"33":{"start":{"line":204,"column":2},"end":{"line":204,"column":30}},"34":{"start":{"line":211,"column":2},"end":{"line":211,"column":27}},"35":{"start":{"line":234,"column":2},"end":{"line":234,"column":238}},"36":{"start":{"line":250,"column":2},"end":{"line":481,"column":3}},"37":{"start":{"line":251,"column":4},"end":{"line":251,"column":31}},"38":{"start":{"line":253,"column":4},"end":{"line":253,"column":31}},"39":{"start":{"line":254,"column":4},"end":{"line":254,"column":27}},"40":{"start":{"line":255,"column":4},"end":{"line":265,"column":5}},"41":{"start":{"line":256,"column":6},"end":{"line":256,"column":28}},"42":{"start":{"line":257,"column":6},"end":{"line":264,"column":7}},"43":{"start":{"line":258,"column":8},"end":{"line":258,"column":26}},"44":{"start":{"line":259,"column":13},"end":{"line":264,"column":7}},"45":{"start":{"line":261,"column":8},"end":{"line":261,"column":30}},"46":{"start":{"line":262,"column":8},"end":{"line":262,"column":27}},"47":{"start":{"line":263,"column":8},"end":{"line":263,"column":14}},"48":{"start":{"line":267,"column":4},"end":{"line":274,"column":6}},"49":{"start":{"line":276,"column":4},"end":{"line":292,"column":5}},"50":{"start":{"line":277,"column":6},"end":{"line":277,"column":42}},"51":{"start":{"line":278,"column":6},"end":{"line":280,"column":7}},"52":{"start":{"line":279,"column":8},"end":{"line":279,"column":19}},"53":{"start":{"line":281,"column":6},"end":{"line":281,"column":37}},"54":{"start":{"line":282,"column":6},"end":{"line":282,"column":37}},"55":{"start":{"line":283,"column":6},"end":{"line":291,"column":7}},"56":{"start":{"line":284,"column":8},"end":{"line":284,"column":19}},"57":{"start":{"line":285,"column":13},"end":{"line":291,"column":7}},"58":{"start":{"line":286,"column":8},"end":{"line":286,"column":53}},"59":{"start":{"line":287,"column":13},"end":{"line":291,"column":7}},"60":{"start":{"line":288,"column":8},"end":{"line":288,"column":54}},"61":{"start":{"line":290,"column":8},"end":{"line":290,"column":41}},"62":{"start":{"line":294,"column":4},"end":{"line":301,"column":5}},"63":{"start":{"line":295,"column":6},"end":{"line":297,"column":7}},"64":{"start":{"line":296,"column":8},"end":{"line":296,"column":74}},"65":{"start":{"line":298,"column":6},"end":{"line":298,"column":45}},"66":{"start":{"line":299,"column":6},"end":{"line":300,"column":27}},"67":{"start":{"line":303,"column":4},"end":{"line":373,"column":5}},"68":{"start":{"line":304,"column":6},"end":{"line":313,"column":20}},"69":{"start":{"line":314,"column":6},"end":{"line":314,"column":22}},"70":{"start":{"line":315,"column":6},"end":{"line":315,"column":44}},"71":{"start":{"line":317,"column":6},"end":{"line":317,"column":22}},"72":{"start":{"line":318,"column":6},"end":{"line":318,"column":37}},"73":{"start":{"line":318,"column":21},"end":{"line":318,"column":35}},"74":{"start":{"line":320,"column":6},"end":{"line":347,"column":7}},"75":{"start":{"line":321,"column":8},"end":{"line":321,"column":32}},"76":{"start":{"line":322,"column":8},"end":{"line":346,"column":9}},"77":{"start":{"line":323,"column":10},"end":{"line":323,"column":22}},"78":{"start":{"line":325,"column":10},"end":{"line":325,"column":38}},"79":{"start":{"line":326,"column":10},"end":{"line":326,"column":18}},"80":{"start":{"line":327,"column":10},"end":{"line":332,"column":11}},"81":{"start":{"line":328,"column":12},"end":{"line":328,"column":52}},"82":{"start":{"line":329,"column":12},"end":{"line":329,"column":19}},"83":{"start":{"line":331,"column":12},"end":{"line":331,"column":24}},"84":{"start":{"line":333,"column":10},"end":{"line":333,"column":36}},"85":{"start":{"line":338,"column":10},"end":{"line":345,"column":11}},"86":{"start":{"line":339,"column":12},"end":{"line":341,"column":13}},"87":{"start":{"line":340,"column":14},"end":{"line":340,"column":78}},"88":{"start":{"line":342,"column":12},"end":{"line":344,"column":13}},"89":{"start":{"line":343,"column":14},"end":{"line":343,"column":81}},"90":{"start":{"line":351,"column":6},"end":{"line":351,"column":79}},"91":{"start":{"line":351,"column":36},"end":{"line":351,"column":75}},"92":{"start":{"line":352,"column":6},"end":{"line":352,"column":34}},"93":{"start":{"line":353,"column":6},"end":{"line":353,"column":25}},"94":{"start":{"line":354,"column":6},"end":{"line":361,"column":7}},"95":{"start":{"line":355,"column":8},"end":{"line":355,"column":30}},"96":{"start":{"line":356,"column":8},"end":{"line":360,"column":9}},"97":{"start":{"line":357,"column":10},"end":{"line":357,"column":58}},"98":{"start":{"line":359,"column":10},"end":{"line":359,"column":53}},"99":{"start":{"line":363,"column":6},"end":{"line":370,"column":7}},"100":{"start":{"line":364,"column":8},"end":{"line":364,"column":42}},"101":{"start":{"line":365,"column":8},"end":{"line":365,"column":41}},"102":{"start":{"line":366,"column":8},"end":{"line":369,"column":9}},"103":{"start":{"line":367,"column":10},"end":{"line":367,"column":57}},"104":{"start":{"line":367,"column":41},"end":{"line":367,"column":55}},"105":{"start":{"line":368,"column":10},"end":{"line":368,"column":43}},"106":{"start":{"line":371,"column":6},"end":{"line":371,"column":20}},"107":{"start":{"line":372,"column":6},"end":{"line":372,"column":26}},"108":{"start":{"line":375,"column":4},"end":{"line":470,"column":5}},"109":{"start":{"line":379,"column":6},"end":{"line":391,"column":20}},"110":{"start":{"line":392,"column":6},"end":{"line":392,"column":27}},"111":{"start":{"line":397,"column":6},"end":{"line":397,"column":30}},"112":{"start":{"line":401,"column":6},"end":{"line":419,"column":7}},"113":{"start":{"line":402,"column":8},"end":{"line":402,"column":25}},"114":{"start":{"line":403,"column":8},"end":{"line":418,"column":9}},"115":{"start":{"line":405,"column":10},"end":{"line":405,"column":23}},"116":{"start":{"line":406,"column":15},"end":{"line":418,"column":9}},"117":{"start":{"line":407,"column":10},"end":{"line":407,"column":45}},"118":{"start":{"line":408,"column":10},"end":{"line":417,"column":11}},"119":{"start":{"line":409,"column":12},"end":{"line":416,"column":13}},"120":{"start":{"line":410,"column":14},"end":{"line":410,"column":48}},"121":{"start":{"line":415,"column":14},"end":{"line":415,"column":52}},"122":{"start":{"line":423,"column":6},"end":{"line":427,"column":7}},"123":{"start":{"line":424,"column":8},"end":{"line":426,"column":9}},"124":{"start":{"line":425,"column":10},"end":{"line":425,"column":51}},"125":{"start":{"line":428,"column":6},"end":{"line":441,"column":7}},"126":{"start":{"line":429,"column":8},"end":{"line":429,"column":25}},"127":{"start":{"line":430,"column":8},"end":{"line":440,"column":9}},"128":{"start":{"line":431,"column":10},"end":{"line":431,"column":23}},"129":{"start":{"line":432,"column":10},"end":{"line":434,"column":11}},"130":{"start":{"line":433,"column":12},"end":{"line":433,"column":29}},"131":{"start":{"line":435,"column":15},"end":{"line":440,"column":9}},"132":{"start":{"line":436,"column":10},"end":{"line":436,"column":45}},"133":{"start":{"line":437,"column":10},"end":{"line":439,"column":11}},"134":{"start":{"line":438,"column":12},"end":{"line":438,"column":59}},"135":{"start":{"line":445,"column":6},"end":{"line":447,"column":7}},"136":{"start":{"line":446,"column":8},"end":{"line":446,"column":72}},"137":{"start":{"line":446,"column":56},"end":{"line":446,"column":70}},"138":{"start":{"line":451,"column":6},"end":{"line":467,"column":7}},"139":{"start":{"line":452,"column":8},"end":{"line":466,"column":9}},"140":{"start":{"line":453,"column":10},"end":{"line":453,"column":27}},"141":{"start":{"line":454,"column":10},"end":{"line":454,"column":32}},"142":{"start":{"line":455,"column":10},"end":{"line":465,"column":11}},"143":{"start":{"line":456,"column":12},"end":{"line":456,"column":42}},"144":{"start":{"line":457,"column":17},"end":{"line":465,"column":11}},"145":{"start":{"line":459,"column":12},"end":{"line":464,"column":19}},"146":{"start":{"line":462,"column":18},"end":{"line":462,"column":44}},"147":{"start":{"line":463,"column":18},"end":{"line":463,"column":76}},"148":{"start":{"line":469,"column":6},"end":{"line":469,"column":28}},"149":{"start":{"line":472,"column":4},"end":{"line":472,"column":23}},"150":{"start":{"line":473,"column":4},"end":{"line":478,"column":5}},"151":{"start":{"line":474,"column":6},"end":{"line":474,"column":28}},"152":{"start":{"line":475,"column":6},"end":{"line":475,"column":75}},"153":{"start":{"line":475,"column":45},"end":{"line":475,"column":73}},"154":{"start":{"line":476,"column":6},"end":{"line":477,"column":71}},"155":{"start":{"line":480,"column":4},"end":{"line":480,"column":68}},"156":{"start":{"line":528,"column":2},"end":{"line":572,"column":3}},"157":{"start":{"line":529,"column":4},"end":{"line":529,"column":42}},"158":{"start":{"line":531,"column":4},"end":{"line":531,"column":20}},"159":{"start":{"line":532,"column":4},"end":{"line":532,"column":19}},"160":{"start":{"line":533,"column":4},"end":{"line":533,"column":19}},"161":{"start":{"line":534,"column":4},"end":{"line":534,"column":14}},"162":{"start":{"line":536,"column":4},"end":{"line":564,"column":5}},"163":{"start":{"line":537,"column":6},"end":{"line":537,"column":31}},"164":{"start":{"line":538,"column":6},"end":{"line":563,"column":7}},"165":{"start":{"line":539,"column":8},"end":{"line":539,"column":52}},"166":{"start":{"line":539,"column":43},"end":{"line":539,"column":50}},"167":{"start":{"line":540,"column":8},"end":{"line":542,"column":9}},"168":{"start":{"line":541,"column":10},"end":{"line":541,"column":22}},"169":{"start":{"line":543,"column":8},"end":{"line":543,"column":51}},"170":{"start":{"line":544,"column":8},"end":{"line":548,"column":9}},"171":{"start":{"line":545,"column":10},"end":{"line":545,"column":27}},"172":{"start":{"line":546,"column":10},"end":{"line":546,"column":35}},"173":{"start":{"line":547,"column":10},"end":{"line":547,"column":39}},"174":{"start":{"line":549,"column":13},"end":{"line":563,"column":7}},"175":{"start":{"line":550,"column":8},"end":{"line":550,"column":34}},"176":{"start":{"line":551,"column":8},"end":{"line":562,"column":9}},"177":{"start":{"line":552,"column":10},"end":{"line":556,"column":11}},"178":{"start":{"line":553,"column":12},"end":{"line":553,"column":52}},"179":{"start":{"line":555,"column":12},"end":{"line":555,"column":48}},"180":{"start":{"line":558,"column":10},"end":{"line":558,"column":27}},"181":{"start":{"line":559,"column":10},"end":{"line":559,"column":33}},"182":{"start":{"line":560,"column":10},"end":{"line":560,"column":32}},"183":{"start":{"line":561,"column":10},"end":{"line":561,"column":39}},"184":{"start":{"line":566,"column":4},"end":{"line":566,"column":15}},"185":{"start":{"line":568,"column":4},"end":{"line":571,"column":6}},"186":{"start":{"line":580,"column":2},"end":{"line":588,"column":3}},"187":{"start":{"line":581,"column":4},"end":{"line":581,"column":32}},"188":{"start":{"line":581,"column":23},"end":{"line":581,"column":30}},"189":{"start":{"line":582,"column":4},"end":{"line":585,"column":6}},"190":{"start":{"line":586,"column":4},"end":{"line":586,"column":21}},"191":{"start":{"line":587,"column":4},"end":{"line":587,"column":41}},"192":{"start":{"line":590,"column":2},"end":{"line":590,"column":19}},"193":{"start":{"line":603,"column":2},"end":{"line":614,"column":3}},"194":{"start":{"line":604,"column":4},"end":{"line":604,"column":28}},"195":{"start":{"line":605,"column":4},"end":{"line":612,"column":5}},"196":{"start":{"line":606,"column":6},"end":{"line":606,"column":28}},"197":{"start":{"line":607,"column":6},"end":{"line":611,"column":20}},"198":{"start":{"line":613,"column":4},"end":{"line":613,"column":53}},"199":{"start":{"line":662,"column":2},"end":{"line":788,"column":3}},"200":{"start":{"line":663,"column":4},"end":{"line":663,"column":23}},"201":{"start":{"line":664,"column":4},"end":{"line":664,"column":18}},"202":{"start":{"line":665,"column":4},"end":{"line":686,"column":9}},"203":{"start":{"line":666,"column":6},"end":{"line":666,"column":79}},"204":{"start":{"line":667,"column":6},"end":{"line":667,"column":25}},"205":{"start":{"line":668,"column":6},"end":{"line":668,"column":25}},"206":{"start":{"line":669,"column":6},"end":{"line":683,"column":7}},"207":{"start":{"line":670,"column":8},"end":{"line":670,"column":42}},"208":{"start":{"line":671,"column":8},"end":{"line":671,"column":44}},"209":{"start":{"line":672,"column":8},"end":{"line":676,"column":9}},"210":{"start":{"line":673,"column":10},"end":{"line":675,"column":11}},"211":{"start":{"line":674,"column":12},"end":{"line":674,"column":62}},"212":{"start":{"line":677,"column":8},"end":{"line":677,"column":36}},"213":{"start":{"line":678,"column":8},"end":{"line":678,"column":27}},"214":{"start":{"line":679,"column":8},"end":{"line":682,"column":9}},"215":{"start":{"line":680,"column":10},"end":{"line":680,"column":32}},"216":{"start":{"line":681,"column":10},"end":{"line":681,"column":30}},"217":{"start":{"line":684,"column":6},"end":{"line":684,"column":36}},"218":{"start":{"line":685,"column":6},"end":{"line":685,"column":51}},"219":{"start":{"line":688,"column":4},"end":{"line":688,"column":52}},"220":{"start":{"line":701,"column":4},"end":{"line":786,"column":6}},"221":{"start":{"line":702,"column":6},"end":{"line":702,"column":61}},"222":{"start":{"line":708,"column":6},"end":{"line":708,"column":44}},"223":{"start":{"line":709,"column":6},"end":{"line":709,"column":18}},"224":{"start":{"line":710,"column":6},"end":{"line":710,"column":53}},"225":{"start":{"line":711,"column":6},"end":{"line":711,"column":26}},"226":{"start":{"line":713,"column":6},"end":{"line":784,"column":7}},"227":{"start":{"line":714,"column":8},"end":{"line":714,"column":31}},"228":{"start":{"line":715,"column":8},"end":{"line":715,"column":38}},"229":{"start":{"line":716,"column":8},"end":{"line":716,"column":27}},"230":{"start":{"line":718,"column":8},"end":{"line":718,"column":23}},"231":{"start":{"line":719,"column":8},"end":{"line":748,"column":9}},"232":{"start":{"line":720,"column":10},"end":{"line":720,"column":29}},"233":{"start":{"line":722,"column":10},"end":{"line":722,"column":56}},"234":{"start":{"line":723,"column":10},"end":{"line":739,"column":11}},"235":{"start":{"line":724,"column":12},"end":{"line":724,"column":49}},"236":{"start":{"line":725,"column":12},"end":{"line":725,"column":36}},"237":{"start":{"line":727,"column":12},"end":{"line":734,"column":13}},"238":{"start":{"line":728,"column":14},"end":{"line":728,"column":57}},"239":{"start":{"line":729,"column":14},"end":{"line":729,"column":51}},"240":{"start":{"line":730,"column":14},"end":{"line":733,"column":15}},"241":{"start":{"line":731,"column":16},"end":{"line":731,"column":40}},"242":{"start":{"line":732,"column":16},"end":{"line":732,"column":22}},"243":{"start":{"line":736,"column":12},"end":{"line":738,"column":13}},"244":{"start":{"line":737,"column":14},"end":{"line":737,"column":31}},"245":{"start":{"line":741,"column":10},"end":{"line":741,"column":78}},"246":{"start":{"line":742,"column":10},"end":{"line":745,"column":11}},"247":{"start":{"line":743,"column":12},"end":{"line":743,"column":31}},"248":{"start":{"line":744,"column":12},"end":{"line":744,"column":30}},"249":{"start":{"line":747,"column":10},"end":{"line":747,"column":57}},"250":{"start":{"line":747,"column":29},"end":{"line":747,"column":55}},"251":{"start":{"line":750,"column":8},"end":{"line":750,"column":29}},"252":{"start":{"line":751,"column":8},"end":{"line":751,"column":28}},"253":{"start":{"line":753,"column":8},"end":{"line":783,"column":9}},"254":{"start":{"line":754,"column":10},"end":{"line":754,"column":56}},"255":{"start":{"line":756,"column":10},"end":{"line":756,"column":40}},"256":{"start":{"line":757,"column":10},"end":{"line":757,"column":66}},"257":{"start":{"line":758,"column":10},"end":{"line":758,"column":78}},"258":{"start":{"line":759,"column":10},"end":{"line":765,"column":11}},"259":{"start":{"line":763,"column":12},"end":{"line":763,"column":63}},"260":{"start":{"line":764,"column":12},"end":{"line":764,"column":76}},"261":{"start":{"line":766,"column":10},"end":{"line":766,"column":40}},"262":{"start":{"line":768,"column":10},"end":{"line":771,"column":37}},"263":{"start":{"line":773,"column":10},"end":{"line":777,"column":27}},"264":{"start":{"line":779,"column":10},"end":{"line":782,"column":37}},"265":{"start":{"line":785,"column":6},"end":{"line":785,"column":36}},"266":{"start":{"line":787,"column":4},"end":{"line":787,"column":20}},"267":{"start":{"line":805,"column":2},"end":{"line":970,"column":3}},"268":{"start":{"line":806,"column":4},"end":{"line":806,"column":66}},"269":{"start":{"line":807,"column":4},"end":{"line":823,"column":5}},"270":{"start":{"line":809,"column":6},"end":{"line":811,"column":25}},"271":{"start":{"line":812,"column":11},"end":{"line":823,"column":5}},"272":{"start":{"line":814,"column":6},"end":{"line":816,"column":26}},"273":{"start":{"line":819,"column":6},"end":{"line":822,"column":25}},"274":{"start":{"line":824,"column":4},"end":{"line":828,"column":5}},"275":{"start":{"line":826,"column":6},"end":{"line":827,"column":60}},"276":{"start":{"line":829,"column":4},"end":{"line":829,"column":37}},"277":{"start":{"line":830,"column":4},"end":{"line":849,"column":5}},"278":{"start":{"line":831,"column":6},"end":{"line":848,"column":7}},"279":{"start":{"line":832,"column":8},"end":{"line":840,"column":9}},"280":{"start":{"line":833,"column":10},"end":{"line":834,"column":80}},"281":{"start":{"line":837,"column":10},"end":{"line":839,"column":27}},"282":{"start":{"line":842,"column":8},"end":{"line":845,"column":20}},"283":{"start":{"line":847,"column":8},"end":{"line":847,"column":74}},"284":{"start":{"line":850,"column":4},"end":{"line":854,"column":5}},"285":{"start":{"line":851,"column":6},"end":{"line":851,"column":73}},"286":{"start":{"line":852,"column":6},"end":{"line":853,"column":57}},"287":{"start":{"line":855,"column":4},"end":{"line":855,"column":49}},"288":{"start":{"line":856,"column":4},"end":{"line":888,"column":5}},"289":{"start":{"line":860,"column":6},"end":{"line":862,"column":17}},"290":{"start":{"line":866,"column":6},"end":{"line":866,"column":51}},"291":{"start":{"line":870,"column":6},"end":{"line":883,"column":17}},"292":{"start":{"line":884,"column":6},"end":{"line":887,"column":14}},"293":{"start":{"line":890,"column":4},"end":{"line":890,"column":33}},"294":{"start":{"line":891,"column":4},"end":{"line":893,"column":5}},"295":{"start":{"line":892,"column":6},"end":{"line":892,"column":54}},"296":{"start":{"line":895,"column":4},"end":{"line":895,"column":68}},"297":{"start":{"line":896,"column":4},"end":{"line":901,"column":5}},"298":{"start":{"line":897,"column":6},"end":{"line":900,"column":18}},"299":{"start":{"line":903,"column":4},"end":{"line":903,"column":78}},"300":{"start":{"line":905,"column":4},"end":{"line":941,"column":33}},"301":{"start":{"line":942,"column":4},"end":{"line":944,"column":5}},"302":{"start":{"line":943,"column":6},"end":{"line":943,"column":33}},"303":{"start":{"line":946,"column":4},"end":{"line":967,"column":57}},"304":{"start":{"line":969,"column":4},"end":{"line":969,"column":78}},"305":{"start":{"line":972,"column":2},"end":{"line":978,"column":9}},"306":{"start":{"line":991,"column":2},"end":{"line":1112,"column":3}},"307":{"start":{"line":992,"column":4},"end":{"line":992,"column":42}},"308":{"start":{"line":993,"column":4},"end":{"line":993,"column":31}},"309":{"start":{"line":995,"column":4},"end":{"line":995,"column":38}},"310":{"start":{"line":997,"column":4},"end":{"line":997,"column":42}},"311":{"start":{"line":998,"column":4},"end":{"line":1000,"column":5}},"312":{"start":{"line":999,"column":6},"end":{"line":999,"column":38}},"313":{"start":{"line":1003,"column":4},"end":{"line":1003,"column":25}},"314":{"start":{"line":1005,"column":4},"end":{"line":1038,"column":5}},"315":{"start":{"line":1006,"column":6},"end":{"line":1006,"column":31}},"316":{"start":{"line":1007,"column":6},"end":{"line":1037,"column":7}},"317":{"start":{"line":1008,"column":8},"end":{"line":1018,"column":9}},"318":{"start":{"line":1009,"column":10},"end":{"line":1009,"column":27}},"319":{"start":{"line":1011,"column":10},"end":{"line":1013,"column":11}},"320":{"start":{"line":1012,"column":12},"end":{"line":1012,"column":46}},"321":{"start":{"line":1015,"column":10},"end":{"line":1017,"column":11}},"322":{"start":{"line":1016,"column":12},"end":{"line":1016,"column":24}},"323":{"start":{"line":1019,"column":13},"end":{"line":1037,"column":7}},"324":{"start":{"line":1020,"column":8},"end":{"line":1020,"column":34}},"325":{"start":{"line":1021,"column":8},"end":{"line":1021,"column":42}},"326":{"start":{"line":1022,"column":8},"end":{"line":1036,"column":9}},"327":{"start":{"line":1023,"column":10},"end":{"line":1023,"column":57}},"328":{"start":{"line":1024,"column":10},"end":{"line":1024,"column":37}},"329":{"start":{"line":1025,"column":10},"end":{"line":1025,"column":67}},"330":{"start":{"line":1026,"column":10},"end":{"line":1030,"column":11}},"331":{"start":{"line":1027,"column":12},"end":{"line":1027,"column":41}},"332":{"start":{"line":1028,"column":12},"end":{"line":1029,"column":63}},"333":{"start":{"line":1031,"column":10},"end":{"line":1031,"column":27}},"334":{"start":{"line":1032,"column":10},"end":{"line":1035,"column":11}},"335":{"start":{"line":1034,"column":12},"end":{"line":1034,"column":46}},"336":{"start":{"line":1041,"column":4},"end":{"line":1082,"column":5}},"337":{"start":{"line":1045,"column":6},"end":{"line":1048,"column":7}},"338":{"start":{"line":1046,"column":8},"end":{"line":1046,"column":45}},"339":{"start":{"line":1047,"column":8},"end":{"line":1047,"column":37}},"340":{"start":{"line":1047,"column":28},"end":{"line":1047,"column":35}},"341":{"start":{"line":1050,"column":6},"end":{"line":1070,"column":7}},"342":{"start":{"line":1052,"column":8},"end":{"line":1052,"column":62}},"343":{"start":{"line":1053,"column":8},"end":{"line":1053,"column":38}},"344":{"start":{"line":1054,"column":8},"end":{"line":1068,"column":9}},"345":{"start":{"line":1059,"column":10},"end":{"line":1059,"column":51}},"346":{"start":{"line":1062,"column":10},"end":{"line":1062,"column":39}},"347":{"start":{"line":1063,"column":10},"end":{"line":1063,"column":45}},"348":{"start":{"line":1064,"column":10},"end":{"line":1067,"column":11}},"349":{"start":{"line":1065,"column":12},"end":{"line":1065,"column":39}},"350":{"start":{"line":1066,"column":12},"end":{"line":1066,"column":45}},"351":{"start":{"line":1069,"column":8},"end":{"line":1069,"column":25}},"352":{"start":{"line":1072,"column":6},"end":{"line":1072,"column":67}},"353":{"start":{"line":1075,"column":6},"end":{"line":1079,"column":7}},"354":{"start":{"line":1078,"column":8},"end":{"line":1078,"column":32}},"355":{"start":{"line":1081,"column":6},"end":{"line":1081,"column":37}},"356":{"start":{"line":1085,"column":4},"end":{"line":1089,"column":5}},"357":{"start":{"line":1088,"column":6},"end":{"line":1088,"column":25}},"358":{"start":{"line":1092,"column":4},"end":{"line":1094,"column":5}},"359":{"start":{"line":1093,"column":6},"end":{"line":1093,"column":59}},"360":{"start":{"line":1096,"column":4},"end":{"line":1096,"column":42}},"361":{"start":{"line":1097,"column":4},"end":{"line":1097,"column":30}},"362":{"start":{"line":1098,"column":4},"end":{"line":1098,"column":81}},"363":{"start":{"line":1099,"column":4},"end":{"line":1109,"column":5}},"364":{"start":{"line":1100,"column":6},"end":{"line":1100,"column":24}},"365":{"start":{"line":1104,"column":6},"end":{"line":1104,"column":47}},"366":{"start":{"line":1105,"column":6},"end":{"line":1107,"column":7}},"367":{"start":{"line":1106,"column":8},"end":{"line":1106,"column":56}},"368":{"start":{"line":1108,"column":6},"end":{"line":1108,"column":25}},"369":{"start":{"line":1111,"column":4},"end":{"line":1111,"column":25}},"370":{"start":{"line":1127,"column":2},"end":{"line":1235,"column":3}},"371":{"start":{"line":1128,"column":4},"end":{"line":1128,"column":67}},"372":{"start":{"line":1129,"column":4},"end":{"line":1129,"column":63}},"373":{"start":{"line":1130,"column":4},"end":{"line":1130,"column":26}},"374":{"start":{"line":1132,"column":4},"end":{"line":1132,"column":32}},"375":{"start":{"line":1133,"column":4},"end":{"line":1133,"column":37}},"376":{"start":{"line":1135,"column":4},"end":{"line":1135,"column":24}},"377":{"start":{"line":1137,"column":4},"end":{"line":1137,"column":26}},"378":{"start":{"line":1138,"column":4},"end":{"line":1138,"column":30}},"379":{"start":{"line":1140,"column":4},"end":{"line":1140,"column":22}},"380":{"start":{"line":1142,"column":4},"end":{"line":1142,"column":38}},"381":{"start":{"line":1143,"column":4},"end":{"line":1143,"column":42}},"382":{"start":{"line":1146,"column":4},"end":{"line":1146,"column":28}},"383":{"start":{"line":1149,"column":4},"end":{"line":1149,"column":45}},"384":{"start":{"line":1150,"column":4},"end":{"line":1150,"column":18}},"385":{"start":{"line":1151,"column":4},"end":{"line":1158,"column":5}},"386":{"start":{"line":1152,"column":6},"end":{"line":1157,"column":7}},"387":{"start":{"line":1153,"column":8},"end":{"line":1153,"column":49}},"388":{"start":{"line":1154,"column":8},"end":{"line":1154,"column":49}},"389":{"start":{"line":1156,"column":8},"end":{"line":1156,"column":15}},"390":{"start":{"line":1159,"column":4},"end":{"line":1159,"column":26}},"391":{"start":{"line":1162,"column":4},"end":{"line":1173,"column":5}},"392":{"start":{"line":1163,"column":6},"end":{"line":1163,"column":36}},"393":{"start":{"line":1165,"column":6},"end":{"line":1165,"column":40}},"394":{"start":{"line":1166,"column":6},"end":{"line":1166,"column":22}},"395":{"start":{"line":1167,"column":6},"end":{"line":1169,"column":7}},"396":{"start":{"line":1168,"column":8},"end":{"line":1168,"column":17}},"397":{"start":{"line":1170,"column":6},"end":{"line":1170,"column":39}},"398":{"start":{"line":1171,"column":6},"end":{"line":1171,"column":39}},"399":{"start":{"line":1172,"column":6},"end":{"line":1172,"column":14}},"400":{"start":{"line":1175,"column":4},"end":{"line":1175,"column":47}},"401":{"start":{"line":1177,"column":4},"end":{"line":1177,"column":36}},"402":{"start":{"line":1178,"column":4},"end":{"line":1178,"column":19}},"403":{"start":{"line":1179,"column":4},"end":{"line":1182,"column":5}},"404":{"start":{"line":1180,"column":6},"end":{"line":1180,"column":44}},"405":{"start":{"line":1181,"column":6},"end":{"line":1181,"column":40}},"406":{"start":{"line":1183,"column":4},"end":{"line":1234,"column":5}},"407":{"start":{"line":1184,"column":6},"end":{"line":1184,"column":28}},"408":{"start":{"line":1185,"column":6},"end":{"line":1229,"column":7}},"409":{"start":{"line":1186,"column":8},"end":{"line":1186,"column":41}},"410":{"start":{"line":1187,"column":8},"end":{"line":1187,"column":59}},"411":{"start":{"line":1189,"column":8},"end":{"line":1189,"column":70}},"412":{"start":{"line":1191,"column":8},"end":{"line":1191,"column":44}},"413":{"start":{"line":1193,"column":8},"end":{"line":1193,"column":44}},"414":{"start":{"line":1194,"column":8},"end":{"line":1194,"column":23}},"415":{"start":{"line":1195,"column":8},"end":{"line":1219,"column":9}},"416":{"start":{"line":1203,"column":10},"end":{"line":1205,"column":11}},"417":{"start":{"line":1204,"column":12},"end":{"line":1204,"column":61}},"418":{"start":{"line":1206,"column":10},"end":{"line":1206,"column":42}},"419":{"start":{"line":1207,"column":10},"end":{"line":1207,"column":48}},"420":{"start":{"line":1208,"column":10},"end":{"line":1208,"column":52}},"421":{"start":{"line":1209,"column":10},"end":{"line":1209,"column":60}},"422":{"start":{"line":1210,"column":10},"end":{"line":1210,"column":47}},"423":{"start":{"line":1211,"column":10},"end":{"line":1211,"column":50}},"424":{"start":{"line":1212,"column":10},"end":{"line":1212,"column":37}},"425":{"start":{"line":1213,"column":10},"end":{"line":1218,"column":11}},"426":{"start":{"line":1214,"column":12},"end":{"line":1216,"column":74}},"427":{"start":{"line":1217,"column":12},"end":{"line":1217,"column":64}},"428":{"start":{"line":1221,"column":8},"end":{"line":1221,"column":26}},"429":{"start":{"line":1223,"column":8},"end":{"line":1225,"column":9}},"430":{"start":{"line":1224,"column":10},"end":{"line":1224,"column":25}},"431":{"start":{"line":1226,"column":8},"end":{"line":1228,"column":9}},"432":{"start":{"line":1227,"column":10},"end":{"line":1227,"column":31}},"433":{"start":{"line":1231,"column":6},"end":{"line":1233,"column":7}},"434":{"start":{"line":1232,"column":8},"end":{"line":1232,"column":46}},"435":{"start":{"line":1238,"column":2},"end":{"line":1238,"column":31}},"436":{"start":{"line":1255,"column":2},"end":{"line":1264,"column":3}},"437":{"start":{"line":1256,"column":4},"end":{"line":1263,"column":5}},"438":{"start":{"line":1257,"column":6},"end":{"line":1257,"column":34}},"439":{"start":{"line":1258,"column":6},"end":{"line":1262,"column":7}},"440":{"start":{"line":1259,"column":8},"end":{"line":1259,"column":43}},"441":{"start":{"line":1260,"column":13},"end":{"line":1262,"column":7}},"442":{"start":{"line":1261,"column":8},"end":{"line":1261,"column":68}},"443":{"start":{"line":1265,"column":2},"end":{"line":1274,"column":3}},"444":{"start":{"line":1266,"column":4},"end":{"line":1272,"column":5}},"445":{"start":{"line":1269,"column":6},"end":{"line":1271,"column":27}},"446":{"start":{"line":1273,"column":4},"end":{"line":1273,"column":42}},"447":{"start":{"line":1275,"column":2},"end":{"line":1275,"column":56}},"448":{"start":{"line":1276,"column":2},"end":{"line":1294,"column":72}},"449":{"start":{"line":1295,"column":2},"end":{"line":1313,"column":18}},"450":{"start":{"line":1314,"column":2},"end":{"line":1315,"column":74}},"451":{"start":{"line":1316,"column":2},"end":{"line":1321,"column":51}},"452":{"start":{"line":1322,"column":2},"end":{"line":1324,"column":22}},"453":{"start":{"line":1325,"column":2},"end":{"line":1331,"column":20}},"454":{"start":{"line":1332,"column":2},"end":{"line":1335,"column":22}},"455":{"start":{"line":1336,"column":2},"end":{"line":1340,"column":42}},"456":{"start":{"line":1341,"column":2},"end":{"line":1346,"column":36}},"457":{"start":{"line":1347,"column":2},"end":{"line":1352,"column":34}},"458":{"start":{"line":1353,"column":2},"end":{"line":1358,"column":28}},"459":{"start":{"line":1359,"column":2},"end":{"line":1363,"column":34}},"460":{"start":{"line":1364,"column":2},"end":{"line":1371,"column":24}},"461":{"start":{"line":1372,"column":2},"end":{"line":1376,"column":34}},"462":{"start":{"line":1377,"column":2},"end":{"line":1378,"column":67}},"463":{"start":{"line":1380,"column":2},"end":{"line":1403,"column":3}},"464":{"start":{"line":1381,"column":4},"end":{"line":1381,"column":46}},"465":{"start":{"line":1383,"column":4},"end":{"line":1402,"column":5}},"466":{"start":{"line":1385,"column":6},"end":{"line":1385,"column":71}},"467":{"start":{"line":1387,"column":6},"end":{"line":1387,"column":45}},"468":{"start":{"line":1388,"column":6},"end":{"line":1388,"column":30}},"469":{"start":{"line":1389,"column":6},"end":{"line":1389,"column":39}},"470":{"start":{"line":1390,"column":6},"end":{"line":1390,"column":22}},"471":{"start":{"line":1393,"column":6},"end":{"line":1393,"column":62}},"472":{"start":{"line":1397,"column":6},"end":{"line":1397,"column":39}},"473":{"start":{"line":1399,"column":6},"end":{"line":1401,"column":7}},"474":{"start":{"line":1400,"column":8},"end":{"line":1400,"column":45}},"475":{"start":{"line":1413,"column":2},"end":{"line":1436,"column":3}},"476":{"start":{"line":1414,"column":4},"end":{"line":1414,"column":50}},"477":{"start":{"line":1422,"column":4},"end":{"line":1422,"column":62}},"478":{"start":{"line":1423,"column":4},"end":{"line":1423,"column":37}},"479":{"start":{"line":1424,"column":4},"end":{"line":1426,"column":5}},"480":{"start":{"line":1425,"column":6},"end":{"line":1425,"column":52}},"481":{"start":{"line":1428,"column":4},"end":{"line":1433,"column":6}},"482":{"start":{"line":1434,"column":4},"end":{"line":1434,"column":24}},"483":{"start":{"line":1435,"column":4},"end":{"line":1435,"column":31}},"484":{"start":{"line":1447,"column":2},"end":{"line":1605,"column":3}},"485":{"start":{"line":1448,"column":4},"end":{"line":1448,"column":41}},"486":{"start":{"line":1449,"column":4},"end":{"line":1449,"column":45}},"487":{"start":{"line":1450,"column":4},"end":{"line":1450,"column":68}},"488":{"start":{"line":1450,"column":29},"end":{"line":1450,"column":66}},"489":{"start":{"line":1452,"column":4},"end":{"line":1452,"column":79}},"490":{"start":{"line":1453,"column":4},"end":{"line":1453,"column":22}},"491":{"start":{"line":1454,"column":4},"end":{"line":1458,"column":5}},"492":{"start":{"line":1455,"column":6},"end":{"line":1457,"column":7}},"493":{"start":{"line":1456,"column":8},"end":{"line":1456,"column":42}},"494":{"start":{"line":1459,"column":4},"end":{"line":1459,"column":24}},"495":{"start":{"line":1461,"column":4},"end":{"line":1461,"column":21}},"496":{"start":{"line":1462,"column":4},"end":{"line":1464,"column":5}},"497":{"start":{"line":1463,"column":6},"end":{"line":1463,"column":61}},"498":{"start":{"line":1463,"column":37},"end":{"line":1463,"column":56}},"499":{"start":{"line":1468,"column":4},"end":{"line":1468,"column":14}},"500":{"start":{"line":1469,"column":4},"end":{"line":1469,"column":26}},"501":{"start":{"line":1471,"column":4},"end":{"line":1471,"column":59}},"502":{"start":{"line":1472,"column":4},"end":{"line":1472,"column":42}},"503":{"start":{"line":1473,"column":4},"end":{"line":1473,"column":46}},"504":{"start":{"line":1474,"column":4},"end":{"line":1474,"column":43}},"505":{"start":{"line":1475,"column":4},"end":{"line":1475,"column":27}},"506":{"start":{"line":1476,"column":4},"end":{"line":1476,"column":45}},"507":{"start":{"line":1477,"column":4},"end":{"line":1477,"column":19}},"508":{"start":{"line":1479,"column":4},"end":{"line":1602,"column":5}},"509":{"start":{"line":1480,"column":6},"end":{"line":1482,"column":31}},"510":{"start":{"line":1483,"column":6},"end":{"line":1595,"column":7}},"511":{"start":{"line":1484,"column":8},"end":{"line":1484,"column":29}},"512":{"start":{"line":1488,"column":8},"end":{"line":1488,"column":26}},"513":{"start":{"line":1490,"column":10},"end":{"line":1508,"column":11}},"514":{"start":{"line":1491,"column":12},"end":{"line":1491,"column":39}},"515":{"start":{"line":1494,"column":12},"end":{"line":1494,"column":69}},"516":{"start":{"line":1495,"column":12},"end":{"line":1500,"column":13}},"517":{"start":{"line":1499,"column":14},"end":{"line":1499,"column":20}},"518":{"start":{"line":1501,"column":12},"end":{"line":1507,"column":13}},"519":{"start":{"line":1502,"column":14},"end":{"line":1502,"column":25}},"520":{"start":{"line":1503,"column":14},"end":{"line":1505,"column":68}},"521":{"start":{"line":1505,"column":44},"end":{"line":1505,"column":64}},"522":{"start":{"line":1506,"column":14},"end":{"line":1506,"column":20}},"523":{"start":{"line":1511,"column":8},"end":{"line":1511,"column":37}},"524":{"start":{"line":1512,"column":8},"end":{"line":1594,"column":9}},"525":{"start":{"line":1519,"column":10},"end":{"line":1519,"column":29}},"526":{"start":{"line":1520,"column":10},"end":{"line":1527,"column":11}},"527":{"start":{"line":1521,"column":12},"end":{"line":1521,"column":31}},"528":{"start":{"line":1522,"column":12},"end":{"line":1526,"column":13}},"529":{"start":{"line":1524,"column":14},"end":{"line":1524,"column":28}},"530":{"start":{"line":1525,"column":14},"end":{"line":1525,"column":20}},"531":{"start":{"line":1528,"column":10},"end":{"line":1593,"column":11}},"532":{"start":{"line":1531,"column":12},"end":{"line":1531,"column":45}},"533":{"start":{"line":1541,"column":12},"end":{"line":1541,"column":46}},"534":{"start":{"line":1542,"column":12},"end":{"line":1552,"column":13}},"535":{"start":{"line":1543,"column":14},"end":{"line":1543,"column":63}},"536":{"start":{"line":1545,"column":14},"end":{"line":1545,"column":26}},"537":{"start":{"line":1546,"column":14},"end":{"line":1549,"column":15}},"538":{"start":{"line":1548,"column":16},"end":{"line":1548,"column":73}},"539":{"start":{"line":1551,"column":14},"end":{"line":1551,"column":70}},"540":{"start":{"line":1551,"column":35},"end":{"line":1551,"column":68}},"541":{"start":{"line":1554,"column":12},"end":{"line":1554,"column":29}},"542":{"start":{"line":1555,"column":12},"end":{"line":1570,"column":13}},"543":{"start":{"line":1556,"column":14},"end":{"line":1556,"column":31}},"544":{"start":{"line":1558,"column":14},"end":{"line":1558,"column":52}},"545":{"start":{"line":1559,"column":14},"end":{"line":1559,"column":48}},"546":{"start":{"line":1560,"column":14},"end":{"line":1567,"column":23}},"547":{"start":{"line":1568,"column":14},"end":{"line":1569,"column":58}},"548":{"start":{"line":1574,"column":12},"end":{"line":1574,"column":45}},"549":{"start":{"line":1575,"column":12},"end":{"line":1582,"column":13}},"550":{"start":{"line":1576,"column":14},"end":{"line":1576,"column":68}},"551":{"start":{"line":1577,"column":14},"end":{"line":1581,"column":24}},"552":{"start":{"line":1583,"column":12},"end":{"line":1583,"column":70}},"553":{"start":{"line":1583,"column":28},"end":{"line":1583,"column":68}},"554":{"start":{"line":1586,"column":12},"end":{"line":1591,"column":14}},"555":{"start":{"line":1592,"column":12},"end":{"line":1592,"column":46}},"556":{"start":{"line":1596,"column":6},"end":{"line":1601,"column":7}},"557":{"start":{"line":1598,"column":8},"end":{"line":1598,"column":32}},"558":{"start":{"line":1599,"column":13},"end":{"line":1601,"column":7}},"559":{"start":{"line":1600,"column":8},"end":{"line":1600,"column":23}},"560":{"start":{"line":1604,"column":4},"end":{"line":1604,"column":13}},"561":{"start":{"line":1611,"column":2},"end":{"line":1636,"column":8}},"562":{"start":{"line":1650,"column":2},"end":{"line":1654,"column":3}},"563":{"start":{"line":1651,"column":4},"end":{"line":1653,"column":7}},"564":{"start":{"line":1652,"column":6},"end":{"line":1652,"column":16}}},"branchMap":{"1":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":6},"end":{"line":257,"column":6}},{"start":{"line":257,"column":6},"end":{"line":257,"column":6}}]},"2":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":13},"end":{"line":259,"column":13}},{"start":{"line":259,"column":13},"end":{"line":259,"column":13}}]},"3":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":6},"end":{"line":278,"column":6}},{"start":{"line":278,"column":6},"end":{"line":278,"column":6}}]},"4":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":6},"end":{"line":283,"column":6}},{"start":{"line":283,"column":6},"end":{"line":283,"column":6}}]},"5":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":13},"end":{"line":285,"column":13}},{"start":{"line":285,"column":13},"end":{"line":285,"column":13}}]},"6":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":17},"end":{"line":285,"column":26}},{"start":{"line":285,"column":30},"end":{"line":285,"column":39}}]},"7":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":13},"end":{"line":287,"column":13}},{"start":{"line":287,"column":13},"end":{"line":287,"column":13}}]},"8":{"line":287,"type":"binary-expr","locations":[{"start":{"line":287,"column":17},"end":{"line":287,"column":27}},{"start":{"line":287,"column":31},"end":{"line":287,"column":41}}]},"9":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":6},"end":{"line":295,"column":6}},{"start":{"line":295,"column":6},"end":{"line":295,"column":6}}]},"10":{"line":296,"type":"cond-expr","locations":[{"start":{"line":296,"column":34},"end":{"line":296,"column":40}},{"start":{"line":296,"column":43},"end":{"line":296,"column":48}}]},"11":{"line":299,"type":"cond-expr","locations":[{"start":{"line":300,"column":12},"end":{"line":300,"column":21}},{"start":{"line":300,"column":24},"end":{"line":300,"column":26}}]},"12":{"line":299,"type":"binary-expr","locations":[{"start":{"line":299,"column":14},"end":{"line":299,"column":25}},{"start":{"line":299,"column":29},"end":{"line":299,"column":39}},{"start":{"line":299,"column":43},"end":{"line":299,"column":53}},{"start":{"line":299,"column":57},"end":{"line":299,"column":67}}]},"13":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":6},"end":{"line":318,"column":6}},{"start":{"line":318,"column":6},"end":{"line":318,"column":6}}]},"14":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":8},"end":{"line":322,"column":8}},{"start":{"line":322,"column":8},"end":{"line":322,"column":8}}]},"15":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":10},"end":{"line":327,"column":10}},{"start":{"line":327,"column":10},"end":{"line":327,"column":10}}]},"16":{"line":327,"type":"binary-expr","locations":[{"start":{"line":327,"column":14},"end":{"line":327,"column":23}},{"start":{"line":327,"column":27},"end":{"line":327,"column":54}}]},"17":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":10},"end":{"line":338,"column":10}},{"start":{"line":338,"column":10},"end":{"line":338,"column":10}}]},"18":{"line":338,"type":"binary-expr","locations":[{"start":{"line":338,"column":16},"end":{"line":338,"column":24}},{"start":{"line":338,"column":28},"end":{"line":338,"column":39}}]},"19":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":12},"end":{"line":339,"column":12}},{"start":{"line":339,"column":12},"end":{"line":339,"column":12}}]},"20":{"line":339,"type":"binary-expr","locations":[{"start":{"line":339,"column":18},"end":{"line":339,"column":26}},{"start":{"line":339,"column":30},"end":{"line":339,"column":40}}]},"21":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":12},"end":{"line":342,"column":12}},{"start":{"line":342,"column":12},"end":{"line":342,"column":12}}]},"22":{"line":342,"type":"binary-expr","locations":[{"start":{"line":342,"column":18},"end":{"line":342,"column":26}},{"start":{"line":342,"column":30},"end":{"line":342,"column":41}}]},"23":{"line":351,"type":"binary-expr","locations":[{"start":{"line":351,"column":44},"end":{"line":351,"column":55}},{"start":{"line":351,"column":61},"end":{"line":351,"column":73}}]},"24":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":8},"end":{"line":356,"column":8}},{"start":{"line":356,"column":8},"end":{"line":356,"column":8}}]},"25":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":8},"end":{"line":366,"column":8}},{"start":{"line":366,"column":8},"end":{"line":366,"column":8}}]},"26":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":10},"end":{"line":367,"column":10}},{"start":{"line":367,"column":10},"end":{"line":367,"column":10}}]},"27":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":8},"end":{"line":403,"column":8}},{"start":{"line":403,"column":8},"end":{"line":403,"column":8}}]},"28":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":15},"end":{"line":406,"column":15}},{"start":{"line":406,"column":15},"end":{"line":406,"column":15}}]},"29":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":10},"end":{"line":408,"column":10}},{"start":{"line":408,"column":10},"end":{"line":408,"column":10}}]},"30":{"line":409,"type":"if","locations":[{"start":{"line":409,"column":12},"end":{"line":409,"column":12}},{"start":{"line":409,"column":12},"end":{"line":409,"column":12}}]},"31":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":8},"end":{"line":424,"column":8}},{"start":{"line":424,"column":8},"end":{"line":424,"column":8}}]},"32":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":8},"end":{"line":430,"column":8}},{"start":{"line":430,"column":8},"end":{"line":430,"column":8}}]},"33":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":10},"end":{"line":432,"column":10}},{"start":{"line":432,"column":10},"end":{"line":432,"column":10}}]},"34":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":15},"end":{"line":435,"column":15}},{"start":{"line":435,"column":15},"end":{"line":435,"column":15}}]},"35":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":10},"end":{"line":437,"column":10}},{"start":{"line":437,"column":10},"end":{"line":437,"column":10}}]},"36":{"line":437,"type":"binary-expr","locations":[{"start":{"line":437,"column":14},"end":{"line":437,"column":26}},{"start":{"line":437,"column":30},"end":{"line":437,"column":56}}]},"37":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":8},"end":{"line":446,"column":8}},{"start":{"line":446,"column":8},"end":{"line":446,"column":8}}]},"38":{"line":446,"type":"binary-expr","locations":[{"start":{"line":446,"column":12},"end":{"line":446,"column":28}},{"start":{"line":446,"column":32},"end":{"line":446,"column":52}}]},"39":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":6},"end":{"line":451,"column":6}},{"start":{"line":451,"column":6},"end":{"line":451,"column":6}}]},"40":{"line":451,"type":"binary-expr","locations":[{"start":{"line":451,"column":10},"end":{"line":451,"column":26}},{"start":{"line":451,"column":30},"end":{"line":451,"column":44}}]},"41":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":10},"end":{"line":455,"column":10}},{"start":{"line":455,"column":10},"end":{"line":455,"column":10}}]},"42":{"line":455,"type":"binary-expr","locations":[{"start":{"line":455,"column":14},"end":{"line":455,"column":27}},{"start":{"line":455,"column":31},"end":{"line":455,"column":42}}]},"43":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":17},"end":{"line":457,"column":17}},{"start":{"line":457,"column":17},"end":{"line":457,"column":17}}]},"44":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":6},"end":{"line":475,"column":6}},{"start":{"line":475,"column":6},"end":{"line":475,"column":6}}]},"45":{"line":475,"type":"binary-expr","locations":[{"start":{"line":475,"column":10},"end":{"line":475,"column":22}},{"start":{"line":475,"column":26},"end":{"line":475,"column":41}}]},"46":{"line":480,"type":"cond-expr","locations":[{"start":{"line":480,"column":56},"end":{"line":480,"column":60}},{"start":{"line":480,"column":63},"end":{"line":480,"column":66}}]},"47":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":6},"end":{"line":538,"column":6}},{"start":{"line":538,"column":6},"end":{"line":538,"column":6}}]},"48":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":8},"end":{"line":539,"column":8}},{"start":{"line":539,"column":8},"end":{"line":539,"column":8}}]},"49":{"line":544,"type":"if","locations":[{"start":{"line":544,"column":8},"end":{"line":544,"column":8}},{"start":{"line":544,"column":8},"end":{"line":544,"column":8}}]},"50":{"line":544,"type":"binary-expr","locations":[{"start":{"line":544,"column":12},"end":{"line":544,"column":29}},{"start":{"line":544,"column":33},"end":{"line":544,"column":50}}]},"51":{"line":549,"type":"if","locations":[{"start":{"line":549,"column":13},"end":{"line":549,"column":13}},{"start":{"line":549,"column":13},"end":{"line":549,"column":13}}]},"52":{"line":549,"type":"binary-expr","locations":[{"start":{"line":549,"column":17},"end":{"line":549,"column":26}},{"start":{"line":549,"column":30},"end":{"line":549,"column":39}}]},"53":{"line":551,"type":"if","locations":[{"start":{"line":551,"column":8},"end":{"line":551,"column":8}},{"start":{"line":551,"column":8},"end":{"line":551,"column":8}}]},"54":{"line":552,"type":"if","locations":[{"start":{"line":552,"column":10},"end":{"line":552,"column":10}},{"start":{"line":552,"column":10},"end":{"line":552,"column":10}}]},"55":{"line":581,"type":"if","locations":[{"start":{"line":581,"column":4},"end":{"line":581,"column":4}},{"start":{"line":581,"column":4},"end":{"line":581,"column":4}}]},"56":{"line":607,"type":"cond-expr","locations":[{"start":{"line":608,"column":13},"end":{"line":608,"column":34}},{"start":{"line":609,"column":12},"end":{"line":611,"column":19}}]},"57":{"line":608,"type":"cond-expr","locations":[{"start":{"line":608,"column":23},"end":{"line":608,"column":30}},{"start":{"line":608,"column":33},"end":{"line":608,"column":34}}]},"58":{"line":609,"type":"cond-expr","locations":[{"start":{"line":610,"column":13},"end":{"line":610,"column":56}},{"start":{"line":611,"column":12},"end":{"line":611,"column":19}}]},"59":{"line":610,"type":"cond-expr","locations":[{"start":{"line":610,"column":39},"end":{"line":610,"column":46}},{"start":{"line":610,"column":49},"end":{"line":610,"column":56}}]},"60":{"line":613,"type":"cond-expr","locations":[{"start":{"line":613,"column":33},"end":{"line":613,"column":42}},{"start":{"line":613,"column":45},"end":{"line":613,"column":52}}]},"61":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":8},"end":{"line":672,"column":8}},{"start":{"line":672,"column":8},"end":{"line":672,"column":8}}]},"62":{"line":679,"type":"if","locations":[{"start":{"line":679,"column":8},"end":{"line":679,"column":8}},{"start":{"line":679,"column":8},"end":{"line":679,"column":8}}]},"63":{"line":710,"type":"binary-expr","locations":[{"start":{"line":710,"column":19},"end":{"line":710,"column":46}},{"start":{"line":710,"column":50},"end":{"line":710,"column":52}}]},"64":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":8},"end":{"line":719,"column":8}},{"start":{"line":719,"column":8},"end":{"line":719,"column":8}}]},"65":{"line":723,"type":"if","locations":[{"start":{"line":723,"column":10},"end":{"line":723,"column":10}},{"start":{"line":723,"column":10},"end":{"line":723,"column":10}}]},"66":{"line":730,"type":"if","locations":[{"start":{"line":730,"column":14},"end":{"line":730,"column":14}},{"start":{"line":730,"column":14},"end":{"line":730,"column":14}}]},"67":{"line":736,"type":"if","locations":[{"start":{"line":736,"column":12},"end":{"line":736,"column":12}},{"start":{"line":736,"column":12},"end":{"line":736,"column":12}}]},"68":{"line":741,"type":"binary-expr","locations":[{"start":{"line":741,"column":23},"end":{"line":741,"column":40}},{"start":{"line":741,"column":44},"end":{"line":741,"column":77}}]},"69":{"line":742,"type":"if","locations":[{"start":{"line":742,"column":10},"end":{"line":742,"column":10}},{"start":{"line":742,"column":10},"end":{"line":742,"column":10}}]},"70":{"line":742,"type":"binary-expr","locations":[{"start":{"line":742,"column":14},"end":{"line":742,"column":24}},{"start":{"line":742,"column":28},"end":{"line":742,"column":68}}]},"71":{"line":742,"type":"binary-expr","locations":[{"start":{"line":742,"column":30},"end":{"line":742,"column":35}},{"start":{"line":742,"column":39},"end":{"line":742,"column":67}}]},"72":{"line":747,"type":"if","locations":[{"start":{"line":747,"column":10},"end":{"line":747,"column":10}},{"start":{"line":747,"column":10},"end":{"line":747,"column":10}}]},"73":{"line":753,"type":"if","locations":[{"start":{"line":753,"column":8},"end":{"line":753,"column":8}},{"start":{"line":753,"column":8},"end":{"line":753,"column":8}}]},"74":{"line":759,"type":"if","locations":[{"start":{"line":759,"column":10},"end":{"line":759,"column":10}},{"start":{"line":759,"column":10},"end":{"line":759,"column":10}}]},"75":{"line":807,"type":"if","locations":[{"start":{"line":807,"column":4},"end":{"line":807,"column":4}},{"start":{"line":807,"column":4},"end":{"line":807,"column":4}}]},"76":{"line":812,"type":"if","locations":[{"start":{"line":812,"column":11},"end":{"line":812,"column":11}},{"start":{"line":812,"column":11},"end":{"line":812,"column":11}}]},"77":{"line":824,"type":"if","locations":[{"start":{"line":824,"column":4},"end":{"line":824,"column":4}},{"start":{"line":824,"column":4},"end":{"line":824,"column":4}}]},"78":{"line":830,"type":"if","locations":[{"start":{"line":830,"column":4},"end":{"line":830,"column":4}},{"start":{"line":830,"column":4},"end":{"line":830,"column":4}}]},"79":{"line":831,"type":"if","locations":[{"start":{"line":831,"column":6},"end":{"line":831,"column":6}},{"start":{"line":831,"column":6},"end":{"line":831,"column":6}}]},"80":{"line":832,"type":"if","locations":[{"start":{"line":832,"column":8},"end":{"line":832,"column":8}},{"start":{"line":832,"column":8},"end":{"line":832,"column":8}}]},"81":{"line":850,"type":"if","locations":[{"start":{"line":850,"column":4},"end":{"line":850,"column":4}},{"start":{"line":850,"column":4},"end":{"line":850,"column":4}}]},"82":{"line":856,"type":"if","locations":[{"start":{"line":856,"column":4},"end":{"line":856,"column":4}},{"start":{"line":856,"column":4},"end":{"line":856,"column":4}}]},"83":{"line":860,"type":"cond-expr","locations":[{"start":{"line":861,"column":10},"end":{"line":861,"column":12}},{"start":{"line":862,"column":10},"end":{"line":862,"column":16}}]},"84":{"line":866,"type":"cond-expr","locations":[{"start":{"line":866,"column":34},"end":{"line":866,"column":37}},{"start":{"line":866,"column":40},"end":{"line":866,"column":50}}]},"85":{"line":891,"type":"if","locations":[{"start":{"line":891,"column":4},"end":{"line":891,"column":4}},{"start":{"line":891,"column":4},"end":{"line":891,"column":4}}]},"86":{"line":896,"type":"if","locations":[{"start":{"line":896,"column":4},"end":{"line":896,"column":4}},{"start":{"line":896,"column":4},"end":{"line":896,"column":4}}]},"87":{"line":942,"type":"if","locations":[{"start":{"line":942,"column":4},"end":{"line":942,"column":4}},{"start":{"line":942,"column":4},"end":{"line":942,"column":4}}]},"88":{"line":1007,"type":"if","locations":[{"start":{"line":1007,"column":6},"end":{"line":1007,"column":6}},{"start":{"line":1007,"column":6},"end":{"line":1007,"column":6}}]},"89":{"line":1007,"type":"binary-expr","locations":[{"start":{"line":1007,"column":10},"end":{"line":1007,"column":19}},{"start":{"line":1007,"column":23},"end":{"line":1007,"column":51}}]},"90":{"line":1008,"type":"if","locations":[{"start":{"line":1008,"column":8},"end":{"line":1008,"column":8}},{"start":{"line":1008,"column":8},"end":{"line":1008,"column":8}}]},"91":{"line":1011,"type":"if","locations":[{"start":{"line":1011,"column":10},"end":{"line":1011,"column":10}},{"start":{"line":1011,"column":10},"end":{"line":1011,"column":10}}]},"92":{"line":1019,"type":"if","locations":[{"start":{"line":1019,"column":13},"end":{"line":1019,"column":13}},{"start":{"line":1019,"column":13},"end":{"line":1019,"column":13}}]},"93":{"line":1019,"type":"binary-expr","locations":[{"start":{"line":1019,"column":18},"end":{"line":1019,"column":27}},{"start":{"line":1019,"column":31},"end":{"line":1019,"column":40}},{"start":{"line":1019,"column":45},"end":{"line":1019,"column":59}}]},"94":{"line":1022,"type":"if","locations":[{"start":{"line":1022,"column":8},"end":{"line":1022,"column":8}},{"start":{"line":1022,"column":8},"end":{"line":1022,"column":8}}]},"95":{"line":1026,"type":"if","locations":[{"start":{"line":1026,"column":10},"end":{"line":1026,"column":10}},{"start":{"line":1026,"column":10},"end":{"line":1026,"column":10}}]},"96":{"line":1032,"type":"if","locations":[{"start":{"line":1032,"column":10},"end":{"line":1032,"column":10}},{"start":{"line":1032,"column":10},"end":{"line":1032,"column":10}}]},"97":{"line":1047,"type":"if","locations":[{"start":{"line":1047,"column":8},"end":{"line":1047,"column":8}},{"start":{"line":1047,"column":8},"end":{"line":1047,"column":8}}]},"98":{"line":1052,"type":"cond-expr","locations":[{"start":{"line":1052,"column":31},"end":{"line":1052,"column":53}},{"start":{"line":1052,"column":56},"end":{"line":1052,"column":61}}]},"99":{"line":1054,"type":"if","locations":[{"start":{"line":1054,"column":8},"end":{"line":1054,"column":8}},{"start":{"line":1054,"column":8},"end":{"line":1054,"column":8}}]},"100":{"line":1077,"type":"binary-expr","locations":[{"start":{"line":1077,"column":12},"end":{"line":1077,"column":46}},{"start":{"line":1077,"column":51},"end":{"line":1077,"column":72}}]},"101":{"line":1092,"type":"if","locations":[{"start":{"line":1092,"column":4},"end":{"line":1092,"column":4}},{"start":{"line":1092,"column":4},"end":{"line":1092,"column":4}}]},"102":{"line":1098,"type":"binary-expr","locations":[{"start":{"line":1098,"column":17},"end":{"line":1098,"column":75}},{"start":{"line":1098,"column":79},"end":{"line":1098,"column":80}}]},"103":{"line":1105,"type":"if","locations":[{"start":{"line":1105,"column":6},"end":{"line":1105,"column":6}},{"start":{"line":1105,"column":6},"end":{"line":1105,"column":6}}]},"104":{"line":1129,"type":"binary-expr","locations":[{"start":{"line":1129,"column":21},"end":{"line":1129,"column":35}},{"start":{"line":1129,"column":39},"end":{"line":1129,"column":62}}]},"105":{"line":1152,"type":"if","locations":[{"start":{"line":1152,"column":6},"end":{"line":1152,"column":6}},{"start":{"line":1152,"column":6},"end":{"line":1152,"column":6}}]},"106":{"line":1167,"type":"binary-expr","locations":[{"start":{"line":1167,"column":13},"end":{"line":1167,"column":36}},{"start":{"line":1167,"column":40},"end":{"line":1167,"column":73}}]},"107":{"line":1179,"type":"if","locations":[{"start":{"line":1179,"column":4},"end":{"line":1179,"column":4}},{"start":{"line":1179,"column":4},"end":{"line":1179,"column":4}}]},"108":{"line":1187,"type":"binary-expr","locations":[{"start":{"line":1187,"column":22},"end":{"line":1187,"column":42}},{"start":{"line":1187,"column":46},"end":{"line":1187,"column":58}}]},"109":{"line":1189,"type":"binary-expr","locations":[{"start":{"line":1189,"column":21},"end":{"line":1189,"column":53}},{"start":{"line":1189,"column":57},"end":{"line":1189,"column":69}}]},"110":{"line":1195,"type":"if","locations":[{"start":{"line":1195,"column":8},"end":{"line":1195,"column":8}},{"start":{"line":1195,"column":8},"end":{"line":1195,"column":8}}]},"111":{"line":1195,"type":"binary-expr","locations":[{"start":{"line":1195,"column":12},"end":{"line":1195,"column":35}},{"start":{"line":1197,"column":16},"end":{"line":1197,"column":63}}]},"112":{"line":1203,"type":"if","locations":[{"start":{"line":1203,"column":10},"end":{"line":1203,"column":10}},{"start":{"line":1203,"column":10},"end":{"line":1203,"column":10}}]},"113":{"line":1213,"type":"if","locations":[{"start":{"line":1213,"column":10},"end":{"line":1213,"column":10}},{"start":{"line":1213,"column":10},"end":{"line":1213,"column":10}}]},"114":{"line":1223,"type":"if","locations":[{"start":{"line":1223,"column":8},"end":{"line":1223,"column":8}},{"start":{"line":1223,"column":8},"end":{"line":1223,"column":8}}]},"115":{"line":1226,"type":"if","locations":[{"start":{"line":1226,"column":8},"end":{"line":1226,"column":8}},{"start":{"line":1226,"column":8},"end":{"line":1226,"column":8}}]},"116":{"line":1231,"type":"if","locations":[{"start":{"line":1231,"column":6},"end":{"line":1231,"column":6}},{"start":{"line":1231,"column":6},"end":{"line":1231,"column":6}}]},"117":{"line":1258,"type":"if","locations":[{"start":{"line":1258,"column":6},"end":{"line":1258,"column":6}},{"start":{"line":1258,"column":6},"end":{"line":1258,"column":6}}]},"118":{"line":1260,"type":"if","locations":[{"start":{"line":1260,"column":13},"end":{"line":1260,"column":13}},{"start":{"line":1260,"column":13},"end":{"line":1260,"column":13}}]},"119":{"line":1266,"type":"if","locations":[{"start":{"line":1266,"column":4},"end":{"line":1266,"column":4}},{"start":{"line":1266,"column":4},"end":{"line":1266,"column":4}}]},"120":{"line":1266,"type":"binary-expr","locations":[{"start":{"line":1266,"column":10},"end":{"line":1266,"column":19}},{"start":{"line":1266,"column":23},"end":{"line":1266,"column":68}}]},"121":{"line":1269,"type":"cond-expr","locations":[{"start":{"line":1270,"column":12},"end":{"line":1270,"column":28}},{"start":{"line":1271,"column":12},"end":{"line":1271,"column":26}}]},"122":{"line":1399,"type":"if","locations":[{"start":{"line":1399,"column":6},"end":{"line":1399,"column":6}},{"start":{"line":1399,"column":6},"end":{"line":1399,"column":6}}]},"123":{"line":1400,"type":"binary-expr","locations":[{"start":{"line":1400,"column":23},"end":{"line":1400,"column":24}},{"start":{"line":1400,"column":28},"end":{"line":1400,"column":38}},{"start":{"line":1400,"column":42},"end":{"line":1400,"column":43}}]},"124":{"line":1424,"type":"if","locations":[{"start":{"line":1424,"column":4},"end":{"line":1424,"column":4}},{"start":{"line":1424,"column":4},"end":{"line":1424,"column":4}}]},"125":{"line":1448,"type":"binary-expr","locations":[{"start":{"line":1448,"column":15},"end":{"line":1448,"column":23}},{"start":{"line":1448,"column":27},"end":{"line":1448,"column":40}}]},"126":{"line":1449,"type":"binary-expr","locations":[{"start":{"line":1449,"column":14},"end":{"line":1449,"column":32}},{"start":{"line":1449,"column":36},"end":{"line":1449,"column":44}}]},"127":{"line":1462,"type":"if","locations":[{"start":{"line":1462,"column":4},"end":{"line":1462,"column":4}},{"start":{"line":1462,"column":4},"end":{"line":1462,"column":4}}]},"128":{"line":1480,"type":"cond-expr","locations":[{"start":{"line":1481,"column":21},"end":{"line":1481,"column":41}},{"start":{"line":1482,"column":21},"end":{"line":1482,"column":29}}]},"129":{"line":1483,"type":"binary-expr","locations":[{"start":{"line":1483,"column":13},"end":{"line":1483,"column":32}},{"start":{"line":1483,"column":36},"end":{"line":1483,"column":60}}]},"130":{"line":1494,"type":"binary-expr","locations":[{"start":{"line":1494,"column":25},"end":{"line":1494,"column":33}},{"start":{"line":1494,"column":37},"end":{"line":1494,"column":45}},{"start":{"line":1494,"column":50},"end":{"line":1494,"column":68}}]},"131":{"line":1495,"type":"if","locations":[{"start":{"line":1495,"column":12},"end":{"line":1495,"column":12}},{"start":{"line":1495,"column":12},"end":{"line":1495,"column":12}}]},"132":{"line":1495,"type":"cond-expr","locations":[{"start":{"line":1496,"column":18},"end":{"line":1496,"column":47}},{"start":{"line":1497,"column":19},"end":{"line":1497,"column":60}}]},"133":{"line":1497,"type":"binary-expr","locations":[{"start":{"line":1497,"column":19},"end":{"line":1497,"column":27}},{"start":{"line":1497,"column":31},"end":{"line":1497,"column":60}}]},"134":{"line":1501,"type":"if","locations":[{"start":{"line":1501,"column":12},"end":{"line":1501,"column":12}},{"start":{"line":1501,"column":12},"end":{"line":1501,"column":12}}]},"135":{"line":1512,"type":"if","locations":[{"start":{"line":1512,"column":8},"end":{"line":1512,"column":8}},{"start":{"line":1512,"column":8},"end":{"line":1512,"column":8}}]},"136":{"line":1512,"type":"binary-expr","locations":[{"start":{"line":1512,"column":13},"end":{"line":1512,"column":28}},{"start":{"line":1512,"column":32},"end":{"line":1512,"column":61}},{"start":{"line":1516,"column":15},"end":{"line":1516,"column":47}}]},"137":{"line":1522,"type":"if","locations":[{"start":{"line":1522,"column":12},"end":{"line":1522,"column":12}},{"start":{"line":1522,"column":12},"end":{"line":1522,"column":12}}]},"138":{"line":1522,"type":"binary-expr","locations":[{"start":{"line":1522,"column":16},"end":{"line":1522,"column":37}},{"start":{"line":1523,"column":19},"end":{"line":1523,"column":30}},{"start":{"line":1523,"column":34},"end":{"line":1523,"column":65}}]},"139":{"line":1528,"type":"if","locations":[{"start":{"line":1528,"column":10},"end":{"line":1528,"column":10}},{"start":{"line":1528,"column":10},"end":{"line":1528,"column":10}}]},"140":{"line":1542,"type":"if","locations":[{"start":{"line":1542,"column":12},"end":{"line":1542,"column":12}},{"start":{"line":1542,"column":12},"end":{"line":1542,"column":12}}]},"141":{"line":1546,"type":"if","locations":[{"start":{"line":1546,"column":14},"end":{"line":1546,"column":14}},{"start":{"line":1546,"column":14},"end":{"line":1546,"column":14}}]},"142":{"line":1546,"type":"binary-expr","locations":[{"start":{"line":1546,"column":18},"end":{"line":1546,"column":32}},{"start":{"line":1546,"column":37},"end":{"line":1546,"column":70}},{"start":{"line":1547,"column":21},"end":{"line":1547,"column":49}}]},"143":{"line":1551,"type":"if","locations":[{"start":{"line":1551,"column":14},"end":{"line":1551,"column":14}},{"start":{"line":1551,"column":14},"end":{"line":1551,"column":14}}]},"144":{"line":1555,"type":"if","locations":[{"start":{"line":1555,"column":12},"end":{"line":1555,"column":12}},{"start":{"line":1555,"column":12},"end":{"line":1555,"column":12}}]},"145":{"line":1561,"type":"cond-expr","locations":[{"start":{"line":1562,"column":20},"end":{"line":1562,"column":46}},{"start":{"line":1563,"column":20},"end":{"line":1567,"column":21}}]},"146":{"line":1563,"type":"cond-expr","locations":[{"start":{"line":1565,"column":20},"end":{"line":1566,"column":50}},{"start":{"line":1567,"column":20},"end":{"line":1567,"column":21}}]},"147":{"line":1563,"type":"binary-expr","locations":[{"start":{"line":1563,"column":21},"end":{"line":1563,"column":32}},{"start":{"line":1564,"column":24},"end":{"line":1564,"column":52}}]},"148":{"line":1568,"type":"binary-expr","locations":[{"start":{"line":1568,"column":29},"end":{"line":1568,"column":39}},{"start":{"line":1569,"column":21},"end":{"line":1569,"column":57}}]},"149":{"line":1575,"type":"if","locations":[{"start":{"line":1575,"column":12},"end":{"line":1575,"column":12}},{"start":{"line":1575,"column":12},"end":{"line":1575,"column":12}}]},"150":{"line":1575,"type":"binary-expr","locations":[{"start":{"line":1575,"column":29},"end":{"line":1575,"column":48}},{"start":{"line":1575,"column":52},"end":{"line":1575,"column":61}}]},"151":{"line":1578,"type":"cond-expr","locations":[{"start":{"line":1579,"column":18},"end":{"line":1580,"column":39}},{"start":{"line":1581,"column":18},"end":{"line":1581,"column":23}}]},"152":{"line":1579,"type":"cond-expr","locations":[{"start":{"line":1580,"column":20},"end":{"line":1580,"column":32}},{"start":{"line":1580,"column":35},"end":{"line":1580,"column":39}}]},"153":{"line":1579,"type":"binary-expr","locations":[{"start":{"line":1579,"column":18},"end":{"line":1579,"column":29}},{"start":{"line":1579,"column":33},"end":{"line":1579,"column":51}}]},"154":{"line":1583,"type":"if","locations":[{"start":{"line":1583,"column":12},"end":{"line":1583,"column":12}},{"start":{"line":1583,"column":12},"end":{"line":1583,"column":12}}]},"155":{"line":1596,"type":"if","locations":[{"start":{"line":1596,"column":6},"end":{"line":1596,"column":6}},{"start":{"line":1596,"column":6},"end":{"line":1596,"column":6}}]},"156":{"line":1599,"type":"if","locations":[{"start":{"line":1599,"column":13},"end":{"line":1599,"column":13}},{"start":{"line":1599,"column":13},"end":{"line":1599,"column":13}}]},"157":{"line":1629,"type":"cond-expr","locations":[{"start":{"line":1630,"column":16},"end":{"line":1630,"column":55}},{"start":{"line":1631,"column":16},"end":{"line":1631,"column":48}}]},"158":{"line":1633,"type":"cond-expr","locations":[{"start":{"line":1634,"column":16},"end":{"line":1634,"column":49}},{"start":{"line":1635,"column":16},"end":{"line":1635,"column":42}}]},"159":{"line":1650,"type":"if","locations":[{"start":{"line":1650,"column":2},"end":{"line":1650,"column":2}},{"start":{"line":1650,"column":2},"end":{"line":1650,"column":2}}]},"160":{"line":1650,"type":"binary-expr","locations":[{"start":{"line":1650,"column":6},"end":{"line":1650,"column":34}},{"start":{"line":1650,"column":38},"end":{"line":1650,"column":51}}]}},"code":["// Copyright (C) 2006 Google Inc.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","//      http://www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// See the License for the specific language governing permissions and","// limitations under the License.","","","/**"," * @fileoverview"," * some functions for browser-side pretty printing of code contained in html."," *"," * <p>"," * For a fairly comprehensive set of languages see the"," * <a href=\"http://google-code-prettify.googlecode.com/svn/trunk/README.html#langs\">README</a>"," * file that came with this source.  At a minimum, the lexer should work on a"," * number of languages including C and friends, Java, Python, Bash, SQL, HTML,"," * XML, CSS, Javascript, and Makefiles.  It works passably on Ruby, PHP and Awk"," * and a subset of Perl, but, because of commenting conventions, doesn't work on"," * Smalltalk, Lisp-like, or CAML-like languages without an explicit lang class."," * <p>"," * Usage: <ol>"," * <li> include this source file in an html page via"," *   {@code <script type=\"text/javascript\" src=\"/path/to/prettify.js\"></script>}"," * <li> define style rules.  See the example page for examples."," * <li> mark the {@code <pre>} and {@code <code>} tags in your source with"," *    {@code class=prettyprint.}"," *    You can also use the (html deprecated) {@code <xmp>} tag, but the pretty"," *    printer needs to do more substantial DOM manipulations to support that, so"," *    some css styles may not be preserved."," * </ol>"," * That's it.  I wanted to keep the API as simple as possible, so there's no"," * need to specify which language the code is in, but if you wish, you can add"," * another class to the {@code <pre>} or {@code <code>} element to specify the"," * language, as in {@code <pre class=\"prettyprint lang-java\">}.  Any class that"," * starts with \"lang-\" followed by a file extension, specifies the file type."," * See the \"lang-*.js\" files in this directory for code that implements"," * per-language file handlers."," * <p>"," * Change log:<br>"," * cbeust, 2006/08/22"," * <blockquote>"," *   Java annotations (start with \"@\") are now captured as literals (\"lit\")"," * </blockquote>"," * @requires console"," */","","// JSLint declarations","/*global console, document, navigator, setTimeout, window, define */","","/** @define {boolean} */","var IN_GLOBAL_SCOPE = true;","","/**"," * Split {@code prettyPrint} into multiple timeouts so as not to interfere with"," * UI events."," * If set to {@code false}, {@code prettyPrint()} is synchronous."," */","window['PR_SHOULD_USE_CONTINUATION'] = true;","","/**"," * Pretty print a chunk of code."," * @param {string} sourceCodeHtml The HTML to pretty print."," * @param {string} opt_langExtension The language name to use."," *     Typically, a filename extension like 'cpp' or 'java'."," * @param {number|boolean} opt_numberLines True to number lines,"," *     or the 1-indexed number of the first line in sourceCodeHtml."," * @return {string} code as html, but prettier"," */","var prettyPrintOne;","/**"," * Find all the {@code <pre>} and {@code <code>} tags in the DOM with"," * {@code class=prettyprint} and prettify them."," *"," * @param {Function} opt_whenDone called when prettifying is done."," * @param {HTMLElement|HTMLDocument} opt_root an element or document"," *   containing all the elements to pretty print."," *   Defaults to {@code document.body}."," */","var prettyPrint;","","","(function () {","  var win = window;","  // Keyword lists for various languages.","  // We use things that coerce to strings to make them compact when minified","  // and to defeat aggressive optimizers that fold large string constants.","  var FLOW_CONTROL_KEYWORDS = [\"break,continue,do,else,for,if,return,while\"];","  var C_KEYWORDS = [FLOW_CONTROL_KEYWORDS,\"auto,case,char,const,default,\" + ","      \"double,enum,extern,float,goto,inline,int,long,register,short,signed,\" +","      \"sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"];","  var COMMON_KEYWORDS = [C_KEYWORDS,\"catch,class,delete,false,import,\" +","      \"new,operator,private,protected,public,this,throw,true,try,typeof\"];","  var CPP_KEYWORDS = [COMMON_KEYWORDS,\"alignof,align_union,asm,axiom,bool,\" +","      \"concept,concept_map,const_cast,constexpr,decltype,delegate,\" +","      \"dynamic_cast,explicit,export,friend,generic,late_check,\" +","      \"mutable,namespace,nullptr,property,reinterpret_cast,static_assert,\" +","      \"static_cast,template,typeid,typename,using,virtual,where\"];","  var JAVA_KEYWORDS = [COMMON_KEYWORDS,","      \"abstract,assert,boolean,byte,extends,final,finally,implements,import,\" +","      \"instanceof,interface,null,native,package,strictfp,super,synchronized,\" +","      \"throws,transient\"];","  var CSHARP_KEYWORDS = [COMMON_KEYWORDS,","      \"abstract,as,base,bool,by,byte,checked,decimal,delegate,descending,\" +","      \"dynamic,event,finally,fixed,foreach,from,group,implicit,in,interface,\" +","      \"internal,into,is,let,lock,null,object,out,override,orderby,params,\" +","      \"partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,\" +","      \"unchecked,unsafe,ushort,var,virtual,where\"];","  var COFFEE_KEYWORDS = \"all,and,by,catch,class,else,extends,false,finally,\" +","      \"for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,\" +","      \"throw,true,try,unless,until,when,while,yes\";","  var JSCRIPT_KEYWORDS = [COMMON_KEYWORDS,","      \"debugger,eval,export,function,get,null,set,undefined,var,with,\" +","      \"Infinity,NaN\"];","  var PERL_KEYWORDS = \"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,\" +","      \"goto,if,import,last,local,my,next,no,our,print,package,redo,require,\" +","      \"sub,undef,unless,until,use,wantarray,while,BEGIN,END\";","  var PYTHON_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"and,as,assert,class,def,del,\" +","      \"elif,except,exec,finally,from,global,import,in,is,lambda,\" +","      \"nonlocal,not,or,pass,print,raise,try,with,yield,\" +","      \"False,True,None\"];","  var RUBY_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"alias,and,begin,case,class,\" +","      \"def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,\" +","      \"rescue,retry,self,super,then,true,undef,unless,until,when,yield,\" +","      \"BEGIN,END\"];","   var RUST_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"as,assert,const,copy,drop,\" +","      \"enum,extern,fail,false,fn,impl,let,log,loop,match,mod,move,mut,priv,\" +","      \"pub,pure,ref,self,static,struct,true,trait,type,unsafe,use\"];","  var SH_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"case,done,elif,esac,eval,fi,\" +","      \"function,in,local,set,then,until\"];","  var ALL_KEYWORDS = [","      CPP_KEYWORDS, CSHARP_KEYWORDS, JSCRIPT_KEYWORDS, PERL_KEYWORDS,","      PYTHON_KEYWORDS, RUBY_KEYWORDS, SH_KEYWORDS];","  var C_TYPES = /^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/;","","  // token style names.  correspond to css classes","  /**","   * token style for a string literal","   * @const","   */","  var PR_STRING = 'str';","  /**","   * token style for a keyword","   * @const","   */","  var PR_KEYWORD = 'kwd';","  /**","   * token style for a comment","   * @const","   */","  var PR_COMMENT = 'com';","  /**","   * token style for a type","   * @const","   */","  var PR_TYPE = 'typ';","  /**","   * token style for a literal value.  e.g. 1, null, true.","   * @const","   */","  var PR_LITERAL = 'lit';","  /**","   * token style for a punctuation string.","   * @const","   */","  var PR_PUNCTUATION = 'pun';","  /**","   * token style for plain text.","   * @const","   */","  var PR_PLAIN = 'pln';","","  /**","   * token style for an sgml tag.","   * @const","   */","  var PR_TAG = 'tag';","  /**","   * token style for a markup declaration such as a DOCTYPE.","   * @const","   */","  var PR_DECLARATION = 'dec';","  /**","   * token style for embedded source.","   * @const","   */","  var PR_SOURCE = 'src';","  /**","   * token style for an sgml attribute name.","   * @const","   */","  var PR_ATTRIB_NAME = 'atn';","  /**","   * token style for an sgml attribute value.","   * @const","   */","  var PR_ATTRIB_VALUE = 'atv';","","  /**","   * A class that indicates a section of markup that is not code, e.g. to allow","   * embedding of line numbers within code listings.","   * @const","   */","  var PR_NOCODE = 'nocode';","","  ","  ","  /**","   * A set of tokens that can precede a regular expression literal in","   * javascript","   * http://web.archive.org/web/20070717142515/http://www.mozilla.org/js/language/js20/rationale/syntax.html","   * has the full list, but I've removed ones that might be problematic when","   * seen in languages that don't support regular expression literals.","   *","   * <p>Specifically, I've removed any keywords that can't precede a regexp","   * literal in a syntactically legal javascript program, and I've removed the","   * \"in\" keyword since it's not a keyword in many languages, and might be used","   * as a count of inches.","   *","   * <p>The link above does not accurately describe EcmaScript rules since","   * it fails to distinguish between (a=++/b/i) and (a++/b/i) but it works","   * very well in practice.","   *","   * @private","   * @const","   */","  var REGEXP_PRECEDER_PATTERN = '(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*';","  ","  // CAVEAT: this does not properly handle the case where a regular","  // expression immediately follows another since a regular expression may","  // have flags for case-sensitivity and the like.  Having regexp tokens","  // adjacent is not valid in any language I'm aware of, so I'm punting.","  // TODO: maybe style special characters inside a regexp as punctuation.","","  /**","   * Given a group of {@link RegExp}s, returns a {@code RegExp} that globally","   * matches the union of the sets of strings matched by the input RegExp.","   * Since it matches globally, if the input strings have a start-of-input","   * anchor (/^.../), it is ignored for the purposes of unioning.","   * @param {Array.<RegExp>} regexs non multiline, non-global regexs.","   * @return {RegExp} a global regex.","   */","  function combinePrefixPatterns(regexs) {","    var capturedGroupIndex = 0;","  ","    var needToFoldCase = false;","    var ignoreCase = false;","    for (var i = 0, n = regexs.length; i < n; ++i) {","      var regex = regexs[i];","      if (regex.ignoreCase) {","        ignoreCase = true;","      } else if (/[a-z]/i.test(regex.source.replace(","                     /\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi, ''))) {","        needToFoldCase = true;","        ignoreCase = false;","        break;","      }","    }","  ","    var escapeCharToCodeUnit = {","      'b': 8,","      't': 9,","      'n': 0xa,","      'v': 0xb,","      'f': 0xc,","      'r': 0xd","    };","  ","    function decodeEscape(charsetPart) {","      var cc0 = charsetPart.charCodeAt(0);","      if (cc0 !== 92 /* \\\\ */) {","        return cc0;","      }","      var c1 = charsetPart.charAt(1);","      cc0 = escapeCharToCodeUnit[c1];","      if (cc0) {","        return cc0;","      } else if ('0' <= c1 && c1 <= '7') {","        return parseInt(charsetPart.substring(1), 8);","      } else if (c1 === 'u' || c1 === 'x') {","        return parseInt(charsetPart.substring(2), 16);","      } else {","        return charsetPart.charCodeAt(1);","      }","    }","  ","    function encodeEscape(charCode) {","      if (charCode < 0x20) {","        return (charCode < 0x10 ? '\\\\x0' : '\\\\x') + charCode.toString(16);","      }","      var ch = String.fromCharCode(charCode);","      return (ch === '\\\\' || ch === '-' || ch === ']' || ch === '^')","          ? \"\\\\\" + ch : ch;","    }","  ","    function caseFoldCharset(charSet) {","      var charsetParts = charSet.substring(1, charSet.length - 1).match(","          new RegExp(","              '\\\\\\\\u[0-9A-Fa-f]{4}'","              + '|\\\\\\\\x[0-9A-Fa-f]{2}'","              + '|\\\\\\\\[0-3][0-7]{0,2}'","              + '|\\\\\\\\[0-7]{1,2}'","              + '|\\\\\\\\[\\\\s\\\\S]'","              + '|-'","              + '|[^-\\\\\\\\]',","              'g'));","      var ranges = [];","      var inverse = charsetParts[0] === '^';","  ","      var out = ['['];","      if (inverse) { out.push('^'); }","  ","      for (var i = inverse ? 1 : 0, n = charsetParts.length; i < n; ++i) {","        var p = charsetParts[i];","        if (/\\\\[bdsw]/i.test(p)) {  // Don't muck with named groups.","          out.push(p);","        } else {","          var start = decodeEscape(p);","          var end;","          if (i + 2 < n && '-' === charsetParts[i + 1]) {","            end = decodeEscape(charsetParts[i + 2]);","            i += 2;","          } else {","            end = start;","          }","          ranges.push([start, end]);","          // If the range might intersect letters, then expand it.","          // This case handling is too simplistic.","          // It does not deal with non-latin case folding.","          // It works for latin source code identifiers though.","          if (!(end < 65 || start > 122)) {","            if (!(end < 65 || start > 90)) {","              ranges.push([Math.max(65, start) | 32, Math.min(end, 90) | 32]);","            }","            if (!(end < 97 || start > 122)) {","              ranges.push([Math.max(97, start) & ~32, Math.min(end, 122) & ~32]);","            }","          }","        }","      }","  ","      // [[1, 10], [3, 4], [8, 12], [14, 14], [16, 16], [17, 17]]","      // -> [[1, 12], [14, 14], [16, 17]]","      ranges.sort(function (a, b) { return (a[0] - b[0]) || (b[1]  - a[1]); });","      var consolidatedRanges = [];","      var lastRange = [];","      for (var i = 0; i < ranges.length; ++i) {","        var range = ranges[i];","        if (range[0] <= lastRange[1] + 1) {","          lastRange[1] = Math.max(lastRange[1], range[1]);","        } else {","          consolidatedRanges.push(lastRange = range);","        }","      }","  ","      for (var i = 0; i < consolidatedRanges.length; ++i) {","        var range = consolidatedRanges[i];","        out.push(encodeEscape(range[0]));","        if (range[1] > range[0]) {","          if (range[1] + 1 > range[0]) { out.push('-'); }","          out.push(encodeEscape(range[1]));","        }","      }","      out.push(']');","      return out.join('');","    }","  ","    function allowAnywhereFoldCaseAndRenumberGroups(regex) {","      // Split into character sets, escape sequences, punctuation strings","      // like ('(', '(?:', ')', '^'), and runs of characters that do not","      // include any of the above.","      var parts = regex.source.match(","          new RegExp(","              '(?:'","              + '\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]'  // a character set","              + '|\\\\\\\\u[A-Fa-f0-9]{4}'  // a unicode escape","              + '|\\\\\\\\x[A-Fa-f0-9]{2}'  // a hex escape","              + '|\\\\\\\\[0-9]+'  // a back-reference or octal escape","              + '|\\\\\\\\[^ux0-9]'  // other escape sequence","              + '|\\\\(\\\\?[:!=]'  // start of a non-capturing group","              + '|[\\\\(\\\\)\\\\^]'  // start/end of a group, or line start","              + '|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+'  // run of other characters","              + ')',","              'g'));","      var n = parts.length;","  ","      // Maps captured group numbers to the number they will occupy in","      // the output or to -1 if that has not been determined, or to","      // undefined if they need not be capturing in the output.","      var capturedGroups = [];","  ","      // Walk over and identify back references to build the capturedGroups","      // mapping.","      for (var i = 0, groupIndex = 0; i < n; ++i) {","        var p = parts[i];","        if (p === '(') {","          // groups are 1-indexed, so max group index is count of '('","          ++groupIndex;","        } else if ('\\\\' === p.charAt(0)) {","          var decimalValue = +p.substring(1);","          if (decimalValue) {","            if (decimalValue <= groupIndex) {","              capturedGroups[decimalValue] = -1;","            } else {","              // Replace with an unambiguous escape sequence so that","              // an octal escape sequence does not turn into a backreference","              // to a capturing group from an earlier regex.","              parts[i] = encodeEscape(decimalValue);","            }","          }","        }","      }","  ","      // Renumber groups and reduce capturing groups to non-capturing groups","      // where possible.","      for (var i = 1; i < capturedGroups.length; ++i) {","        if (-1 === capturedGroups[i]) {","          capturedGroups[i] = ++capturedGroupIndex;","        }","      }","      for (var i = 0, groupIndex = 0; i < n; ++i) {","        var p = parts[i];","        if (p === '(') {","          ++groupIndex;","          if (!capturedGroups[groupIndex]) {","            parts[i] = '(?:';","          }","        } else if ('\\\\' === p.charAt(0)) {","          var decimalValue = +p.substring(1);","          if (decimalValue && decimalValue <= groupIndex) {","            parts[i] = '\\\\' + capturedGroups[decimalValue];","          }","        }","      }","  ","      // Remove any prefix anchors so that the output will match anywhere.","      // ^^ really does mean an anchored match though.","      for (var i = 0; i < n; ++i) {","        if ('^' === parts[i] && '^' !== parts[i + 1]) { parts[i] = ''; }","      }","  ","      // Expand letters to groups to handle mixing of case-sensitive and","      // case-insensitive patterns if necessary.","      if (regex.ignoreCase && needToFoldCase) {","        for (var i = 0; i < n; ++i) {","          var p = parts[i];","          var ch0 = p.charAt(0);","          if (p.length >= 2 && ch0 === '[') {","            parts[i] = caseFoldCharset(p);","          } else if (ch0 !== '\\\\') {","            // TODO: handle letters in numeric escapes.","            parts[i] = p.replace(","                /[a-zA-Z]/g,","                function (ch) {","                  var cc = ch.charCodeAt(0);","                  return '[' + String.fromCharCode(cc & ~32, cc | 32) + ']';","                });","          }","        }","      }","  ","      return parts.join('');","    }","  ","    var rewritten = [];","    for (var i = 0, n = regexs.length; i < n; ++i) {","      var regex = regexs[i];","      if (regex.global || regex.multiline) { throw new Error('' + regex); }","      rewritten.push(","          '(?:' + allowAnywhereFoldCaseAndRenumberGroups(regex) + ')');","    }","  ","    return new RegExp(rewritten.join('|'), ignoreCase ? 'gi' : 'g');","  }","","  /**","   * Split markup into a string of source code and an array mapping ranges in","   * that string to the text nodes in which they appear.","   *","   * <p>","   * The HTML DOM structure:</p>","   * <pre>","   * (Element   \"p\"","   *   (Element \"b\"","   *     (Text  \"print \"))       ; #1","   *   (Text    \"'Hello '\")      ; #2","   *   (Element \"br\")            ; #3","   *   (Text    \"  + 'World';\")) ; #4","   * </pre>","   * <p>","   * corresponds to the HTML","   * {@code <p><b>print </b>'Hello '<br>  + 'World';</p>}.</p>","   *","   * <p>","   * It will produce the output:</p>","   * <pre>","   * {","   *   sourceCode: \"print 'Hello '\\n  + 'World';\",","   *   //                     1          2","   *   //           012345678901234 5678901234567","   *   spans: [0, #1, 6, #2, 14, #3, 15, #4]","   * }","   * </pre>","   * <p>","   * where #1 is a reference to the {@code \"print \"} text node above, and so","   * on for the other text nodes.","   * </p>","   *","   * <p>","   * The {@code} spans array is an array of pairs.  Even elements are the start","   * indices of substrings, and odd elements are the text nodes (or BR elements)","   * that contain the text for those substrings.","   * Substrings continue until the next index or the end of the source.","   * </p>","   *","   * @param {Node} node an HTML DOM subtree containing source-code.","   * @param {boolean} isPreformatted true if white-space in text nodes should","   *    be considered significant.","   * @return {Object} source code and the text nodes in which they occur.","   */","  function extractSourceSpans(node, isPreformatted) {","    var nocode = /(?:^|\\s)nocode(?:\\s|$)/;","  ","    var chunks = [];","    var length = 0;","    var spans = [];","    var k = 0;","  ","    function walk(node) {","      var type = node.nodeType;","      if (type == 1) {  // Element","        if (nocode.test(node.className)) { return; }","        for (var child = node.firstChild; child; child = child.nextSibling) {","          walk(child);","        }","        var nodeName = node.nodeName.toLowerCase();","        if ('br' === nodeName || 'li' === nodeName) {","          chunks[k] = '\\n';","          spans[k << 1] = length++;","          spans[(k++ << 1) | 1] = node;","        }","      } else if (type == 3 || type == 4) {  // Text","        var text = node.nodeValue;","        if (text.length) {","          if (!isPreformatted) {","            text = text.replace(/[ \\t\\r\\n]+/g, ' ');","          } else {","            text = text.replace(/\\r\\n?/g, '\\n');  // Normalize newlines.","          }","          // TODO: handle tabs here?","          chunks[k] = text;","          spans[k << 1] = length;","          length += text.length;","          spans[(k++ << 1) | 1] = node;","        }","      }","    }","  ","    walk(node);","  ","    return {","      sourceCode: chunks.join('').replace(/\\n$/, ''),","      spans: spans","    };","  }","","  /**","   * Apply the given language handler to sourceCode and add the resulting","   * decorations to out.","   * @param {number} basePos the index of sourceCode within the chunk of source","   *    whose decorations are already present on out.","   */","  function appendDecorations(basePos, sourceCode, langHandler, out) {","    if (!sourceCode) { return; }","    var job = {","      sourceCode: sourceCode,","      basePos: basePos","    };","    langHandler(job);","    out.push.apply(out, job.decorations);","  }","","  var notWs = /\\S/;","","  /**","   * Given an element, if it contains only one child element and any text nodes","   * it contains contain only space characters, return the sole child element.","   * Otherwise returns undefined.","   * <p>","   * This is meant to return the CODE element in {@code <pre><code ...>} when","   * there is a single child element that contains all the non-space textual","   * content, but not to return anything where there are multiple child elements","   * as in {@code <pre><code>...</code><code>...</code></pre>} or when there","   * is textual content.","   */","  function childContentWrapper(element) {","    var wrapper = undefined;","    for (var c = element.firstChild; c; c = c.nextSibling) {","      var type = c.nodeType;","      wrapper = (type === 1)  // Element Node","          ? (wrapper ? element : c)","          : (type === 3)  // Text Node","          ? (notWs.test(c.nodeValue) ? element : wrapper)","          : wrapper;","    }","    return wrapper === element ? undefined : wrapper;","  }","","  /** Given triples of [style, pattern, context] returns a lexing function,","    * The lexing function interprets the patterns to find token boundaries and","    * returns a decoration list of the form","    * [index_0, style_0, index_1, style_1, ..., index_n, style_n]","    * where index_n is an index into the sourceCode, and style_n is a style","    * constant like PR_PLAIN.  index_n-1 <= index_n, and style_n-1 applies to","    * all characters in sourceCode[index_n-1:index_n].","    *","    * The stylePatterns is a list whose elements have the form","    * [style : string, pattern : RegExp, DEPRECATED, shortcut : string].","    *","    * Style is a style constant like PR_PLAIN, or can be a string of the","    * form 'lang-FOO', where FOO is a language extension describing the","    * language of the portion of the token in $1 after pattern executes.","    * E.g., if style is 'lang-lisp', and group 1 contains the text","    * '(hello (world))', then that portion of the token will be passed to the","    * registered lisp handler for formatting.","    * The text before and after group 1 will be restyled using this decorator","    * so decorators should take care that this doesn't result in infinite","    * recursion.  For example, the HTML lexer rule for SCRIPT elements looks","    * something like ['lang-js', /<[s]cript>(.+?)<\\/script>/].  This may match","    * '<script>foo()<\\/script>', which would cause the current decorator to","    * be called with '<script>' which would not match the same rule since","    * group 1 must not be empty, so it would be instead styled as PR_TAG by","    * the generic tag rule.  The handler registered for the 'js' extension would","    * then be called with 'foo()', and finally, the current decorator would","    * be called with '<\\/script>' which would not match the original rule and","    * so the generic tag rule would identify it as a tag.","    *","    * Pattern must only match prefixes, and if it matches a prefix, then that","    * match is considered a token with the same style.","    *","    * Context is applied to the last non-whitespace, non-comment token","    * recognized.","    *","    * Shortcut is an optional string of characters, any of which, if the first","    * character, gurantee that this pattern and only this pattern matches.","    *","    * @param {Array} shortcutStylePatterns patterns that always start with","    *   a known character.  Must have a shortcut string.","    * @param {Array} fallthroughStylePatterns patterns that will be tried in","    *   order if the shortcut ones fail.  May have shortcuts.","    *","    * @return {function (Object)} a","    *   function that takes source code and returns a list of decorations.","    */","  function createSimpleLexer(shortcutStylePatterns, fallthroughStylePatterns) {","    var shortcuts = {};","    var tokenizer;","    (function () {","      var allPatterns = shortcutStylePatterns.concat(fallthroughStylePatterns);","      var allRegexs = [];","      var regexKeys = {};","      for (var i = 0, n = allPatterns.length; i < n; ++i) {","        var patternParts = allPatterns[i];","        var shortcutChars = patternParts[3];","        if (shortcutChars) {","          for (var c = shortcutChars.length; --c >= 0;) {","            shortcuts[shortcutChars.charAt(c)] = patternParts;","          }","        }","        var regex = patternParts[1];","        var k = '' + regex;","        if (!regexKeys.hasOwnProperty(k)) {","          allRegexs.push(regex);","          regexKeys[k] = null;","        }","      }","      allRegexs.push(/[\\0-\\uffff]/);","      tokenizer = combinePrefixPatterns(allRegexs);","    })();","","    var nPatterns = fallthroughStylePatterns.length;","","    /**","     * Lexes job.sourceCode and produces an output array job.decorations of","     * style classes preceded by the position at which they start in","     * job.sourceCode in order.","     *","     * @param {Object} job an object like <pre>{","     *    sourceCode: {string} sourceText plain text,","     *    basePos: {int} position of job.sourceCode in the larger chunk of","     *        sourceCode.","     * }</pre>","     */","    var decorate = function (job) {","      var sourceCode = job.sourceCode, basePos = job.basePos;","      /** Even entries are positions in source in ascending order.  Odd enties","        * are style markers (e.g., PR_COMMENT) that run from that position until","        * the end.","        * @type {Array.<number|string>}","        */","      var decorations = [basePos, PR_PLAIN];","      var pos = 0;  // index into sourceCode","      var tokens = sourceCode.match(tokenizer) || [];","      var styleCache = {};","","      for (var ti = 0, nTokens = tokens.length; ti < nTokens; ++ti) {","        var token = tokens[ti];","        var style = styleCache[token];","        var match = void 0;","","        var isEmbedded;","        if (typeof style === 'string') {","          isEmbedded = false;","        } else {","          var patternParts = shortcuts[token.charAt(0)];","          if (patternParts) {","            match = token.match(patternParts[1]);","            style = patternParts[0];","          } else {","            for (var i = 0; i < nPatterns; ++i) {","              patternParts = fallthroughStylePatterns[i];","              match = token.match(patternParts[1]);","              if (match) {","                style = patternParts[0];","                break;","              }","            }","","            if (!match) {  // make sure that we make progress","              style = PR_PLAIN;","            }","          }","","          isEmbedded = style.length >= 5 && 'lang-' === style.substring(0, 5);","          if (isEmbedded && !(match && typeof match[1] === 'string')) {","            isEmbedded = false;","            style = PR_SOURCE;","          }","","          if (!isEmbedded) { styleCache[token] = style; }","        }","","        var tokenStart = pos;","        pos += token.length;","","        if (!isEmbedded) {","          decorations.push(basePos + tokenStart, style);","        } else {  // Treat group 1 as an embedded block of source code.","          var embeddedSource = match[1];","          var embeddedSourceStart = token.indexOf(embeddedSource);","          var embeddedSourceEnd = embeddedSourceStart + embeddedSource.length;","          if (match[2]) {","            // If embeddedSource can be blank, then it would match at the","            // beginning which would cause us to infinitely recurse on the","            // entire token, so we catch the right context in match[2].","            embeddedSourceEnd = token.length - match[2].length;","            embeddedSourceStart = embeddedSourceEnd - embeddedSource.length;","          }","          var lang = style.substring(5);","          // Decorate the left of the embedded source","          appendDecorations(","              basePos + tokenStart,","              token.substring(0, embeddedSourceStart),","              decorate, decorations);","          // Decorate the embedded source","          appendDecorations(","              basePos + tokenStart + embeddedSourceStart,","              embeddedSource,","              langHandlerForExtension(lang, embeddedSource),","              decorations);","          // Decorate the right of the embedded section","          appendDecorations(","              basePos + tokenStart + embeddedSourceEnd,","              token.substring(embeddedSourceEnd),","              decorate, decorations);","        }","      }","      job.decorations = decorations;","    };","    return decorate;","  }","","  /** returns a function that produces a list of decorations from source text.","    *","    * This code treats \", ', and ` as string delimiters, and \\ as a string","    * escape.  It does not recognize perl's qq() style strings.","    * It has no special handling for double delimiter escapes as in basic, or","    * the tripled delimiters used in python, but should work on those regardless","    * although in those cases a single string literal may be broken up into","    * multiple adjacent string literals.","    *","    * It recognizes C, C++, and shell style comments.","    *","    * @param {Object} options a set of optional parameters.","    * @return {function (Object)} a function that examines the source code","    *     in the input job and builds the decoration list.","    */","  function sourceDecorator(options) {","    var shortcutStylePatterns = [], fallthroughStylePatterns = [];","    if (options['tripleQuotedStrings']) {","      // '''multi-line-string''', 'single-line-string', and double-quoted","      shortcutStylePatterns.push(","          [PR_STRING,  /^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,","           null, '\\'\"']);","    } else if (options['multiLineStrings']) {","      // 'multi-line-string', \"multi-line-string\"","      shortcutStylePatterns.push(","          [PR_STRING,  /^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,","           null, '\\'\"`']);","    } else {","      // 'single-line-string', \"single-line-string\"","      shortcutStylePatterns.push(","          [PR_STRING,","           /^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,","           null, '\"\\'']);","    }","    if (options['verbatimStrings']) {","      // verbatim-string-literal production from the C# grammar.  See issue 93.","      fallthroughStylePatterns.push(","          [PR_STRING, /^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/, null]);","    }","    var hc = options['hashComments'];","    if (hc) {","      if (options['cStyleComments']) {","        if (hc > 1) {  // multiline hash comments","          shortcutStylePatterns.push(","              [PR_COMMENT, /^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/, null, '#']);","        } else {","          // Stop C preprocessor declarations at an unclosed open comment","          shortcutStylePatterns.push(","              [PR_COMMENT, /^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,","               null, '#']);","        }","        // #include <stdio.h>","        fallthroughStylePatterns.push(","            [PR_STRING,","             /^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,","             null]);","      } else {","        shortcutStylePatterns.push([PR_COMMENT, /^#[^\\r\\n]*/, null, '#']);","      }","    }","    if (options['cStyleComments']) {","      fallthroughStylePatterns.push([PR_COMMENT, /^\\/\\/[^\\r\\n]*/, null]);","      fallthroughStylePatterns.push(","          [PR_COMMENT, /^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/, null]);","    }","    var regexLiterals = options['regexLiterals'];","    if (regexLiterals) {","      /**","       * @const","       */","      var regexExcls = regexLiterals > 1","        ? ''  // Multiline regex literals","        : '\\n\\r';","      /**","       * @const","       */","      var regexAny = regexExcls ? '.' : '[\\\\S\\\\s]';","      /**","       * @const","       */","      var REGEX_LITERAL = (","          // A regular expression literal starts with a slash that is","          // not followed by * or / so that it is not confused with","          // comments.","          '/(?=[^/*' + regexExcls + '])'","          // and then contains any number of raw characters,","          + '(?:[^/\\\\x5B\\\\x5C' + regexExcls + ']'","          // escape sequences (\\x5C),","          +    '|\\\\x5C' + regexAny","          // or non-nesting character sets (\\x5B\\x5D);","          +    '|\\\\x5B(?:[^\\\\x5C\\\\x5D' + regexExcls + ']'","          +             '|\\\\x5C' + regexAny + ')*(?:\\\\x5D|$))+'","          // finally closed by a /.","          + '/');","      fallthroughStylePatterns.push(","          ['lang-regex',","           RegExp('^' + REGEXP_PRECEDER_PATTERN + '(' + REGEX_LITERAL + ')')","           ]);","    }","","    var types = options['types'];","    if (types) {","      fallthroughStylePatterns.push([PR_TYPE, types]);","    }","","    var keywords = (\"\" + options['keywords']).replace(/^ | $/g, '');","    if (keywords.length) {","      fallthroughStylePatterns.push(","          [PR_KEYWORD,","           new RegExp('^(?:' + keywords.replace(/[\\s,]+/g, '|') + ')\\\\b'),","           null]);","    }","","    shortcutStylePatterns.push([PR_PLAIN,       /^\\s+/, null, ' \\r\\n\\t\\xA0']);","","    var punctuation =","      // The Bash man page says","","      // A word is a sequence of characters considered as a single","      // unit by GRUB. Words are separated by metacharacters,","      // which are the following plus space, tab, and newline: { }","      // | & $ ; < >","      // ...","      ","      // A word beginning with # causes that word and all remaining","      // characters on that line to be ignored.","","      // which means that only a '#' after /(?:^|[{}|&$;<>\\s])/ starts a","      // comment but empirically","      // $ echo {#}","      // {#}","      // $ echo \\$#","      // $#","      // $ echo }#","      // }#","","      // so /(?:^|[|&;<>\\s])/ is more appropriate.","","      // http://gcc.gnu.org/onlinedocs/gcc-2.95.3/cpp_1.html#SEC3","      // suggests that this definition is compatible with a","      // default mode that tries to use a single token definition","      // to recognize both bash/python style comments and C","      // preprocessor directives.","","      // This definition of punctuation does not include # in the list of","      // follow-on exclusions, so # will not be broken before if preceeded","      // by a punctuation character.  We could try to exclude # after","      // [|&;<>] but that doesn't seem to cause many major problems.","      // If that does turn out to be a problem, we should change the below","      // when hc is truthy to include # in the run of punctuation characters","      // only when not followint [|&;<>].","      '^.[^\\\\s\\\\w.$@\\'\"`/\\\\\\\\]*';","    if (options['regexLiterals']) {","      punctuation += '(?!\\s*\\/)';","    }","","    fallthroughStylePatterns.push(","        // TODO(mikesamuel): recognize non-latin letters and numerals in idents","        [PR_LITERAL,     /^@[a-z_$][a-z_$@0-9]*/i, null],","        [PR_TYPE,        /^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/, null],","        [PR_PLAIN,       /^[a-z_$][a-z_$@0-9]*/i, null],","        [PR_LITERAL,","         new RegExp(","             '^(?:'","             // A hex number","             + '0x[a-f0-9]+'","             // or an octal or decimal number,","             + '|(?:\\\\d(?:_\\\\d+)*\\\\d*(?:\\\\.\\\\d*)?|\\\\.\\\\d\\\\+)'","             // possibly in scientific notation","             + '(?:e[+\\\\-]?\\\\d+)?'","             + ')'","             // with an optional modifier like UL for unsigned long","             + '[a-z]*', 'i'),","         null, '0123456789'],","        // Don't treat escaped quotes in bash as starting strings.","        // See issue 144.","        [PR_PLAIN,       /^\\\\[\\s\\S]?/, null],","        [PR_PUNCTUATION, new RegExp(punctuation), null]);","","    return createSimpleLexer(shortcutStylePatterns, fallthroughStylePatterns);","  }","","  var decorateSource = sourceDecorator({","        'keywords': ALL_KEYWORDS,","        'hashComments': true,","        'cStyleComments': true,","        'multiLineStrings': true,","        'regexLiterals': true","      });","","  /**","   * Given a DOM subtree, wraps it in a list, and puts each line into its own","   * list item.","   *","   * @param {Node} node modified in place.  Its content is pulled into an","   *     HTMLOListElement, and each line is moved into a separate list item.","   *     This requires cloning elements, so the input might not have unique","   *     IDs after numbering.","   * @param {boolean} isPreformatted true iff white-space in text nodes should","   *     be treated as significant.","   */","  function numberLines(node, opt_startLineNum, isPreformatted) {","    var nocode = /(?:^|\\s)nocode(?:\\s|$)/;","    var lineBreak = /\\r\\n?|\\n/;","  ","    var document = node.ownerDocument;","  ","    var li = document.createElement('li');","    while (node.firstChild) {","      li.appendChild(node.firstChild);","    }","    // An array of lines.  We split below, so this is initialized to one","    // un-split line.","    var listItems = [li];","  ","    function walk(node) {","      var type = node.nodeType;","      if (type == 1 && !nocode.test(node.className)) {  // Element","        if ('br' === node.nodeName) {","          breakAfter(node);","          // Discard the <BR> since it is now flush against a </LI>.","          if (node.parentNode) {","            node.parentNode.removeChild(node);","          }","        } else {","          for (var child = node.firstChild; child; child = child.nextSibling) {","            walk(child);","          }","        }","      } else if ((type == 3 || type == 4) && isPreformatted) {  // Text","        var text = node.nodeValue;","        var match = text.match(lineBreak);","        if (match) {","          var firstLine = text.substring(0, match.index);","          node.nodeValue = firstLine;","          var tail = text.substring(match.index + match[0].length);","          if (tail) {","            var parent = node.parentNode;","            parent.insertBefore(","              document.createTextNode(tail), node.nextSibling);","          }","          breakAfter(node);","          if (!firstLine) {","            // Don't leave blank text nodes in the DOM.","            node.parentNode.removeChild(node);","          }","        }","      }","    }","  ","    // Split a line after the given node.","    function breakAfter(lineEndNode) {","      // If there's nothing to the right, then we can skip ending the line","      // here, and move root-wards since splitting just before an end-tag","      // would require us to create a bunch of empty copies.","      while (!lineEndNode.nextSibling) {","        lineEndNode = lineEndNode.parentNode;","        if (!lineEndNode) { return; }","      }","  ","      function breakLeftOf(limit, copy) {","        // Clone shallowly if this node needs to be on both sides of the break.","        var rightSide = copy ? limit.cloneNode(false) : limit;","        var parent = limit.parentNode;","        if (parent) {","          // We clone the parent chain.","          // This helps us resurrect important styling elements that cross lines.","          // E.g. in <i>Foo<br>Bar</i>","          // should be rewritten to <li><i>Foo</i></li><li><i>Bar</i></li>.","          var parentClone = breakLeftOf(parent, 1);","          // Move the clone and everything to the right of the original","          // onto the cloned parent.","          var next = limit.nextSibling;","          parentClone.appendChild(rightSide);","          for (var sibling = next; sibling; sibling = next) {","            next = sibling.nextSibling;","            parentClone.appendChild(sibling);","          }","        }","        return rightSide;","      }","  ","      var copiedListItem = breakLeftOf(lineEndNode.nextSibling, 0);","  ","      // Walk the parent chain until we reach an unattached LI.","      for (var parent;","           // Check nodeType since IE invents document fragments.","           (parent = copiedListItem.parentNode) && parent.nodeType === 1;) {","        copiedListItem = parent;","      }","      // Put it on the list of lines for later processing.","      listItems.push(copiedListItem);","    }","  ","    // Split lines while there are lines left to split.","    for (var i = 0;  // Number of lines that have been split so far.","         i < listItems.length;  // length updated by breakAfter calls.","         ++i) {","      walk(listItems[i]);","    }","  ","    // Make sure numeric indices show correctly.","    if (opt_startLineNum === (opt_startLineNum|0)) {","      listItems[0].setAttribute('value', opt_startLineNum);","    }","  ","    var ol = document.createElement('ol');","    ol.className = 'linenums';","    var offset = Math.max(0, ((opt_startLineNum - 1 /* zero index */)) | 0) || 0;","    for (var i = 0, n = listItems.length; i < n; ++i) {","      li = listItems[i];","      // Stick a class on the LIs so that stylesheets can","      // color odd/even rows, or any other row pattern that","      // is co-prime with 10.","      li.className = 'L' + ((i + offset) % 10);","      if (!li.firstChild) {","        li.appendChild(document.createTextNode('\\xA0'));","      }","      ol.appendChild(li);","    }","  ","    node.appendChild(ol);","  }","  /**","   * Breaks {@code job.sourceCode} around style boundaries in","   * {@code job.decorations} and modifies {@code job.sourceNode} in place.","   * @param {Object} job like <pre>{","   *    sourceCode: {string} source as plain text,","   *    sourceNode: {HTMLElement} the element containing the source,","   *    spans: {Array.<number|Node>} alternating span start indices into source","   *       and the text node or element (e.g. {@code <BR>}) corresponding to that","   *       span.","   *    decorations: {Array.<number|string} an array of style classes preceded","   *       by the position at which they start in job.sourceCode in order","   * }</pre>","   * @private","   */","  function recombineTagsAndDecorations(job) {","    var isIE8OrEarlier = /\\bMSIE\\s(\\d+)/.exec(navigator.userAgent);","    isIE8OrEarlier = isIE8OrEarlier && +isIE8OrEarlier[1] <= 8;","    var newlineRe = /\\n/g;","  ","    var source = job.sourceCode;","    var sourceLength = source.length;","    // Index into source after the last code-unit recombined.","    var sourceIndex = 0;","  ","    var spans = job.spans;","    var nSpans = spans.length;","    // Index into spans after the last span which ends at or before sourceIndex.","    var spanIndex = 0;","  ","    var decorations = job.decorations;","    var nDecorations = decorations.length;","    // Index into decorations after the last decoration which ends at or before","    // sourceIndex.","    var decorationIndex = 0;","  ","    // Remove all zero-length decorations.","    decorations[nDecorations] = sourceLength;","    var decPos, i;","    for (i = decPos = 0; i < nDecorations;) {","      if (decorations[i] !== decorations[i + 2]) {","        decorations[decPos++] = decorations[i++];","        decorations[decPos++] = decorations[i++];","      } else {","        i += 2;","      }","    }","    nDecorations = decPos;","  ","    // Simplify decorations.","    for (i = decPos = 0; i < nDecorations;) {","      var startPos = decorations[i];","      // Conflate all adjacent decorations that use the same style.","      var startDec = decorations[i + 1];","      var end = i + 2;","      while (end + 2 <= nDecorations && decorations[end + 1] === startDec) {","        end += 2;","      }","      decorations[decPos++] = startPos;","      decorations[decPos++] = startDec;","      i = end;","    }","  ","    nDecorations = decorations.length = decPos;","  ","    var sourceNode = job.sourceNode;","    var oldDisplay;","    if (sourceNode) {","      oldDisplay = sourceNode.style.display;","      sourceNode.style.display = 'none';","    }","    try {","      var decoration = null;","      while (spanIndex < nSpans) {","        var spanStart = spans[spanIndex];","        var spanEnd = spans[spanIndex + 2] || sourceLength;","  ","        var decEnd = decorations[decorationIndex + 2] || sourceLength;","  ","        var end = Math.min(spanEnd, decEnd);","  ","        var textNode = spans[spanIndex + 1];","        var styledText;","        if (textNode.nodeType !== 1  // Don't muck with <BR>s or <LI>s","            // Don't introduce spans around empty text nodes.","            && (styledText = source.substring(sourceIndex, end))) {","          // This may seem bizarre, and it is.  Emitting LF on IE causes the","          // code to display with spaces instead of line breaks.","          // Emitting Windows standard issue linebreaks (CRLF) causes a blank","          // space to appear at the beginning of every line but the first.","          // Emitting an old Mac OS 9 line separator makes everything spiffy.","          if (isIE8OrEarlier) {","            styledText = styledText.replace(newlineRe, '\\r');","          }","          textNode.nodeValue = styledText;","          var document = textNode.ownerDocument;","          var span = document.createElement('span');","          span.className = decorations[decorationIndex + 1];","          var parentNode = textNode.parentNode;","          parentNode.replaceChild(span, textNode);","          span.appendChild(textNode);","          if (sourceIndex < spanEnd) {  // Split off a text node.","            spans[spanIndex + 1] = textNode","                // TODO: Possibly optimize by using '' if there's no flicker.","                = document.createTextNode(source.substring(end, spanEnd));","            parentNode.insertBefore(textNode, span.nextSibling);","          }","        }","  ","        sourceIndex = end;","  ","        if (sourceIndex >= spanEnd) {","          spanIndex += 2;","        }","        if (sourceIndex >= decEnd) {","          decorationIndex += 2;","        }","      }","    } finally {","      if (sourceNode) {","        sourceNode.style.display = oldDisplay;","      }","    }","  }","","  /** Maps language-specific file extensions to handlers. */","  var langHandlerRegistry = {};","  /** Register a language handler for the given file extensions.","    * @param {function (Object)} handler a function from source code to a list","    *      of decorations.  Takes a single argument job which describes the","    *      state of the computation.   The single parameter has the form","    *      {@code {","    *        sourceCode: {string} as plain text.","    *        decorations: {Array.<number|string>} an array of style classes","    *                     preceded by the position at which they start in","    *                     job.sourceCode in order.","    *                     The language handler should assigned this field.","    *        basePos: {int} the position of source in the larger source chunk.","    *                 All positions in the output decorations array are relative","    *                 to the larger source chunk.","    *      } }","    * @param {Array.<string>} fileExtensions","    */","  function registerLangHandler(handler, fileExtensions) {","    for (var i = fileExtensions.length; --i >= 0;) {","      var ext = fileExtensions[i];","      if (!langHandlerRegistry.hasOwnProperty(ext)) {","        langHandlerRegistry[ext] = handler;","      } else if (win['console']) {","        console['warn']('cannot override language handler %s', ext);","      }","    }","  }","  function langHandlerForExtension(extension, source) {","    if (!(extension && langHandlerRegistry.hasOwnProperty(extension))) {","      // Treat it as markup if the first non whitespace character is a < and","      // the last non-whitespace character is a >.","      extension = /^\\s*</.test(source)","          ? 'default-markup'","          : 'default-code';","    }","    return langHandlerRegistry[extension];","  }","  registerLangHandler(decorateSource, ['default-code']);","  registerLangHandler(","      createSimpleLexer(","          [],","          [","           [PR_PLAIN,       /^[^<?]+/],","           [PR_DECLARATION, /^<!\\w[^>]*(?:>|$)/],","           [PR_COMMENT,     /^<\\!--[\\s\\S]*?(?:-\\->|$)/],","           // Unescaped content in an unknown language","           ['lang-',        /^<\\?([\\s\\S]+?)(?:\\?>|$)/],","           ['lang-',        /^<%([\\s\\S]+?)(?:%>|$)/],","           [PR_PUNCTUATION, /^(?:<[%?]|[%?]>)/],","           ['lang-',        /^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],","           // Unescaped content in javascript.  (Or possibly vbscript).","           ['lang-js',      /^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],","           // Contains unescaped stylesheet content","           ['lang-css',     /^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],","           ['lang-in.tag',  /^(<\\/?[a-z][^<>]*>)/i]","          ]),","      ['default-markup', 'htm', 'html', 'mxml', 'xhtml', 'xml', 'xsl']);","  registerLangHandler(","      createSimpleLexer(","          [","           [PR_PLAIN,        /^[\\s]+/, null, ' \\t\\r\\n'],","           [PR_ATTRIB_VALUE, /^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/, null, '\\\"\\'']","           ],","          [","           [PR_TAG,          /^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],","           [PR_ATTRIB_NAME,  /^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],","           ['lang-uq.val',   /^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],","           [PR_PUNCTUATION,  /^[=<>\\/]+/],","           ['lang-js',       /^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],","           ['lang-js',       /^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],","           ['lang-js',       /^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],","           ['lang-css',      /^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],","           ['lang-css',      /^style\\s*=\\s*\\'([^\\']+)\\'/i],","           ['lang-css',      /^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]","           ]),","      ['in.tag']);","  registerLangHandler(","      createSimpleLexer([], [[PR_ATTRIB_VALUE, /^[\\s\\S]+/]]), ['uq.val']);","  registerLangHandler(sourceDecorator({","          'keywords': CPP_KEYWORDS,","          'hashComments': true,","          'cStyleComments': true,","          'types': C_TYPES","        }), ['c', 'cc', 'cpp', 'cxx', 'cyc', 'm']);","  registerLangHandler(sourceDecorator({","          'keywords': 'null,true,false'","        }), ['json']);","  registerLangHandler(sourceDecorator({","          'keywords': CSHARP_KEYWORDS,","          'hashComments': true,","          'cStyleComments': true,","          'verbatimStrings': true,","          'types': C_TYPES","        }), ['cs']);","  registerLangHandler(sourceDecorator({","          'keywords': JAVA_KEYWORDS,","          'cStyleComments': true","        }), ['java']);","  registerLangHandler(sourceDecorator({","          'keywords': SH_KEYWORDS,","          'hashComments': true,","          'multiLineStrings': true","        }), ['bash', 'bsh', 'csh', 'sh']);","  registerLangHandler(sourceDecorator({","          'keywords': PYTHON_KEYWORDS,","          'hashComments': true,","          'multiLineStrings': true,","          'tripleQuotedStrings': true","        }), ['cv', 'py', 'python']);","  registerLangHandler(sourceDecorator({","          'keywords': PERL_KEYWORDS,","          'hashComments': true,","          'multiLineStrings': true,","          'regexLiterals': 2  // multiline regex literals","        }), ['perl', 'pl', 'pm']);","  registerLangHandler(sourceDecorator({","          'keywords': RUBY_KEYWORDS,","          'hashComments': true,","          'multiLineStrings': true,","          'regexLiterals': true","        }), ['rb', 'ruby']);","  registerLangHandler(sourceDecorator({","          'keywords': JSCRIPT_KEYWORDS,","          'cStyleComments': true,","          'regexLiterals': true","        }), ['javascript', 'js']);","  registerLangHandler(sourceDecorator({","          'keywords': COFFEE_KEYWORDS,","          'hashComments': 3,  // ### style block comments","          'cStyleComments': true,","          'multilineStrings': true,","          'tripleQuotedStrings': true,","          'regexLiterals': true","        }), ['coffee']);","  registerLangHandler(sourceDecorator({","          'keywords': RUST_KEYWORDS,","          'cStyleComments': true,","          'multilineStrings': true","        }), ['rc', 'rs', 'rust']);","  registerLangHandler(","      createSimpleLexer([], [[PR_STRING, /^[\\s\\S]+/]]), ['regex']);","","  function applyDecorator(job) {","    var opt_langExtension = job.langExtension;","","    try {","      // Extract tags, and convert the source code to plain text.","      var sourceAndSpans = extractSourceSpans(job.sourceNode, job.pre);","      /** Plain text. @type {string} */","      var source = sourceAndSpans.sourceCode;","      job.sourceCode = source;","      job.spans = sourceAndSpans.spans;","      job.basePos = 0;","","      // Apply the appropriate language handler","      langHandlerForExtension(opt_langExtension, source)(job);","","      // Integrate the decorations and tags back into the source code,","      // modifying the sourceNode in place.","      recombineTagsAndDecorations(job);","    } catch (e) {","      if (win['console']) {","        console['log'](e && e['stack'] || e);","      }","    }","  }","","  /**","   * Pretty print a chunk of code.","   * @param sourceCodeHtml {string} The HTML to pretty print.","   * @param opt_langExtension {string} The language name to use.","   *     Typically, a filename extension like 'cpp' or 'java'.","   * @param opt_numberLines {number|boolean} True to number lines,","   *     or the 1-indexed number of the first line in sourceCodeHtml.","   */","  function $prettyPrintOne(sourceCodeHtml, opt_langExtension, opt_numberLines) {","    var container = document.createElement('div');","    // This could cause images to load and onload listeners to fire.","    // E.g. <img onerror=\"alert(1337)\" src=\"nosuchimage.png\">.","    // We assume that the inner HTML is from a trusted source.","    // The pre-tag is required for IE8 which strips newlines from innerHTML","    // when it is injected into a <pre> tag.","    // http://stackoverflow.com/questions/451486/pre-tag-loses-line-breaks-when-setting-innerhtml-in-ie","    // http://stackoverflow.com/questions/195363/inserting-a-newline-into-a-pre-tag-ie-javascript","    container.innerHTML = '<pre>' + sourceCodeHtml + '</pre>';","    container = container.firstChild;","    if (opt_numberLines) {","      numberLines(container, opt_numberLines, true);","    }","","    var job = {","      langExtension: opt_langExtension,","      numberLines: opt_numberLines,","      sourceNode: container,","      pre: 1","    };","    applyDecorator(job);","    return container.innerHTML;","  }","","   /**","    * Find all the {@code <pre>} and {@code <code>} tags in the DOM with","    * {@code class=prettyprint} and prettify them.","    *","    * @param {Function} opt_whenDone called when prettifying is done.","    * @param {HTMLElement|HTMLDocument} opt_root an element or document","    *   containing all the elements to pretty print.","    *   Defaults to {@code document.body}.","    */","  function $prettyPrint(opt_whenDone, opt_root) {","    var root = opt_root || document.body;","    var doc = root.ownerDocument || document;","    function byTagName(tn) { return root.getElementsByTagName(tn); }","    // fetch a list of nodes to rewrite","    var codeSegments = [byTagName('pre'), byTagName('code'), byTagName('xmp')];","    var elements = [];","    for (var i = 0; i < codeSegments.length; ++i) {","      for (var j = 0, n = codeSegments[i].length; j < n; ++j) {","        elements.push(codeSegments[i][j]);","      }","    }","    codeSegments = null;","","    var clock = Date;","    if (!clock['now']) {","      clock = { 'now': function () { return +(new Date); } };","    }","","    // The loop is broken into a series of continuations to make sure that we","    // don't make the browser unresponsive when rewriting a large page.","    var k = 0;","    var prettyPrintingJob;","","    var langExtensionRe = /\\blang(?:uage)?-([\\w.]+)(?!\\S)/;","    var prettyPrintRe = /\\bprettyprint\\b/;","    var prettyPrintedRe = /\\bprettyprinted\\b/;","    var preformattedTagNameRe = /pre|xmp/i;","    var codeRe = /^code$/i;","    var preCodeXmpRe = /^(?:pre|code|xmp)$/i;","    var EMPTY = {};","","    function doWork() {","      var endTime = (win['PR_SHOULD_USE_CONTINUATION'] ?","                     clock['now']() + 250 /* ms */ :","                     Infinity);","      for (; k < elements.length && clock['now']() < endTime; k++) {","        var cs = elements[k];","","        // Look for a preceding comment like","        // <?prettify lang=\"...\" linenums=\"...\"?>","        var attrs = EMPTY;","        {","          for (var preceder = cs; (preceder = preceder.previousSibling);) {","            var nt = preceder.nodeType;","            // <?foo?> is parsed by HTML 5 to a comment node (8)","            // like <!--?foo?-->, but in XML is a processing instruction","            var value = (nt === 7 || nt === 8) && preceder.nodeValue;","            if (value","                ? !/^\\??prettify\\b/.test(value)","                : (nt !== 3 || /\\S/.test(preceder.nodeValue))) {","              // Skip over white-space text nodes but not others.","              break;","            }","            if (value) {","              attrs = {};","              value.replace(","                  /\\b(\\w+)=([\\w:.%+-]+)/g,","                function (_, name, value) { attrs[name] = value; });","              break;","            }","          }","        }","","        var className = cs.className;","        if ((attrs !== EMPTY || prettyPrintRe.test(className))","            // Don't redo this if we've already done it.","            // This allows recalling pretty print to just prettyprint elements","            // that have been added to the page since last call.","            && !prettyPrintedRe.test(className)) {","","          // make sure this is not nested in an already prettified element","          var nested = false;","          for (var p = cs.parentNode; p; p = p.parentNode) {","            var tn = p.tagName;","            if (preCodeXmpRe.test(tn)","                && p.className && prettyPrintRe.test(p.className)) {","              nested = true;","              break;","            }","          }","          if (!nested) {","            // Mark done.  If we fail to prettyprint for whatever reason,","            // we shouldn't try again.","            cs.className += ' prettyprinted';","","            // If the classes includes a language extensions, use it.","            // Language extensions can be specified like","            //     <pre class=\"prettyprint lang-cpp\">","            // the language extension \"cpp\" is used to find a language handler","            // as passed to PR.registerLangHandler.","            // HTML5 recommends that a language be specified using \"language-\"","            // as the prefix instead.  Google Code Prettify supports both.","            // http://dev.w3.org/html5/spec-author-view/the-code-element.html","            var langExtension = attrs['lang'];","            if (!langExtension) {","              langExtension = className.match(langExtensionRe);","              // Support <pre class=\"prettyprint\"><code class=\"language-c\">","              var wrapper;","              if (!langExtension && (wrapper = childContentWrapper(cs))","                  && codeRe.test(wrapper.tagName)) {","                langExtension = wrapper.className.match(langExtensionRe);","              }","","              if (langExtension) { langExtension = langExtension[1]; }","            }","","            var preformatted;","            if (preformattedTagNameRe.test(cs.tagName)) {","              preformatted = 1;","            } else {","              var currentStyle = cs['currentStyle'];","              var defaultView = doc.defaultView;","              var whitespace = (","                  currentStyle","                  ? currentStyle['whiteSpace']","                  : (defaultView","                     && defaultView.getComputedStyle)","                  ? defaultView.getComputedStyle(cs, null)","                  .getPropertyValue('white-space')","                  : 0);","              preformatted = whitespace","                  && 'pre' === whitespace.substring(0, 3);","            }","","            // Look for a class like linenums or linenums:<n> where <n> is the","            // 1-indexed number of the first line.","            var lineNums = attrs['linenums'];","            if (!(lineNums = lineNums === 'true' || +lineNums)) {","              lineNums = className.match(/\\blinenums\\b(?::(\\d+))?/);","              lineNums =","                lineNums","                ? lineNums[1] && lineNums[1].length","                  ? +lineNums[1] : true","                : false;","            }","            if (lineNums) { numberLines(cs, lineNums, preformatted); }","","            // do the pretty printing","            prettyPrintingJob = {","              langExtension: langExtension,","              sourceNode: cs,","              numberLines: lineNums,","              pre: preformatted","            };","            applyDecorator(prettyPrintingJob);","          }","        }","      }","      if (k < elements.length) {","        // finish up in a continuation","        setTimeout(doWork, 250);","      } else if ('function' === typeof opt_whenDone) {","        opt_whenDone();","      }","    }","","    doWork();","  }","","  /**","   * Contains functions for creating and registering new language handlers.","   * @type {Object}","   */","  var PR = win['PR'] = {","        'createSimpleLexer': createSimpleLexer,","        'registerLangHandler': registerLangHandler,","        'sourceDecorator': sourceDecorator,","        'PR_ATTRIB_NAME': PR_ATTRIB_NAME,","        'PR_ATTRIB_VALUE': PR_ATTRIB_VALUE,","        'PR_COMMENT': PR_COMMENT,","        'PR_DECLARATION': PR_DECLARATION,","        'PR_KEYWORD': PR_KEYWORD,","        'PR_LITERAL': PR_LITERAL,","        'PR_NOCODE': PR_NOCODE,","        'PR_PLAIN': PR_PLAIN,","        'PR_PUNCTUATION': PR_PUNCTUATION,","        'PR_SOURCE': PR_SOURCE,","        'PR_STRING': PR_STRING,","        'PR_TAG': PR_TAG,","        'PR_TYPE': PR_TYPE,","        'prettyPrintOne':","           IN_GLOBAL_SCOPE","             ? (win['prettyPrintOne'] = $prettyPrintOne)","             : (prettyPrintOne = $prettyPrintOne),","        'prettyPrint': prettyPrint =","           IN_GLOBAL_SCOPE","             ? (win['prettyPrint'] = $prettyPrint)","             : (prettyPrint = $prettyPrint)","      };","","  // Make PR available via the Asynchronous Module Definition (AMD) API.","  // Per https://github.com/amdjs/amdjs-api/wiki/AMD:","  // The Asynchronous Module Definition (AMD) API specifies a","  // mechanism for defining modules such that the module and its","  // dependencies can be asynchronously loaded.","  // ...","  // To allow a clear indicator that a global define function (as","  // needed for script src browser loading) conforms to the AMD API,","  // any global define function SHOULD have a property called \"amd\"","  // whose value is an object. This helps avoid conflict with any","  // other existing JavaScript code that could have defined a define()","  // function that does not conform to the AMD API.","  if (typeof define === \"function\" && define['amd']) {","    define(\"google-code-prettify\", [], function () {","      return PR; ","    });","  }","})();",""],"l":{"59":2,"66":2,"77":0,"87":0,"90":0,"91":0,"95":0,"96":0,"99":0,"101":0,"106":0,"110":0,"116":0,"119":0,"122":0,"125":0,"129":0,"133":0,"136":0,"138":0,"141":0,"148":0,"153":0,"158":0,"163":0,"168":0,"173":0,"178":0,"184":0,"189":0,"194":0,"199":0,"204":0,"211":0,"234":0,"250":1,"251":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"261":0,"262":0,"263":0,"267":0,"276":1,"277":0,"278":0,"279":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"290":0,"294":1,"295":0,"296":0,"298":0,"299":0,"303":1,"304":0,"314":0,"315":0,"317":0,"318":0,"320":0,"321":0,"322":0,"323":0,"325":0,"326":0,"327":0,"328":0,"329":0,"331":0,"333":0,"338":0,"339":0,"340":0,"342":0,"343":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"359":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"371":0,"372":0,"375":1,"379":0,"392":0,"397":0,"401":0,"402":0,"403":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"415":0,"423":0,"424":0,"425":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"435":0,"436":0,"437":0,"438":0,"445":0,"446":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"459":0,"462":0,"463":0,"469":0,"472":0,"473":0,"474":0,"475":0,"476":0,"480":0,"528":1,"529":0,"531":0,"532":0,"533":0,"534":0,"536":1,"537":0,"538":0,"539":0,"540":0,"541":0,"543":0,"544":0,"545":0,"546":0,"547":0,"549":0,"550":0,"551":0,"552":0,"553":0,"555":0,"558":0,"559":0,"560":0,"561":0,"566":0,"568":0,"580":1,"581":0,"582":0,"586":0,"587":0,"590":0,"603":1,"604":0,"605":0,"606":0,"607":0,"613":0,"662":1,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"677":0,"678":0,"679":0,"680":0,"681":0,"684":0,"685":0,"688":0,"701":0,"702":0,"708":0,"709":0,"710":0,"711":0,"713":0,"714":0,"715":0,"716":0,"718":0,"719":0,"720":0,"722":0,"723":0,"724":0,"725":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"736":0,"737":0,"741":0,"742":0,"743":0,"744":0,"747":0,"750":0,"751":0,"753":0,"754":0,"756":0,"757":0,"758":0,"759":0,"763":0,"764":0,"766":0,"768":0,"773":0,"779":0,"785":0,"787":0,"805":1,"806":0,"807":0,"809":0,"812":0,"814":0,"819":0,"824":0,"826":0,"829":0,"830":0,"831":0,"832":0,"833":0,"837":0,"842":0,"847":0,"850":0,"851":0,"852":0,"855":0,"856":0,"860":0,"866":0,"870":0,"884":0,"890":0,"891":0,"892":0,"895":0,"896":0,"897":0,"903":0,"905":0,"942":0,"943":0,"946":0,"969":0,"972":0,"991":1,"992":0,"993":0,"995":0,"997":0,"998":0,"999":0,"1003":0,"1005":1,"1006":0,"1007":0,"1008":0,"1009":0,"1011":0,"1012":0,"1015":0,"1016":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1031":0,"1032":0,"1034":0,"1041":1,"1045":0,"1046":0,"1047":0,"1050":1,"1052":0,"1053":0,"1054":0,"1059":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1069":0,"1072":0,"1075":0,"1078":0,"1081":0,"1085":0,"1088":0,"1092":0,"1093":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1104":0,"1105":0,"1106":0,"1108":0,"1111":0,"1127":1,"1128":0,"1129":0,"1130":0,"1132":0,"1133":0,"1135":0,"1137":0,"1138":0,"1140":0,"1142":0,"1143":0,"1146":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1156":0,"1159":0,"1162":0,"1163":0,"1165":0,"1166":0,"1167":0,"1168":0,"1170":0,"1171":0,"1172":0,"1175":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1189":0,"1191":0,"1193":0,"1194":0,"1195":0,"1203":0,"1204":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1217":0,"1221":0,"1223":0,"1224":0,"1226":0,"1227":0,"1231":0,"1232":0,"1238":0,"1255":1,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1265":1,"1266":0,"1269":0,"1273":0,"1275":0,"1276":0,"1295":0,"1314":0,"1316":0,"1322":0,"1325":0,"1332":0,"1336":0,"1341":0,"1347":0,"1353":0,"1359":0,"1364":0,"1372":0,"1377":0,"1380":1,"1381":0,"1383":0,"1385":0,"1387":0,"1388":0,"1389":0,"1390":0,"1393":0,"1397":0,"1399":0,"1400":0,"1413":1,"1414":0,"1422":0,"1423":0,"1424":0,"1425":0,"1428":0,"1434":0,"1435":0,"1447":1,"1448":0,"1449":0,"1450":1,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1459":0,"1461":0,"1462":0,"1463":0,"1468":0,"1469":0,"1471":0,"1472":0,"1473":0,"1474":0,"1475":0,"1476":0,"1477":0,"1479":1,"1480":0,"1483":0,"1484":0,"1488":0,"1490":0,"1491":0,"1494":0,"1495":0,"1499":0,"1501":0,"1502":0,"1503":0,"1505":0,"1506":0,"1511":0,"1512":0,"1519":0,"1520":0,"1521":0,"1522":0,"1524":0,"1525":0,"1528":0,"1531":0,"1541":0,"1542":0,"1543":0,"1545":0,"1546":0,"1548":0,"1551":0,"1554":0,"1555":0,"1556":0,"1558":0,"1559":0,"1560":0,"1568":0,"1574":0,"1575":0,"1576":0,"1577":0,"1583":0,"1586":0,"1592":0,"1596":0,"1598":0,"1599":0,"1600":0,"1604":0,"1611":0,"1650":0,"1651":0,"1652":0}},"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/angular-template/js/site.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/angular-template/js/site.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":66},"end":{"line":3,"column":78}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":14},"end":{"line":19,"column":25}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":12},"end":{"line":23,"column":27}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":75}},"2":{"start":{"line":3,"column":0},"end":{"line":34,"column":3}},"3":{"start":{"line":5,"column":2},"end":{"line":5,"column":17}},"4":{"start":{"line":8,"column":2},"end":{"line":17,"column":3}},"5":{"start":{"line":10,"column":4},"end":{"line":16,"column":5}},"6":{"start":{"line":11,"column":6},"end":{"line":11,"column":31}},"7":{"start":{"line":12,"column":6},"end":{"line":15,"column":7}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":39}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":34}},"10":{"start":{"line":19,"column":2},"end":{"line":20,"column":37}},"11":{"start":{"line":19,"column":27},"end":{"line":19,"column":39}},"12":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":80}},"14":{"start":{"line":23,"column":29},"end":{"line":23,"column":77}},"15":{"start":{"line":26,"column":2},"end":{"line":33,"column":3}},"16":{"start":{"line":27,"column":4},"end":{"line":27,"column":29}},"17":{"start":{"line":28,"column":4},"end":{"line":32,"column":5}},"18":{"start":{"line":29,"column":6},"end":{"line":29,"column":39}},"19":{"start":{"line":31,"column":6},"end":{"line":31,"column":36}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]},"2":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":6}},{"start":{"line":12,"column":6},"end":{"line":12,"column":6}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"4":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]}},"code":["// Filter UI","var tocElements = document.getElementById('toc').getElementsByTagName('a');","document.getElementById('filter-input').addEventListener('keyup', function(e) {","","  var i, element;","","  // enter key","  if (e.keyCode === 13) {","    // go to the first displayed item in the toc","    for (i = 0; i < tocElements.length; i++) {","      element = tocElements[i];","      if (!element.classList.contains('hide')) {","        location.replace(element.href);","        return e.preventDefault();","      }","    }","  }","","  var match = function() { return true; },","    value = this.value.toLowerCase();","","  if (!value.match(/^\\s*$/)) {","    match = function(text) { return text.toLowerCase().indexOf(value) !== -1; };","  }","","  for (i = 0; i < tocElements.length; i++) {","    element = tocElements[i];","    if (match(element.innerHTML)) {","      element.classList.remove('hide');","    } else {","      element.classList.add('hide');","    }","  }","});",""],"l":{"2":2,"3":0,"5":0,"8":0,"10":0,"11":0,"12":0,"13":0,"14":0,"19":0,"22":0,"23":0,"26":0,"27":0,"28":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/common/plugins/ngdoc.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/common/plugins/ngdoc.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":21},"end":{"line":1,"column":42}}},"2":{"name":"(anonymous_2)","line":4,"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":37}}},"3":{"name":"(anonymous_3)","line":18,"loc":{"start":{"line":18,"column":14},"end":{"line":18,"column":36}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":14},"end":{"line":28,"column":36}}},"5":{"name":"(anonymous_5)","line":37,"loc":{"start":{"line":37,"column":14},"end":{"line":37,"column":36}}},"6":{"name":"(anonymous_6)","line":46,"loc":{"start":{"line":46,"column":14},"end":{"line":46,"column":36}}},"7":{"name":"(anonymous_7)","line":58,"loc":{"start":{"line":58,"column":14},"end":{"line":58,"column":36}}},"8":{"name":"(anonymous_8)","line":64,"loc":{"start":{"line":64,"column":38},"end":{"line":64,"column":52}}},"9":{"name":"(anonymous_9)","line":73,"loc":{"start":{"line":73,"column":14},"end":{"line":73,"column":36}}},"10":{"name":"(anonymous_10)","line":80,"loc":{"start":{"line":80,"column":14},"end":{"line":80,"column":36}}},"11":{"name":"(anonymous_11)","line":87,"loc":{"start":{"line":87,"column":14},"end":{"line":87,"column":36}}},"12":{"name":"(anonymous_12)","line":93,"loc":{"start":{"line":93,"column":14},"end":{"line":93,"column":37}}},"13":{"name":"parseParamTypes","line":110,"loc":{"start":{"line":110,"column":0},"end":{"line":110,"column":44}}},"14":{"name":"wrapDefaultNotation","line":164,"loc":{"start":{"line":164,"column":0},"end":{"line":164,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":108,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":12,"column":5}},"3":{"start":{"line":5,"column":6},"end":{"line":9,"column":7}},"4":{"start":{"line":6,"column":8},"end":{"line":6,"column":42}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":39}},"6":{"start":{"line":10,"column":6},"end":{"line":10,"column":31}},"7":{"start":{"line":14,"column":2},"end":{"line":22,"column":19}},"8":{"start":{"line":19,"column":6},"end":{"line":19,"column":66}},"9":{"start":{"line":24,"column":2},"end":{"line":31,"column":5}},"10":{"start":{"line":29,"column":6},"end":{"line":29,"column":58}},"11":{"start":{"line":33,"column":2},"end":{"line":40,"column":5}},"12":{"start":{"line":38,"column":6},"end":{"line":38,"column":66}},"13":{"start":{"line":42,"column":2},"end":{"line":54,"column":5}},"14":{"start":{"line":47,"column":6},"end":{"line":47,"column":80}},"15":{"start":{"line":49,"column":6},"end":{"line":52,"column":7}},"16":{"start":{"line":50,"column":8},"end":{"line":50,"column":34}},"17":{"start":{"line":51,"column":8},"end":{"line":51,"column":62}},"18":{"start":{"line":56,"column":2},"end":{"line":69,"column":5}},"19":{"start":{"line":59,"column":6},"end":{"line":63,"column":7}},"20":{"start":{"line":64,"column":6},"end":{"line":66,"column":8}},"21":{"start":{"line":65,"column":8},"end":{"line":65,"column":30}},"22":{"start":{"line":67,"column":6},"end":{"line":67,"column":26}},"23":{"start":{"line":71,"column":2},"end":{"line":76,"column":5}},"24":{"start":{"line":74,"column":6},"end":{"line":74,"column":34}},"25":{"start":{"line":78,"column":2},"end":{"line":83,"column":5}},"26":{"start":{"line":81,"column":6},"end":{"line":81,"column":35}},"27":{"start":{"line":85,"column":2},"end":{"line":90,"column":5}},"28":{"start":{"line":88,"column":6},"end":{"line":88,"column":36}},"29":{"start":{"line":92,"column":2},"end":{"line":107,"column":5}},"30":{"start":{"line":94,"column":6},"end":{"line":99,"column":8}},"31":{"start":{"line":101,"column":6},"end":{"line":105,"column":7}},"32":{"start":{"line":102,"column":8},"end":{"line":102,"column":44}},"33":{"start":{"line":104,"column":8},"end":{"line":104,"column":53}},"34":{"start":{"line":110,"column":0},"end":{"line":162,"column":1}},"35":{"start":{"line":111,"column":2},"end":{"line":113,"column":3}},"36":{"start":{"line":112,"column":4},"end":{"line":112,"column":22}},"37":{"start":{"line":115,"column":2},"end":{"line":120,"column":4}},"38":{"start":{"line":122,"column":2},"end":{"line":123,"column":31}},"39":{"start":{"line":124,"column":2},"end":{"line":124,"column":48}},"40":{"start":{"line":126,"column":2},"end":{"line":126,"column":55}},"41":{"start":{"line":128,"column":2},"end":{"line":132,"column":3}},"42":{"start":{"line":129,"column":4},"end":{"line":129,"column":33}},"43":{"start":{"line":130,"column":4},"end":{"line":130,"column":30}},"44":{"start":{"line":131,"column":4},"end":{"line":131,"column":11}},"45":{"start":{"line":134,"column":2},"end":{"line":134,"column":36}},"46":{"start":{"line":135,"column":2},"end":{"line":135,"column":46}},"47":{"start":{"line":137,"column":2},"end":{"line":137,"column":34}},"48":{"start":{"line":138,"column":2},"end":{"line":138,"column":31}},"49":{"start":{"line":139,"column":2},"end":{"line":139,"column":12}},"50":{"start":{"line":140,"column":2},"end":{"line":155,"column":3}},"51":{"start":{"line":141,"column":4},"end":{"line":141,"column":40}},"52":{"start":{"line":143,"column":4},"end":{"line":146,"column":5}},"53":{"start":{"line":144,"column":6},"end":{"line":144,"column":36}},"54":{"start":{"line":145,"column":6},"end":{"line":145,"column":33}},"55":{"start":{"line":148,"column":4},"end":{"line":152,"column":5}},"56":{"start":{"line":149,"column":6},"end":{"line":149,"column":58}},"57":{"start":{"line":151,"column":6},"end":{"line":151,"column":103}},"58":{"start":{"line":154,"column":4},"end":{"line":154,"column":53}},"59":{"start":{"line":157,"column":2},"end":{"line":157,"column":52}},"60":{"start":{"line":158,"column":2},"end":{"line":158,"column":46}},"61":{"start":{"line":159,"column":2},"end":{"line":159,"column":28}},"62":{"start":{"line":161,"column":2},"end":{"line":161,"column":22}},"63":{"start":{"line":164,"column":0},"end":{"line":180,"column":1}},"64":{"start":{"line":165,"column":2},"end":{"line":165,"column":22}},"65":{"start":{"line":167,"column":2},"end":{"line":177,"column":3}},"66":{"start":{"line":168,"column":4},"end":{"line":168,"column":22}},"67":{"start":{"line":169,"column":4},"end":{"line":169,"column":33}},"68":{"start":{"line":171,"column":4},"end":{"line":173,"column":5}},"69":{"start":{"line":172,"column":6},"end":{"line":172,"column":49}},"70":{"start":{"line":175,"column":4},"end":{"line":175,"column":22}},"71":{"start":{"line":176,"column":4},"end":{"line":176,"column":22}},"72":{"start":{"line":179,"column":2},"end":{"line":179,"column":24}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":6},"end":{"line":5,"column":6}},{"start":{"line":5,"column":6},"end":{"line":5,"column":6}}]},"2":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":6}},{"start":{"line":49,"column":6},"end":{"line":49,"column":6}}]},"3":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":6},"end":{"line":101,"column":6}},{"start":{"line":101,"column":6},"end":{"line":101,"column":6}}]},"4":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"5":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":2},"end":{"line":128,"column":2}},{"start":{"line":128,"column":2},"end":{"line":128,"column":2}}]},"6":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":143,"column":4}},{"start":{"line":143,"column":4},"end":{"line":143,"column":4}}]},"7":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":148,"column":4}},{"start":{"line":148,"column":4},"end":{"line":148,"column":4}}]},"8":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":58}},{"start":{"line":148,"column":62},"end":{"line":148,"column":106}}]},"9":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":43},"end":{"line":149,"column":50}},{"start":{"line":149,"column":54},"end":{"line":149,"column":56}}]},"10":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":79},"end":{"line":151,"column":86}},{"start":{"line":151,"column":90},"end":{"line":151,"column":92}}]},"11":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":38},"end":{"line":154,"column":45}},{"start":{"line":154,"column":49},"end":{"line":154,"column":51}}]},"12":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"13":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]}},"code":["exports.defineTags = function(dictionary) {","  dictionary.defineTag('ngdoc', {","    mustHaveValue: true,","    onTagged : function(doclet, tag) {","      if (tag.value == \"method\") {","        doclet.addTag('kind', 'function');","      } else {","        doclet.addTag('kind', 'class');","      }","      doclet.ngdoc = tag.value;","    }","  });","","  dictionary.defineTag('attribute', {","    mustHaveValue: true,","    canHaveType: true,","    canHaveName: true,","    onTagged: function(doclet, tag) {","      doclet.attributes = parseParamTypes(doclet.attributes, tag);","    }","  })","  .synonym('attr');","","  dictionary.defineTag('param', {","    mustHaveValue: true,","    canHaveType: true,","    canHaveName: true,","    onTagged: function(doclet, tag) {","      doclet.params = parseParamTypes(doclet.params, tag);","    }","  });","","  dictionary.defineTag('property', {","    mustHaveValue: true,","    canHaveType: true,","    canHaveName: true,","    onTagged: function(doclet, tag) {","      doclet.properties = parseParamTypes(doclet.properties, tag);","    }","  });","","  dictionary.defineTag('returns', {","    mustHaveValue: false,","    canHaveType: true,","    canHaveName: false,","    onTagged: function(doclet, tag) {","      var returnsText = new RegExp(/@returns? (\\{.*\\}.*)/).exec(doclet.comment);","","      if (returnsText) {","        tag.text = returnsText[1];","        doclet.returns = parseParamTypes(doclet.returns, tag);","      }","    }","  });","","  dictionary.defineTag('restrict', {","    mustHaveValue: true,","    onTagged: function(doclet, tag) {","      var restricts={","          'A': 'Attribute',","          'E': 'Element',","          'C': 'Class'","      }","      var s = tag.value.split('').map(function(aec) {","        return restricts[aec];","      })","      doclet.restrict = s;","    }","  });","","  dictionary.defineTag('priority', {","    mustHaveValue: true,","    onTagged: function(doclet, tag) {","      doclet.priority = tag.value;","    }","  });","","  dictionary.defineTag('eventType', {","    mustHaveValue: true,","    onTagged: function(doclet, tag) {","      doclet.eventType = tag.value;","    }","  });","","  dictionary.defineTag('animations', {","    mustHaveValue: true,","    onTagged: function(doclet, tag) {","      doclet.animations = tag.value;","    }","  });","","  dictionary.defineTag('scope', {","    onTagged: function (doclet, tag) {","      var scopeType = {","        'object': 'Isolated Scope',","        '{}': 'Isolated Scope',","        'true': 'Child Scope',","        'false': 'Shared Scope'","      };","","      if (!scopeType.hasOwnProperty(tag.value)) {","        doclet.directiveScope = 'New Scope';","      } else {","        doclet.directiveScope = scopeType[tag.value];","      }","    }","  });","};","","function parseParamTypes(docletParams, tag) {","  if (!docletParams) {","    docletParams = [];","  }","","  var result = {","    name: wrapDefaultNotation(tag),","    description: tag.value.description,","    optional: !!tag.value.optional,","    default: tag.value.defaultvalue","  };","","  var defaultTypes = ['boolean', 'string', 'expression', '*', 'mixed', 'number', 'null', 'undefined', 'function',","    'object', 'array', 'void'];","  var defaultTypeStarts = ['\\'', '\"', '[', '{'];","","  var typeDoc = new RegExp(/\\{(.*?)\\}/).exec(tag.text);","","  if (!typeDoc) {","    result.typeDefinition =  '*';","    docletParams.push(result);","    return;","  }","","  var types = typeDoc[1].split('|');","  var typeRegex = new RegExp(/(.*?)(\\[\\])?$/);","","  var parseTypeDefinitionUrl = '';","  var parseTypeDefinition = '';","  var i = 0;","  for (; i < types.length; i++) {","    var type = typeRegex.exec(types[i]);","","    if (i > 0) {","      parseTypeDefinitionUrl += '|';","      parseTypeDefinition += '|';","    }","","    if (defaultTypes.indexOf(type[1].toLowerCase()) !== -1 || defaultTypeStarts.indexOf(type[1][0]) !== -1) {","      parseTypeDefinitionUrl += type[1] + (type[2] || '');","    } else {","      parseTypeDefinitionUrl += '<a href=\"' + type[1] + '.html\">' + type[1] + (type[2] || '') + '</a>';","    }","","    parseTypeDefinition += type[1] + (type[2] || '');","  }","","  result.typeDefinitionUrl = parseTypeDefinitionUrl;","  result.typeDefinition = parseTypeDefinition;","  docletParams.push(result);","","  return docletParams;","}","","function wrapDefaultNotation(tag) {","  var returnName = '';","","  if (tag.value.optional) {","    returnName += '[';","    returnName += tag.value.name;","","    if (tag.value.defaultvalue) {","      returnName += '=' + tag.value.defaultvalue;","    }","","    returnName += ']';","    return returnName;","  }","","  return tag.value.name;","}"],"l":{"1":1,"2":0,"5":0,"6":0,"8":0,"10":0,"14":0,"19":0,"24":0,"29":0,"33":0,"38":0,"42":0,"47":0,"49":0,"50":0,"51":0,"56":0,"59":0,"64":0,"65":0,"67":0,"71":0,"74":0,"78":0,"81":0,"85":0,"88":0,"92":0,"94":0,"101":0,"102":0,"104":0,"110":1,"111":0,"112":0,"115":0,"122":0,"124":0,"126":0,"128":0,"129":0,"130":0,"131":0,"134":0,"135":0,"137":0,"138":0,"139":0,"140":0,"141":0,"143":0,"144":0,"145":0,"148":0,"149":0,"151":0,"154":0,"157":0,"158":0,"159":0,"161":0,"164":1,"165":0,"167":0,"168":0,"169":0,"171":0,"172":0,"175":0,"176":0,"179":0}},"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/default/js/prettify.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/default/js/prettify.js","s":{"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":1,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":1,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":0,"199":1,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":1,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":1,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":1,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":1,"337":0,"338":0,"339":0,"340":0,"341":1,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":1,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":1,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":1,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":1,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":1,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":1,"485":0,"486":0,"487":1,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":1,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0,0],"137":[0,0],"138":[0,0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"fnMap":{"1":{"name":"(anonymous_1)","line":90,"loc":{"start":{"line":90,"column":1},"end":{"line":90,"column":13}}},"2":{"name":"combinePrefixPatterns","line":250,"loc":{"start":{"line":250,"column":2},"end":{"line":250,"column":41}}},"3":{"name":"decodeEscape","line":276,"loc":{"start":{"line":276,"column":4},"end":{"line":276,"column":39}}},"4":{"name":"encodeEscape","line":294,"loc":{"start":{"line":294,"column":4},"end":{"line":294,"column":36}}},"5":{"name":"caseFoldCharset","line":303,"loc":{"start":{"line":303,"column":4},"end":{"line":303,"column":38}}},"6":{"name":"(anonymous_6)","line":351,"loc":{"start":{"line":351,"column":18},"end":{"line":351,"column":34}}},"7":{"name":"allowAnywhereFoldCaseAndRenumberGroups","line":375,"loc":{"start":{"line":375,"column":4},"end":{"line":375,"column":59}}},"8":{"name":"(anonymous_8)","line":461,"loc":{"start":{"line":461,"column":16},"end":{"line":461,"column":30}}},"9":{"name":"extractSourceSpans","line":528,"loc":{"start":{"line":528,"column":2},"end":{"line":528,"column":52}}},"10":{"name":"walk","line":536,"loc":{"start":{"line":536,"column":4},"end":{"line":536,"column":24}}},"11":{"name":"appendDecorations","line":580,"loc":{"start":{"line":580,"column":2},"end":{"line":580,"column":68}}},"12":{"name":"childContentWrapper","line":603,"loc":{"start":{"line":603,"column":2},"end":{"line":603,"column":40}}},"13":{"name":"createSimpleLexer","line":662,"loc":{"start":{"line":662,"column":2},"end":{"line":662,"column":78}}},"14":{"name":"(anonymous_14)","line":665,"loc":{"start":{"line":665,"column":5},"end":{"line":665,"column":17}}},"15":{"name":"(anonymous_15)","line":701,"loc":{"start":{"line":701,"column":19},"end":{"line":701,"column":34}}},"16":{"name":"sourceDecorator","line":805,"loc":{"start":{"line":805,"column":2},"end":{"line":805,"column":36}}},"17":{"name":"numberLines","line":991,"loc":{"start":{"line":991,"column":2},"end":{"line":991,"column":63}}},"18":{"name":"walk","line":1005,"loc":{"start":{"line":1005,"column":4},"end":{"line":1005,"column":24}}},"19":{"name":"breakAfter","line":1041,"loc":{"start":{"line":1041,"column":4},"end":{"line":1041,"column":37}}},"20":{"name":"breakLeftOf","line":1050,"loc":{"start":{"line":1050,"column":6},"end":{"line":1050,"column":40}}},"21":{"name":"recombineTagsAndDecorations","line":1127,"loc":{"start":{"line":1127,"column":2},"end":{"line":1127,"column":44}}},"22":{"name":"registerLangHandler","line":1255,"loc":{"start":{"line":1255,"column":2},"end":{"line":1255,"column":56}}},"23":{"name":"langHandlerForExtension","line":1265,"loc":{"start":{"line":1265,"column":2},"end":{"line":1265,"column":54}}},"24":{"name":"applyDecorator","line":1380,"loc":{"start":{"line":1380,"column":2},"end":{"line":1380,"column":31}}},"25":{"name":"$prettyPrintOne","line":1413,"loc":{"start":{"line":1413,"column":2},"end":{"line":1413,"column":79}}},"26":{"name":"$prettyPrint","line":1447,"loc":{"start":{"line":1447,"column":2},"end":{"line":1447,"column":48}}},"27":{"name":"byTagName","line":1450,"loc":{"start":{"line":1450,"column":4},"end":{"line":1450,"column":27}}},"28":{"name":"(anonymous_28)","line":1463,"loc":{"start":{"line":1463,"column":23},"end":{"line":1463,"column":35}}},"29":{"name":"doWork","line":1479,"loc":{"start":{"line":1479,"column":4},"end":{"line":1479,"column":22}}},"30":{"name":"(anonymous_30)","line":1505,"loc":{"start":{"line":1505,"column":16},"end":{"line":1505,"column":42}}},"31":{"name":"(anonymous_31)","line":1651,"loc":{"start":{"line":1651,"column":39},"end":{"line":1651,"column":51}}}},"statementMap":{"1":{"start":{"line":59,"column":0},"end":{"line":59,"column":27}},"2":{"start":{"line":66,"column":0},"end":{"line":66,"column":44}},"3":{"start":{"line":77,"column":0},"end":{"line":77,"column":19}},"4":{"start":{"line":87,"column":0},"end":{"line":87,"column":16}},"5":{"start":{"line":90,"column":0},"end":{"line":1655,"column":5}},"6":{"start":{"line":91,"column":2},"end":{"line":91,"column":19}},"7":{"start":{"line":95,"column":2},"end":{"line":95,"column":77}},"8":{"start":{"line":96,"column":2},"end":{"line":98,"column":74}},"9":{"start":{"line":99,"column":2},"end":{"line":100,"column":74}},"10":{"start":{"line":101,"column":2},"end":{"line":105,"column":66}},"11":{"start":{"line":106,"column":2},"end":{"line":109,"column":26}},"12":{"start":{"line":110,"column":2},"end":{"line":115,"column":51}},"13":{"start":{"line":116,"column":2},"end":{"line":118,"column":51}},"14":{"start":{"line":119,"column":2},"end":{"line":121,"column":22}},"15":{"start":{"line":122,"column":2},"end":{"line":124,"column":61}},"16":{"start":{"line":125,"column":2},"end":{"line":128,"column":25}},"17":{"start":{"line":129,"column":2},"end":{"line":132,"column":19}},"18":{"start":{"line":133,"column":3},"end":{"line":135,"column":68}},"19":{"start":{"line":136,"column":2},"end":{"line":137,"column":42}},"20":{"start":{"line":138,"column":2},"end":{"line":140,"column":51}},"21":{"start":{"line":141,"column":2},"end":{"line":141,"column":131}},"22":{"start":{"line":148,"column":2},"end":{"line":148,"column":24}},"23":{"start":{"line":153,"column":2},"end":{"line":153,"column":25}},"24":{"start":{"line":158,"column":2},"end":{"line":158,"column":25}},"25":{"start":{"line":163,"column":2},"end":{"line":163,"column":22}},"26":{"start":{"line":168,"column":2},"end":{"line":168,"column":25}},"27":{"start":{"line":173,"column":2},"end":{"line":173,"column":29}},"28":{"start":{"line":178,"column":2},"end":{"line":178,"column":23}},"29":{"start":{"line":184,"column":2},"end":{"line":184,"column":21}},"30":{"start":{"line":189,"column":2},"end":{"line":189,"column":29}},"31":{"start":{"line":194,"column":2},"end":{"line":194,"column":24}},"32":{"start":{"line":199,"column":2},"end":{"line":199,"column":29}},"33":{"start":{"line":204,"column":2},"end":{"line":204,"column":30}},"34":{"start":{"line":211,"column":2},"end":{"line":211,"column":27}},"35":{"start":{"line":234,"column":2},"end":{"line":234,"column":238}},"36":{"start":{"line":250,"column":2},"end":{"line":481,"column":3}},"37":{"start":{"line":251,"column":4},"end":{"line":251,"column":31}},"38":{"start":{"line":253,"column":4},"end":{"line":253,"column":31}},"39":{"start":{"line":254,"column":4},"end":{"line":254,"column":27}},"40":{"start":{"line":255,"column":4},"end":{"line":265,"column":5}},"41":{"start":{"line":256,"column":6},"end":{"line":256,"column":28}},"42":{"start":{"line":257,"column":6},"end":{"line":264,"column":7}},"43":{"start":{"line":258,"column":8},"end":{"line":258,"column":26}},"44":{"start":{"line":259,"column":13},"end":{"line":264,"column":7}},"45":{"start":{"line":261,"column":8},"end":{"line":261,"column":30}},"46":{"start":{"line":262,"column":8},"end":{"line":262,"column":27}},"47":{"start":{"line":263,"column":8},"end":{"line":263,"column":14}},"48":{"start":{"line":267,"column":4},"end":{"line":274,"column":6}},"49":{"start":{"line":276,"column":4},"end":{"line":292,"column":5}},"50":{"start":{"line":277,"column":6},"end":{"line":277,"column":42}},"51":{"start":{"line":278,"column":6},"end":{"line":280,"column":7}},"52":{"start":{"line":279,"column":8},"end":{"line":279,"column":19}},"53":{"start":{"line":281,"column":6},"end":{"line":281,"column":37}},"54":{"start":{"line":282,"column":6},"end":{"line":282,"column":37}},"55":{"start":{"line":283,"column":6},"end":{"line":291,"column":7}},"56":{"start":{"line":284,"column":8},"end":{"line":284,"column":19}},"57":{"start":{"line":285,"column":13},"end":{"line":291,"column":7}},"58":{"start":{"line":286,"column":8},"end":{"line":286,"column":53}},"59":{"start":{"line":287,"column":13},"end":{"line":291,"column":7}},"60":{"start":{"line":288,"column":8},"end":{"line":288,"column":54}},"61":{"start":{"line":290,"column":8},"end":{"line":290,"column":41}},"62":{"start":{"line":294,"column":4},"end":{"line":301,"column":5}},"63":{"start":{"line":295,"column":6},"end":{"line":297,"column":7}},"64":{"start":{"line":296,"column":8},"end":{"line":296,"column":74}},"65":{"start":{"line":298,"column":6},"end":{"line":298,"column":45}},"66":{"start":{"line":299,"column":6},"end":{"line":300,"column":27}},"67":{"start":{"line":303,"column":4},"end":{"line":373,"column":5}},"68":{"start":{"line":304,"column":6},"end":{"line":313,"column":20}},"69":{"start":{"line":314,"column":6},"end":{"line":314,"column":22}},"70":{"start":{"line":315,"column":6},"end":{"line":315,"column":44}},"71":{"start":{"line":317,"column":6},"end":{"line":317,"column":22}},"72":{"start":{"line":318,"column":6},"end":{"line":318,"column":37}},"73":{"start":{"line":318,"column":21},"end":{"line":318,"column":35}},"74":{"start":{"line":320,"column":6},"end":{"line":347,"column":7}},"75":{"start":{"line":321,"column":8},"end":{"line":321,"column":32}},"76":{"start":{"line":322,"column":8},"end":{"line":346,"column":9}},"77":{"start":{"line":323,"column":10},"end":{"line":323,"column":22}},"78":{"start":{"line":325,"column":10},"end":{"line":325,"column":38}},"79":{"start":{"line":326,"column":10},"end":{"line":326,"column":18}},"80":{"start":{"line":327,"column":10},"end":{"line":332,"column":11}},"81":{"start":{"line":328,"column":12},"end":{"line":328,"column":52}},"82":{"start":{"line":329,"column":12},"end":{"line":329,"column":19}},"83":{"start":{"line":331,"column":12},"end":{"line":331,"column":24}},"84":{"start":{"line":333,"column":10},"end":{"line":333,"column":36}},"85":{"start":{"line":338,"column":10},"end":{"line":345,"column":11}},"86":{"start":{"line":339,"column":12},"end":{"line":341,"column":13}},"87":{"start":{"line":340,"column":14},"end":{"line":340,"column":78}},"88":{"start":{"line":342,"column":12},"end":{"line":344,"column":13}},"89":{"start":{"line":343,"column":14},"end":{"line":343,"column":81}},"90":{"start":{"line":351,"column":6},"end":{"line":351,"column":79}},"91":{"start":{"line":351,"column":36},"end":{"line":351,"column":75}},"92":{"start":{"line":352,"column":6},"end":{"line":352,"column":34}},"93":{"start":{"line":353,"column":6},"end":{"line":353,"column":25}},"94":{"start":{"line":354,"column":6},"end":{"line":361,"column":7}},"95":{"start":{"line":355,"column":8},"end":{"line":355,"column":30}},"96":{"start":{"line":356,"column":8},"end":{"line":360,"column":9}},"97":{"start":{"line":357,"column":10},"end":{"line":357,"column":58}},"98":{"start":{"line":359,"column":10},"end":{"line":359,"column":53}},"99":{"start":{"line":363,"column":6},"end":{"line":370,"column":7}},"100":{"start":{"line":364,"column":8},"end":{"line":364,"column":42}},"101":{"start":{"line":365,"column":8},"end":{"line":365,"column":41}},"102":{"start":{"line":366,"column":8},"end":{"line":369,"column":9}},"103":{"start":{"line":367,"column":10},"end":{"line":367,"column":57}},"104":{"start":{"line":367,"column":41},"end":{"line":367,"column":55}},"105":{"start":{"line":368,"column":10},"end":{"line":368,"column":43}},"106":{"start":{"line":371,"column":6},"end":{"line":371,"column":20}},"107":{"start":{"line":372,"column":6},"end":{"line":372,"column":26}},"108":{"start":{"line":375,"column":4},"end":{"line":470,"column":5}},"109":{"start":{"line":379,"column":6},"end":{"line":391,"column":20}},"110":{"start":{"line":392,"column":6},"end":{"line":392,"column":27}},"111":{"start":{"line":397,"column":6},"end":{"line":397,"column":30}},"112":{"start":{"line":401,"column":6},"end":{"line":419,"column":7}},"113":{"start":{"line":402,"column":8},"end":{"line":402,"column":25}},"114":{"start":{"line":403,"column":8},"end":{"line":418,"column":9}},"115":{"start":{"line":405,"column":10},"end":{"line":405,"column":23}},"116":{"start":{"line":406,"column":15},"end":{"line":418,"column":9}},"117":{"start":{"line":407,"column":10},"end":{"line":407,"column":45}},"118":{"start":{"line":408,"column":10},"end":{"line":417,"column":11}},"119":{"start":{"line":409,"column":12},"end":{"line":416,"column":13}},"120":{"start":{"line":410,"column":14},"end":{"line":410,"column":48}},"121":{"start":{"line":415,"column":14},"end":{"line":415,"column":52}},"122":{"start":{"line":423,"column":6},"end":{"line":427,"column":7}},"123":{"start":{"line":424,"column":8},"end":{"line":426,"column":9}},"124":{"start":{"line":425,"column":10},"end":{"line":425,"column":51}},"125":{"start":{"line":428,"column":6},"end":{"line":441,"column":7}},"126":{"start":{"line":429,"column":8},"end":{"line":429,"column":25}},"127":{"start":{"line":430,"column":8},"end":{"line":440,"column":9}},"128":{"start":{"line":431,"column":10},"end":{"line":431,"column":23}},"129":{"start":{"line":432,"column":10},"end":{"line":434,"column":11}},"130":{"start":{"line":433,"column":12},"end":{"line":433,"column":29}},"131":{"start":{"line":435,"column":15},"end":{"line":440,"column":9}},"132":{"start":{"line":436,"column":10},"end":{"line":436,"column":45}},"133":{"start":{"line":437,"column":10},"end":{"line":439,"column":11}},"134":{"start":{"line":438,"column":12},"end":{"line":438,"column":59}},"135":{"start":{"line":445,"column":6},"end":{"line":447,"column":7}},"136":{"start":{"line":446,"column":8},"end":{"line":446,"column":72}},"137":{"start":{"line":446,"column":56},"end":{"line":446,"column":70}},"138":{"start":{"line":451,"column":6},"end":{"line":467,"column":7}},"139":{"start":{"line":452,"column":8},"end":{"line":466,"column":9}},"140":{"start":{"line":453,"column":10},"end":{"line":453,"column":27}},"141":{"start":{"line":454,"column":10},"end":{"line":454,"column":32}},"142":{"start":{"line":455,"column":10},"end":{"line":465,"column":11}},"143":{"start":{"line":456,"column":12},"end":{"line":456,"column":42}},"144":{"start":{"line":457,"column":17},"end":{"line":465,"column":11}},"145":{"start":{"line":459,"column":12},"end":{"line":464,"column":19}},"146":{"start":{"line":462,"column":18},"end":{"line":462,"column":44}},"147":{"start":{"line":463,"column":18},"end":{"line":463,"column":76}},"148":{"start":{"line":469,"column":6},"end":{"line":469,"column":28}},"149":{"start":{"line":472,"column":4},"end":{"line":472,"column":23}},"150":{"start":{"line":473,"column":4},"end":{"line":478,"column":5}},"151":{"start":{"line":474,"column":6},"end":{"line":474,"column":28}},"152":{"start":{"line":475,"column":6},"end":{"line":475,"column":75}},"153":{"start":{"line":475,"column":45},"end":{"line":475,"column":73}},"154":{"start":{"line":476,"column":6},"end":{"line":477,"column":71}},"155":{"start":{"line":480,"column":4},"end":{"line":480,"column":68}},"156":{"start":{"line":528,"column":2},"end":{"line":572,"column":3}},"157":{"start":{"line":529,"column":4},"end":{"line":529,"column":42}},"158":{"start":{"line":531,"column":4},"end":{"line":531,"column":20}},"159":{"start":{"line":532,"column":4},"end":{"line":532,"column":19}},"160":{"start":{"line":533,"column":4},"end":{"line":533,"column":19}},"161":{"start":{"line":534,"column":4},"end":{"line":534,"column":14}},"162":{"start":{"line":536,"column":4},"end":{"line":564,"column":5}},"163":{"start":{"line":537,"column":6},"end":{"line":537,"column":31}},"164":{"start":{"line":538,"column":6},"end":{"line":563,"column":7}},"165":{"start":{"line":539,"column":8},"end":{"line":539,"column":52}},"166":{"start":{"line":539,"column":43},"end":{"line":539,"column":50}},"167":{"start":{"line":540,"column":8},"end":{"line":542,"column":9}},"168":{"start":{"line":541,"column":10},"end":{"line":541,"column":22}},"169":{"start":{"line":543,"column":8},"end":{"line":543,"column":51}},"170":{"start":{"line":544,"column":8},"end":{"line":548,"column":9}},"171":{"start":{"line":545,"column":10},"end":{"line":545,"column":27}},"172":{"start":{"line":546,"column":10},"end":{"line":546,"column":35}},"173":{"start":{"line":547,"column":10},"end":{"line":547,"column":39}},"174":{"start":{"line":549,"column":13},"end":{"line":563,"column":7}},"175":{"start":{"line":550,"column":8},"end":{"line":550,"column":34}},"176":{"start":{"line":551,"column":8},"end":{"line":562,"column":9}},"177":{"start":{"line":552,"column":10},"end":{"line":556,"column":11}},"178":{"start":{"line":553,"column":12},"end":{"line":553,"column":52}},"179":{"start":{"line":555,"column":12},"end":{"line":555,"column":48}},"180":{"start":{"line":558,"column":10},"end":{"line":558,"column":27}},"181":{"start":{"line":559,"column":10},"end":{"line":559,"column":33}},"182":{"start":{"line":560,"column":10},"end":{"line":560,"column":32}},"183":{"start":{"line":561,"column":10},"end":{"line":561,"column":39}},"184":{"start":{"line":566,"column":4},"end":{"line":566,"column":15}},"185":{"start":{"line":568,"column":4},"end":{"line":571,"column":6}},"186":{"start":{"line":580,"column":2},"end":{"line":588,"column":3}},"187":{"start":{"line":581,"column":4},"end":{"line":581,"column":32}},"188":{"start":{"line":581,"column":23},"end":{"line":581,"column":30}},"189":{"start":{"line":582,"column":4},"end":{"line":585,"column":6}},"190":{"start":{"line":586,"column":4},"end":{"line":586,"column":21}},"191":{"start":{"line":587,"column":4},"end":{"line":587,"column":41}},"192":{"start":{"line":590,"column":2},"end":{"line":590,"column":19}},"193":{"start":{"line":603,"column":2},"end":{"line":614,"column":3}},"194":{"start":{"line":604,"column":4},"end":{"line":604,"column":28}},"195":{"start":{"line":605,"column":4},"end":{"line":612,"column":5}},"196":{"start":{"line":606,"column":6},"end":{"line":606,"column":28}},"197":{"start":{"line":607,"column":6},"end":{"line":611,"column":20}},"198":{"start":{"line":613,"column":4},"end":{"line":613,"column":53}},"199":{"start":{"line":662,"column":2},"end":{"line":788,"column":3}},"200":{"start":{"line":663,"column":4},"end":{"line":663,"column":23}},"201":{"start":{"line":664,"column":4},"end":{"line":664,"column":18}},"202":{"start":{"line":665,"column":4},"end":{"line":686,"column":9}},"203":{"start":{"line":666,"column":6},"end":{"line":666,"column":79}},"204":{"start":{"line":667,"column":6},"end":{"line":667,"column":25}},"205":{"start":{"line":668,"column":6},"end":{"line":668,"column":25}},"206":{"start":{"line":669,"column":6},"end":{"line":683,"column":7}},"207":{"start":{"line":670,"column":8},"end":{"line":670,"column":42}},"208":{"start":{"line":671,"column":8},"end":{"line":671,"column":44}},"209":{"start":{"line":672,"column":8},"end":{"line":676,"column":9}},"210":{"start":{"line":673,"column":10},"end":{"line":675,"column":11}},"211":{"start":{"line":674,"column":12},"end":{"line":674,"column":62}},"212":{"start":{"line":677,"column":8},"end":{"line":677,"column":36}},"213":{"start":{"line":678,"column":8},"end":{"line":678,"column":27}},"214":{"start":{"line":679,"column":8},"end":{"line":682,"column":9}},"215":{"start":{"line":680,"column":10},"end":{"line":680,"column":32}},"216":{"start":{"line":681,"column":10},"end":{"line":681,"column":30}},"217":{"start":{"line":684,"column":6},"end":{"line":684,"column":36}},"218":{"start":{"line":685,"column":6},"end":{"line":685,"column":51}},"219":{"start":{"line":688,"column":4},"end":{"line":688,"column":52}},"220":{"start":{"line":701,"column":4},"end":{"line":786,"column":6}},"221":{"start":{"line":702,"column":6},"end":{"line":702,"column":61}},"222":{"start":{"line":708,"column":6},"end":{"line":708,"column":44}},"223":{"start":{"line":709,"column":6},"end":{"line":709,"column":18}},"224":{"start":{"line":710,"column":6},"end":{"line":710,"column":53}},"225":{"start":{"line":711,"column":6},"end":{"line":711,"column":26}},"226":{"start":{"line":713,"column":6},"end":{"line":784,"column":7}},"227":{"start":{"line":714,"column":8},"end":{"line":714,"column":31}},"228":{"start":{"line":715,"column":8},"end":{"line":715,"column":38}},"229":{"start":{"line":716,"column":8},"end":{"line":716,"column":27}},"230":{"start":{"line":718,"column":8},"end":{"line":718,"column":23}},"231":{"start":{"line":719,"column":8},"end":{"line":748,"column":9}},"232":{"start":{"line":720,"column":10},"end":{"line":720,"column":29}},"233":{"start":{"line":722,"column":10},"end":{"line":722,"column":56}},"234":{"start":{"line":723,"column":10},"end":{"line":739,"column":11}},"235":{"start":{"line":724,"column":12},"end":{"line":724,"column":49}},"236":{"start":{"line":725,"column":12},"end":{"line":725,"column":36}},"237":{"start":{"line":727,"column":12},"end":{"line":734,"column":13}},"238":{"start":{"line":728,"column":14},"end":{"line":728,"column":57}},"239":{"start":{"line":729,"column":14},"end":{"line":729,"column":51}},"240":{"start":{"line":730,"column":14},"end":{"line":733,"column":15}},"241":{"start":{"line":731,"column":16},"end":{"line":731,"column":40}},"242":{"start":{"line":732,"column":16},"end":{"line":732,"column":22}},"243":{"start":{"line":736,"column":12},"end":{"line":738,"column":13}},"244":{"start":{"line":737,"column":14},"end":{"line":737,"column":31}},"245":{"start":{"line":741,"column":10},"end":{"line":741,"column":78}},"246":{"start":{"line":742,"column":10},"end":{"line":745,"column":11}},"247":{"start":{"line":743,"column":12},"end":{"line":743,"column":31}},"248":{"start":{"line":744,"column":12},"end":{"line":744,"column":30}},"249":{"start":{"line":747,"column":10},"end":{"line":747,"column":57}},"250":{"start":{"line":747,"column":29},"end":{"line":747,"column":55}},"251":{"start":{"line":750,"column":8},"end":{"line":750,"column":29}},"252":{"start":{"line":751,"column":8},"end":{"line":751,"column":28}},"253":{"start":{"line":753,"column":8},"end":{"line":783,"column":9}},"254":{"start":{"line":754,"column":10},"end":{"line":754,"column":56}},"255":{"start":{"line":756,"column":10},"end":{"line":756,"column":40}},"256":{"start":{"line":757,"column":10},"end":{"line":757,"column":66}},"257":{"start":{"line":758,"column":10},"end":{"line":758,"column":78}},"258":{"start":{"line":759,"column":10},"end":{"line":765,"column":11}},"259":{"start":{"line":763,"column":12},"end":{"line":763,"column":63}},"260":{"start":{"line":764,"column":12},"end":{"line":764,"column":76}},"261":{"start":{"line":766,"column":10},"end":{"line":766,"column":40}},"262":{"start":{"line":768,"column":10},"end":{"line":771,"column":37}},"263":{"start":{"line":773,"column":10},"end":{"line":777,"column":27}},"264":{"start":{"line":779,"column":10},"end":{"line":782,"column":37}},"265":{"start":{"line":785,"column":6},"end":{"line":785,"column":36}},"266":{"start":{"line":787,"column":4},"end":{"line":787,"column":20}},"267":{"start":{"line":805,"column":2},"end":{"line":970,"column":3}},"268":{"start":{"line":806,"column":4},"end":{"line":806,"column":66}},"269":{"start":{"line":807,"column":4},"end":{"line":823,"column":5}},"270":{"start":{"line":809,"column":6},"end":{"line":811,"column":25}},"271":{"start":{"line":812,"column":11},"end":{"line":823,"column":5}},"272":{"start":{"line":814,"column":6},"end":{"line":816,"column":26}},"273":{"start":{"line":819,"column":6},"end":{"line":822,"column":25}},"274":{"start":{"line":824,"column":4},"end":{"line":828,"column":5}},"275":{"start":{"line":826,"column":6},"end":{"line":827,"column":60}},"276":{"start":{"line":829,"column":4},"end":{"line":829,"column":37}},"277":{"start":{"line":830,"column":4},"end":{"line":849,"column":5}},"278":{"start":{"line":831,"column":6},"end":{"line":848,"column":7}},"279":{"start":{"line":832,"column":8},"end":{"line":840,"column":9}},"280":{"start":{"line":833,"column":10},"end":{"line":834,"column":80}},"281":{"start":{"line":837,"column":10},"end":{"line":839,"column":27}},"282":{"start":{"line":842,"column":8},"end":{"line":845,"column":20}},"283":{"start":{"line":847,"column":8},"end":{"line":847,"column":74}},"284":{"start":{"line":850,"column":4},"end":{"line":854,"column":5}},"285":{"start":{"line":851,"column":6},"end":{"line":851,"column":73}},"286":{"start":{"line":852,"column":6},"end":{"line":853,"column":57}},"287":{"start":{"line":855,"column":4},"end":{"line":855,"column":49}},"288":{"start":{"line":856,"column":4},"end":{"line":888,"column":5}},"289":{"start":{"line":860,"column":6},"end":{"line":862,"column":17}},"290":{"start":{"line":866,"column":6},"end":{"line":866,"column":51}},"291":{"start":{"line":870,"column":6},"end":{"line":883,"column":17}},"292":{"start":{"line":884,"column":6},"end":{"line":887,"column":14}},"293":{"start":{"line":890,"column":4},"end":{"line":890,"column":33}},"294":{"start":{"line":891,"column":4},"end":{"line":893,"column":5}},"295":{"start":{"line":892,"column":6},"end":{"line":892,"column":54}},"296":{"start":{"line":895,"column":4},"end":{"line":895,"column":68}},"297":{"start":{"line":896,"column":4},"end":{"line":901,"column":5}},"298":{"start":{"line":897,"column":6},"end":{"line":900,"column":18}},"299":{"start":{"line":903,"column":4},"end":{"line":903,"column":78}},"300":{"start":{"line":905,"column":4},"end":{"line":941,"column":33}},"301":{"start":{"line":942,"column":4},"end":{"line":944,"column":5}},"302":{"start":{"line":943,"column":6},"end":{"line":943,"column":33}},"303":{"start":{"line":946,"column":4},"end":{"line":967,"column":57}},"304":{"start":{"line":969,"column":4},"end":{"line":969,"column":78}},"305":{"start":{"line":972,"column":2},"end":{"line":978,"column":9}},"306":{"start":{"line":991,"column":2},"end":{"line":1112,"column":3}},"307":{"start":{"line":992,"column":4},"end":{"line":992,"column":42}},"308":{"start":{"line":993,"column":4},"end":{"line":993,"column":31}},"309":{"start":{"line":995,"column":4},"end":{"line":995,"column":38}},"310":{"start":{"line":997,"column":4},"end":{"line":997,"column":42}},"311":{"start":{"line":998,"column":4},"end":{"line":1000,"column":5}},"312":{"start":{"line":999,"column":6},"end":{"line":999,"column":38}},"313":{"start":{"line":1003,"column":4},"end":{"line":1003,"column":25}},"314":{"start":{"line":1005,"column":4},"end":{"line":1038,"column":5}},"315":{"start":{"line":1006,"column":6},"end":{"line":1006,"column":31}},"316":{"start":{"line":1007,"column":6},"end":{"line":1037,"column":7}},"317":{"start":{"line":1008,"column":8},"end":{"line":1018,"column":9}},"318":{"start":{"line":1009,"column":10},"end":{"line":1009,"column":27}},"319":{"start":{"line":1011,"column":10},"end":{"line":1013,"column":11}},"320":{"start":{"line":1012,"column":12},"end":{"line":1012,"column":46}},"321":{"start":{"line":1015,"column":10},"end":{"line":1017,"column":11}},"322":{"start":{"line":1016,"column":12},"end":{"line":1016,"column":24}},"323":{"start":{"line":1019,"column":13},"end":{"line":1037,"column":7}},"324":{"start":{"line":1020,"column":8},"end":{"line":1020,"column":34}},"325":{"start":{"line":1021,"column":8},"end":{"line":1021,"column":42}},"326":{"start":{"line":1022,"column":8},"end":{"line":1036,"column":9}},"327":{"start":{"line":1023,"column":10},"end":{"line":1023,"column":57}},"328":{"start":{"line":1024,"column":10},"end":{"line":1024,"column":37}},"329":{"start":{"line":1025,"column":10},"end":{"line":1025,"column":67}},"330":{"start":{"line":1026,"column":10},"end":{"line":1030,"column":11}},"331":{"start":{"line":1027,"column":12},"end":{"line":1027,"column":41}},"332":{"start":{"line":1028,"column":12},"end":{"line":1029,"column":63}},"333":{"start":{"line":1031,"column":10},"end":{"line":1031,"column":27}},"334":{"start":{"line":1032,"column":10},"end":{"line":1035,"column":11}},"335":{"start":{"line":1034,"column":12},"end":{"line":1034,"column":46}},"336":{"start":{"line":1041,"column":4},"end":{"line":1082,"column":5}},"337":{"start":{"line":1045,"column":6},"end":{"line":1048,"column":7}},"338":{"start":{"line":1046,"column":8},"end":{"line":1046,"column":45}},"339":{"start":{"line":1047,"column":8},"end":{"line":1047,"column":37}},"340":{"start":{"line":1047,"column":28},"end":{"line":1047,"column":35}},"341":{"start":{"line":1050,"column":6},"end":{"line":1070,"column":7}},"342":{"start":{"line":1052,"column":8},"end":{"line":1052,"column":62}},"343":{"start":{"line":1053,"column":8},"end":{"line":1053,"column":38}},"344":{"start":{"line":1054,"column":8},"end":{"line":1068,"column":9}},"345":{"start":{"line":1059,"column":10},"end":{"line":1059,"column":51}},"346":{"start":{"line":1062,"column":10},"end":{"line":1062,"column":39}},"347":{"start":{"line":1063,"column":10},"end":{"line":1063,"column":45}},"348":{"start":{"line":1064,"column":10},"end":{"line":1067,"column":11}},"349":{"start":{"line":1065,"column":12},"end":{"line":1065,"column":39}},"350":{"start":{"line":1066,"column":12},"end":{"line":1066,"column":45}},"351":{"start":{"line":1069,"column":8},"end":{"line":1069,"column":25}},"352":{"start":{"line":1072,"column":6},"end":{"line":1072,"column":67}},"353":{"start":{"line":1075,"column":6},"end":{"line":1079,"column":7}},"354":{"start":{"line":1078,"column":8},"end":{"line":1078,"column":32}},"355":{"start":{"line":1081,"column":6},"end":{"line":1081,"column":37}},"356":{"start":{"line":1085,"column":4},"end":{"line":1089,"column":5}},"357":{"start":{"line":1088,"column":6},"end":{"line":1088,"column":25}},"358":{"start":{"line":1092,"column":4},"end":{"line":1094,"column":5}},"359":{"start":{"line":1093,"column":6},"end":{"line":1093,"column":59}},"360":{"start":{"line":1096,"column":4},"end":{"line":1096,"column":42}},"361":{"start":{"line":1097,"column":4},"end":{"line":1097,"column":30}},"362":{"start":{"line":1098,"column":4},"end":{"line":1098,"column":81}},"363":{"start":{"line":1099,"column":4},"end":{"line":1109,"column":5}},"364":{"start":{"line":1100,"column":6},"end":{"line":1100,"column":24}},"365":{"start":{"line":1104,"column":6},"end":{"line":1104,"column":47}},"366":{"start":{"line":1105,"column":6},"end":{"line":1107,"column":7}},"367":{"start":{"line":1106,"column":8},"end":{"line":1106,"column":56}},"368":{"start":{"line":1108,"column":6},"end":{"line":1108,"column":25}},"369":{"start":{"line":1111,"column":4},"end":{"line":1111,"column":25}},"370":{"start":{"line":1127,"column":2},"end":{"line":1235,"column":3}},"371":{"start":{"line":1128,"column":4},"end":{"line":1128,"column":67}},"372":{"start":{"line":1129,"column":4},"end":{"line":1129,"column":63}},"373":{"start":{"line":1130,"column":4},"end":{"line":1130,"column":26}},"374":{"start":{"line":1132,"column":4},"end":{"line":1132,"column":32}},"375":{"start":{"line":1133,"column":4},"end":{"line":1133,"column":37}},"376":{"start":{"line":1135,"column":4},"end":{"line":1135,"column":24}},"377":{"start":{"line":1137,"column":4},"end":{"line":1137,"column":26}},"378":{"start":{"line":1138,"column":4},"end":{"line":1138,"column":30}},"379":{"start":{"line":1140,"column":4},"end":{"line":1140,"column":22}},"380":{"start":{"line":1142,"column":4},"end":{"line":1142,"column":38}},"381":{"start":{"line":1143,"column":4},"end":{"line":1143,"column":42}},"382":{"start":{"line":1146,"column":4},"end":{"line":1146,"column":28}},"383":{"start":{"line":1149,"column":4},"end":{"line":1149,"column":45}},"384":{"start":{"line":1150,"column":4},"end":{"line":1150,"column":18}},"385":{"start":{"line":1151,"column":4},"end":{"line":1158,"column":5}},"386":{"start":{"line":1152,"column":6},"end":{"line":1157,"column":7}},"387":{"start":{"line":1153,"column":8},"end":{"line":1153,"column":49}},"388":{"start":{"line":1154,"column":8},"end":{"line":1154,"column":49}},"389":{"start":{"line":1156,"column":8},"end":{"line":1156,"column":15}},"390":{"start":{"line":1159,"column":4},"end":{"line":1159,"column":26}},"391":{"start":{"line":1162,"column":4},"end":{"line":1173,"column":5}},"392":{"start":{"line":1163,"column":6},"end":{"line":1163,"column":36}},"393":{"start":{"line":1165,"column":6},"end":{"line":1165,"column":40}},"394":{"start":{"line":1166,"column":6},"end":{"line":1166,"column":22}},"395":{"start":{"line":1167,"column":6},"end":{"line":1169,"column":7}},"396":{"start":{"line":1168,"column":8},"end":{"line":1168,"column":17}},"397":{"start":{"line":1170,"column":6},"end":{"line":1170,"column":39}},"398":{"start":{"line":1171,"column":6},"end":{"line":1171,"column":39}},"399":{"start":{"line":1172,"column":6},"end":{"line":1172,"column":14}},"400":{"start":{"line":1175,"column":4},"end":{"line":1175,"column":47}},"401":{"start":{"line":1177,"column":4},"end":{"line":1177,"column":36}},"402":{"start":{"line":1178,"column":4},"end":{"line":1178,"column":19}},"403":{"start":{"line":1179,"column":4},"end":{"line":1182,"column":5}},"404":{"start":{"line":1180,"column":6},"end":{"line":1180,"column":44}},"405":{"start":{"line":1181,"column":6},"end":{"line":1181,"column":40}},"406":{"start":{"line":1183,"column":4},"end":{"line":1234,"column":5}},"407":{"start":{"line":1184,"column":6},"end":{"line":1184,"column":28}},"408":{"start":{"line":1185,"column":6},"end":{"line":1229,"column":7}},"409":{"start":{"line":1186,"column":8},"end":{"line":1186,"column":41}},"410":{"start":{"line":1187,"column":8},"end":{"line":1187,"column":59}},"411":{"start":{"line":1189,"column":8},"end":{"line":1189,"column":70}},"412":{"start":{"line":1191,"column":8},"end":{"line":1191,"column":44}},"413":{"start":{"line":1193,"column":8},"end":{"line":1193,"column":44}},"414":{"start":{"line":1194,"column":8},"end":{"line":1194,"column":23}},"415":{"start":{"line":1195,"column":8},"end":{"line":1219,"column":9}},"416":{"start":{"line":1203,"column":10},"end":{"line":1205,"column":11}},"417":{"start":{"line":1204,"column":12},"end":{"line":1204,"column":61}},"418":{"start":{"line":1206,"column":10},"end":{"line":1206,"column":42}},"419":{"start":{"line":1207,"column":10},"end":{"line":1207,"column":48}},"420":{"start":{"line":1208,"column":10},"end":{"line":1208,"column":52}},"421":{"start":{"line":1209,"column":10},"end":{"line":1209,"column":60}},"422":{"start":{"line":1210,"column":10},"end":{"line":1210,"column":47}},"423":{"start":{"line":1211,"column":10},"end":{"line":1211,"column":50}},"424":{"start":{"line":1212,"column":10},"end":{"line":1212,"column":37}},"425":{"start":{"line":1213,"column":10},"end":{"line":1218,"column":11}},"426":{"start":{"line":1214,"column":12},"end":{"line":1216,"column":74}},"427":{"start":{"line":1217,"column":12},"end":{"line":1217,"column":64}},"428":{"start":{"line":1221,"column":8},"end":{"line":1221,"column":26}},"429":{"start":{"line":1223,"column":8},"end":{"line":1225,"column":9}},"430":{"start":{"line":1224,"column":10},"end":{"line":1224,"column":25}},"431":{"start":{"line":1226,"column":8},"end":{"line":1228,"column":9}},"432":{"start":{"line":1227,"column":10},"end":{"line":1227,"column":31}},"433":{"start":{"line":1231,"column":6},"end":{"line":1233,"column":7}},"434":{"start":{"line":1232,"column":8},"end":{"line":1232,"column":46}},"435":{"start":{"line":1238,"column":2},"end":{"line":1238,"column":31}},"436":{"start":{"line":1255,"column":2},"end":{"line":1264,"column":3}},"437":{"start":{"line":1256,"column":4},"end":{"line":1263,"column":5}},"438":{"start":{"line":1257,"column":6},"end":{"line":1257,"column":34}},"439":{"start":{"line":1258,"column":6},"end":{"line":1262,"column":7}},"440":{"start":{"line":1259,"column":8},"end":{"line":1259,"column":43}},"441":{"start":{"line":1260,"column":13},"end":{"line":1262,"column":7}},"442":{"start":{"line":1261,"column":8},"end":{"line":1261,"column":68}},"443":{"start":{"line":1265,"column":2},"end":{"line":1274,"column":3}},"444":{"start":{"line":1266,"column":4},"end":{"line":1272,"column":5}},"445":{"start":{"line":1269,"column":6},"end":{"line":1271,"column":27}},"446":{"start":{"line":1273,"column":4},"end":{"line":1273,"column":42}},"447":{"start":{"line":1275,"column":2},"end":{"line":1275,"column":56}},"448":{"start":{"line":1276,"column":2},"end":{"line":1294,"column":72}},"449":{"start":{"line":1295,"column":2},"end":{"line":1313,"column":18}},"450":{"start":{"line":1314,"column":2},"end":{"line":1315,"column":74}},"451":{"start":{"line":1316,"column":2},"end":{"line":1321,"column":51}},"452":{"start":{"line":1322,"column":2},"end":{"line":1324,"column":22}},"453":{"start":{"line":1325,"column":2},"end":{"line":1331,"column":20}},"454":{"start":{"line":1332,"column":2},"end":{"line":1335,"column":22}},"455":{"start":{"line":1336,"column":2},"end":{"line":1340,"column":42}},"456":{"start":{"line":1341,"column":2},"end":{"line":1346,"column":36}},"457":{"start":{"line":1347,"column":2},"end":{"line":1352,"column":34}},"458":{"start":{"line":1353,"column":2},"end":{"line":1358,"column":28}},"459":{"start":{"line":1359,"column":2},"end":{"line":1363,"column":34}},"460":{"start":{"line":1364,"column":2},"end":{"line":1371,"column":24}},"461":{"start":{"line":1372,"column":2},"end":{"line":1376,"column":34}},"462":{"start":{"line":1377,"column":2},"end":{"line":1378,"column":67}},"463":{"start":{"line":1380,"column":2},"end":{"line":1403,"column":3}},"464":{"start":{"line":1381,"column":4},"end":{"line":1381,"column":46}},"465":{"start":{"line":1383,"column":4},"end":{"line":1402,"column":5}},"466":{"start":{"line":1385,"column":6},"end":{"line":1385,"column":71}},"467":{"start":{"line":1387,"column":6},"end":{"line":1387,"column":45}},"468":{"start":{"line":1388,"column":6},"end":{"line":1388,"column":30}},"469":{"start":{"line":1389,"column":6},"end":{"line":1389,"column":39}},"470":{"start":{"line":1390,"column":6},"end":{"line":1390,"column":22}},"471":{"start":{"line":1393,"column":6},"end":{"line":1393,"column":62}},"472":{"start":{"line":1397,"column":6},"end":{"line":1397,"column":39}},"473":{"start":{"line":1399,"column":6},"end":{"line":1401,"column":7}},"474":{"start":{"line":1400,"column":8},"end":{"line":1400,"column":45}},"475":{"start":{"line":1413,"column":2},"end":{"line":1436,"column":3}},"476":{"start":{"line":1414,"column":4},"end":{"line":1414,"column":50}},"477":{"start":{"line":1422,"column":4},"end":{"line":1422,"column":62}},"478":{"start":{"line":1423,"column":4},"end":{"line":1423,"column":37}},"479":{"start":{"line":1424,"column":4},"end":{"line":1426,"column":5}},"480":{"start":{"line":1425,"column":6},"end":{"line":1425,"column":52}},"481":{"start":{"line":1428,"column":4},"end":{"line":1433,"column":6}},"482":{"start":{"line":1434,"column":4},"end":{"line":1434,"column":24}},"483":{"start":{"line":1435,"column":4},"end":{"line":1435,"column":31}},"484":{"start":{"line":1447,"column":2},"end":{"line":1605,"column":3}},"485":{"start":{"line":1448,"column":4},"end":{"line":1448,"column":41}},"486":{"start":{"line":1449,"column":4},"end":{"line":1449,"column":45}},"487":{"start":{"line":1450,"column":4},"end":{"line":1450,"column":68}},"488":{"start":{"line":1450,"column":29},"end":{"line":1450,"column":66}},"489":{"start":{"line":1452,"column":4},"end":{"line":1452,"column":79}},"490":{"start":{"line":1453,"column":4},"end":{"line":1453,"column":22}},"491":{"start":{"line":1454,"column":4},"end":{"line":1458,"column":5}},"492":{"start":{"line":1455,"column":6},"end":{"line":1457,"column":7}},"493":{"start":{"line":1456,"column":8},"end":{"line":1456,"column":42}},"494":{"start":{"line":1459,"column":4},"end":{"line":1459,"column":24}},"495":{"start":{"line":1461,"column":4},"end":{"line":1461,"column":21}},"496":{"start":{"line":1462,"column":4},"end":{"line":1464,"column":5}},"497":{"start":{"line":1463,"column":6},"end":{"line":1463,"column":61}},"498":{"start":{"line":1463,"column":37},"end":{"line":1463,"column":56}},"499":{"start":{"line":1468,"column":4},"end":{"line":1468,"column":14}},"500":{"start":{"line":1469,"column":4},"end":{"line":1469,"column":26}},"501":{"start":{"line":1471,"column":4},"end":{"line":1471,"column":59}},"502":{"start":{"line":1472,"column":4},"end":{"line":1472,"column":42}},"503":{"start":{"line":1473,"column":4},"end":{"line":1473,"column":46}},"504":{"start":{"line":1474,"column":4},"end":{"line":1474,"column":43}},"505":{"start":{"line":1475,"column":4},"end":{"line":1475,"column":27}},"506":{"start":{"line":1476,"column":4},"end":{"line":1476,"column":45}},"507":{"start":{"line":1477,"column":4},"end":{"line":1477,"column":19}},"508":{"start":{"line":1479,"column":4},"end":{"line":1602,"column":5}},"509":{"start":{"line":1480,"column":6},"end":{"line":1482,"column":31}},"510":{"start":{"line":1483,"column":6},"end":{"line":1595,"column":7}},"511":{"start":{"line":1484,"column":8},"end":{"line":1484,"column":29}},"512":{"start":{"line":1488,"column":8},"end":{"line":1488,"column":26}},"513":{"start":{"line":1490,"column":10},"end":{"line":1508,"column":11}},"514":{"start":{"line":1491,"column":12},"end":{"line":1491,"column":39}},"515":{"start":{"line":1494,"column":12},"end":{"line":1494,"column":69}},"516":{"start":{"line":1495,"column":12},"end":{"line":1500,"column":13}},"517":{"start":{"line":1499,"column":14},"end":{"line":1499,"column":20}},"518":{"start":{"line":1501,"column":12},"end":{"line":1507,"column":13}},"519":{"start":{"line":1502,"column":14},"end":{"line":1502,"column":25}},"520":{"start":{"line":1503,"column":14},"end":{"line":1505,"column":68}},"521":{"start":{"line":1505,"column":44},"end":{"line":1505,"column":64}},"522":{"start":{"line":1506,"column":14},"end":{"line":1506,"column":20}},"523":{"start":{"line":1511,"column":8},"end":{"line":1511,"column":37}},"524":{"start":{"line":1512,"column":8},"end":{"line":1594,"column":9}},"525":{"start":{"line":1519,"column":10},"end":{"line":1519,"column":29}},"526":{"start":{"line":1520,"column":10},"end":{"line":1527,"column":11}},"527":{"start":{"line":1521,"column":12},"end":{"line":1521,"column":31}},"528":{"start":{"line":1522,"column":12},"end":{"line":1526,"column":13}},"529":{"start":{"line":1524,"column":14},"end":{"line":1524,"column":28}},"530":{"start":{"line":1525,"column":14},"end":{"line":1525,"column":20}},"531":{"start":{"line":1528,"column":10},"end":{"line":1593,"column":11}},"532":{"start":{"line":1531,"column":12},"end":{"line":1531,"column":45}},"533":{"start":{"line":1541,"column":12},"end":{"line":1541,"column":46}},"534":{"start":{"line":1542,"column":12},"end":{"line":1552,"column":13}},"535":{"start":{"line":1543,"column":14},"end":{"line":1543,"column":63}},"536":{"start":{"line":1545,"column":14},"end":{"line":1545,"column":26}},"537":{"start":{"line":1546,"column":14},"end":{"line":1549,"column":15}},"538":{"start":{"line":1548,"column":16},"end":{"line":1548,"column":73}},"539":{"start":{"line":1551,"column":14},"end":{"line":1551,"column":70}},"540":{"start":{"line":1551,"column":35},"end":{"line":1551,"column":68}},"541":{"start":{"line":1554,"column":12},"end":{"line":1554,"column":29}},"542":{"start":{"line":1555,"column":12},"end":{"line":1570,"column":13}},"543":{"start":{"line":1556,"column":14},"end":{"line":1556,"column":31}},"544":{"start":{"line":1558,"column":14},"end":{"line":1558,"column":52}},"545":{"start":{"line":1559,"column":14},"end":{"line":1559,"column":48}},"546":{"start":{"line":1560,"column":14},"end":{"line":1567,"column":23}},"547":{"start":{"line":1568,"column":14},"end":{"line":1569,"column":58}},"548":{"start":{"line":1574,"column":12},"end":{"line":1574,"column":45}},"549":{"start":{"line":1575,"column":12},"end":{"line":1582,"column":13}},"550":{"start":{"line":1576,"column":14},"end":{"line":1576,"column":68}},"551":{"start":{"line":1577,"column":14},"end":{"line":1581,"column":24}},"552":{"start":{"line":1583,"column":12},"end":{"line":1583,"column":70}},"553":{"start":{"line":1583,"column":28},"end":{"line":1583,"column":68}},"554":{"start":{"line":1586,"column":12},"end":{"line":1591,"column":14}},"555":{"start":{"line":1592,"column":12},"end":{"line":1592,"column":46}},"556":{"start":{"line":1596,"column":6},"end":{"line":1601,"column":7}},"557":{"start":{"line":1598,"column":8},"end":{"line":1598,"column":32}},"558":{"start":{"line":1599,"column":13},"end":{"line":1601,"column":7}},"559":{"start":{"line":1600,"column":8},"end":{"line":1600,"column":23}},"560":{"start":{"line":1604,"column":4},"end":{"line":1604,"column":13}},"561":{"start":{"line":1611,"column":2},"end":{"line":1636,"column":8}},"562":{"start":{"line":1650,"column":2},"end":{"line":1654,"column":3}},"563":{"start":{"line":1651,"column":4},"end":{"line":1653,"column":7}},"564":{"start":{"line":1652,"column":6},"end":{"line":1652,"column":16}}},"branchMap":{"1":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":6},"end":{"line":257,"column":6}},{"start":{"line":257,"column":6},"end":{"line":257,"column":6}}]},"2":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":13},"end":{"line":259,"column":13}},{"start":{"line":259,"column":13},"end":{"line":259,"column":13}}]},"3":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":6},"end":{"line":278,"column":6}},{"start":{"line":278,"column":6},"end":{"line":278,"column":6}}]},"4":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":6},"end":{"line":283,"column":6}},{"start":{"line":283,"column":6},"end":{"line":283,"column":6}}]},"5":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":13},"end":{"line":285,"column":13}},{"start":{"line":285,"column":13},"end":{"line":285,"column":13}}]},"6":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":17},"end":{"line":285,"column":26}},{"start":{"line":285,"column":30},"end":{"line":285,"column":39}}]},"7":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":13},"end":{"line":287,"column":13}},{"start":{"line":287,"column":13},"end":{"line":287,"column":13}}]},"8":{"line":287,"type":"binary-expr","locations":[{"start":{"line":287,"column":17},"end":{"line":287,"column":27}},{"start":{"line":287,"column":31},"end":{"line":287,"column":41}}]},"9":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":6},"end":{"line":295,"column":6}},{"start":{"line":295,"column":6},"end":{"line":295,"column":6}}]},"10":{"line":296,"type":"cond-expr","locations":[{"start":{"line":296,"column":34},"end":{"line":296,"column":40}},{"start":{"line":296,"column":43},"end":{"line":296,"column":48}}]},"11":{"line":299,"type":"cond-expr","locations":[{"start":{"line":300,"column":12},"end":{"line":300,"column":21}},{"start":{"line":300,"column":24},"end":{"line":300,"column":26}}]},"12":{"line":299,"type":"binary-expr","locations":[{"start":{"line":299,"column":14},"end":{"line":299,"column":25}},{"start":{"line":299,"column":29},"end":{"line":299,"column":39}},{"start":{"line":299,"column":43},"end":{"line":299,"column":53}},{"start":{"line":299,"column":57},"end":{"line":299,"column":67}}]},"13":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":6},"end":{"line":318,"column":6}},{"start":{"line":318,"column":6},"end":{"line":318,"column":6}}]},"14":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":8},"end":{"line":322,"column":8}},{"start":{"line":322,"column":8},"end":{"line":322,"column":8}}]},"15":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":10},"end":{"line":327,"column":10}},{"start":{"line":327,"column":10},"end":{"line":327,"column":10}}]},"16":{"line":327,"type":"binary-expr","locations":[{"start":{"line":327,"column":14},"end":{"line":327,"column":23}},{"start":{"line":327,"column":27},"end":{"line":327,"column":54}}]},"17":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":10},"end":{"line":338,"column":10}},{"start":{"line":338,"column":10},"end":{"line":338,"column":10}}]},"18":{"line":338,"type":"binary-expr","locations":[{"start":{"line":338,"column":16},"end":{"line":338,"column":24}},{"start":{"line":338,"column":28},"end":{"line":338,"column":39}}]},"19":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":12},"end":{"line":339,"column":12}},{"start":{"line":339,"column":12},"end":{"line":339,"column":12}}]},"20":{"line":339,"type":"binary-expr","locations":[{"start":{"line":339,"column":18},"end":{"line":339,"column":26}},{"start":{"line":339,"column":30},"end":{"line":339,"column":40}}]},"21":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":12},"end":{"line":342,"column":12}},{"start":{"line":342,"column":12},"end":{"line":342,"column":12}}]},"22":{"line":342,"type":"binary-expr","locations":[{"start":{"line":342,"column":18},"end":{"line":342,"column":26}},{"start":{"line":342,"column":30},"end":{"line":342,"column":41}}]},"23":{"line":351,"type":"binary-expr","locations":[{"start":{"line":351,"column":44},"end":{"line":351,"column":55}},{"start":{"line":351,"column":61},"end":{"line":351,"column":73}}]},"24":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":8},"end":{"line":356,"column":8}},{"start":{"line":356,"column":8},"end":{"line":356,"column":8}}]},"25":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":8},"end":{"line":366,"column":8}},{"start":{"line":366,"column":8},"end":{"line":366,"column":8}}]},"26":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":10},"end":{"line":367,"column":10}},{"start":{"line":367,"column":10},"end":{"line":367,"column":10}}]},"27":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":8},"end":{"line":403,"column":8}},{"start":{"line":403,"column":8},"end":{"line":403,"column":8}}]},"28":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":15},"end":{"line":406,"column":15}},{"start":{"line":406,"column":15},"end":{"line":406,"column":15}}]},"29":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":10},"end":{"line":408,"column":10}},{"start":{"line":408,"column":10},"end":{"line":408,"column":10}}]},"30":{"line":409,"type":"if","locations":[{"start":{"line":409,"column":12},"end":{"line":409,"column":12}},{"start":{"line":409,"column":12},"end":{"line":409,"column":12}}]},"31":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":8},"end":{"line":424,"column":8}},{"start":{"line":424,"column":8},"end":{"line":424,"column":8}}]},"32":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":8},"end":{"line":430,"column":8}},{"start":{"line":430,"column":8},"end":{"line":430,"column":8}}]},"33":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":10},"end":{"line":432,"column":10}},{"start":{"line":432,"column":10},"end":{"line":432,"column":10}}]},"34":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":15},"end":{"line":435,"column":15}},{"start":{"line":435,"column":15},"end":{"line":435,"column":15}}]},"35":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":10},"end":{"line":437,"column":10}},{"start":{"line":437,"column":10},"end":{"line":437,"column":10}}]},"36":{"line":437,"type":"binary-expr","locations":[{"start":{"line":437,"column":14},"end":{"line":437,"column":26}},{"start":{"line":437,"column":30},"end":{"line":437,"column":56}}]},"37":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":8},"end":{"line":446,"column":8}},{"start":{"line":446,"column":8},"end":{"line":446,"column":8}}]},"38":{"line":446,"type":"binary-expr","locations":[{"start":{"line":446,"column":12},"end":{"line":446,"column":28}},{"start":{"line":446,"column":32},"end":{"line":446,"column":52}}]},"39":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":6},"end":{"line":451,"column":6}},{"start":{"line":451,"column":6},"end":{"line":451,"column":6}}]},"40":{"line":451,"type":"binary-expr","locations":[{"start":{"line":451,"column":10},"end":{"line":451,"column":26}},{"start":{"line":451,"column":30},"end":{"line":451,"column":44}}]},"41":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":10},"end":{"line":455,"column":10}},{"start":{"line":455,"column":10},"end":{"line":455,"column":10}}]},"42":{"line":455,"type":"binary-expr","locations":[{"start":{"line":455,"column":14},"end":{"line":455,"column":27}},{"start":{"line":455,"column":31},"end":{"line":455,"column":42}}]},"43":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":17},"end":{"line":457,"column":17}},{"start":{"line":457,"column":17},"end":{"line":457,"column":17}}]},"44":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":6},"end":{"line":475,"column":6}},{"start":{"line":475,"column":6},"end":{"line":475,"column":6}}]},"45":{"line":475,"type":"binary-expr","locations":[{"start":{"line":475,"column":10},"end":{"line":475,"column":22}},{"start":{"line":475,"column":26},"end":{"line":475,"column":41}}]},"46":{"line":480,"type":"cond-expr","locations":[{"start":{"line":480,"column":56},"end":{"line":480,"column":60}},{"start":{"line":480,"column":63},"end":{"line":480,"column":66}}]},"47":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":6},"end":{"line":538,"column":6}},{"start":{"line":538,"column":6},"end":{"line":538,"column":6}}]},"48":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":8},"end":{"line":539,"column":8}},{"start":{"line":539,"column":8},"end":{"line":539,"column":8}}]},"49":{"line":544,"type":"if","locations":[{"start":{"line":544,"column":8},"end":{"line":544,"column":8}},{"start":{"line":544,"column":8},"end":{"line":544,"column":8}}]},"50":{"line":544,"type":"binary-expr","locations":[{"start":{"line":544,"column":12},"end":{"line":544,"column":29}},{"start":{"line":544,"column":33},"end":{"line":544,"column":50}}]},"51":{"line":549,"type":"if","locations":[{"start":{"line":549,"column":13},"end":{"line":549,"column":13}},{"start":{"line":549,"column":13},"end":{"line":549,"column":13}}]},"52":{"line":549,"type":"binary-expr","locations":[{"start":{"line":549,"column":17},"end":{"line":549,"column":26}},{"start":{"line":549,"column":30},"end":{"line":549,"column":39}}]},"53":{"line":551,"type":"if","locations":[{"start":{"line":551,"column":8},"end":{"line":551,"column":8}},{"start":{"line":551,"column":8},"end":{"line":551,"column":8}}]},"54":{"line":552,"type":"if","locations":[{"start":{"line":552,"column":10},"end":{"line":552,"column":10}},{"start":{"line":552,"column":10},"end":{"line":552,"column":10}}]},"55":{"line":581,"type":"if","locations":[{"start":{"line":581,"column":4},"end":{"line":581,"column":4}},{"start":{"line":581,"column":4},"end":{"line":581,"column":4}}]},"56":{"line":607,"type":"cond-expr","locations":[{"start":{"line":608,"column":13},"end":{"line":608,"column":34}},{"start":{"line":609,"column":12},"end":{"line":611,"column":19}}]},"57":{"line":608,"type":"cond-expr","locations":[{"start":{"line":608,"column":23},"end":{"line":608,"column":30}},{"start":{"line":608,"column":33},"end":{"line":608,"column":34}}]},"58":{"line":609,"type":"cond-expr","locations":[{"start":{"line":610,"column":13},"end":{"line":610,"column":56}},{"start":{"line":611,"column":12},"end":{"line":611,"column":19}}]},"59":{"line":610,"type":"cond-expr","locations":[{"start":{"line":610,"column":39},"end":{"line":610,"column":46}},{"start":{"line":610,"column":49},"end":{"line":610,"column":56}}]},"60":{"line":613,"type":"cond-expr","locations":[{"start":{"line":613,"column":33},"end":{"line":613,"column":42}},{"start":{"line":613,"column":45},"end":{"line":613,"column":52}}]},"61":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":8},"end":{"line":672,"column":8}},{"start":{"line":672,"column":8},"end":{"line":672,"column":8}}]},"62":{"line":679,"type":"if","locations":[{"start":{"line":679,"column":8},"end":{"line":679,"column":8}},{"start":{"line":679,"column":8},"end":{"line":679,"column":8}}]},"63":{"line":710,"type":"binary-expr","locations":[{"start":{"line":710,"column":19},"end":{"line":710,"column":46}},{"start":{"line":710,"column":50},"end":{"line":710,"column":52}}]},"64":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":8},"end":{"line":719,"column":8}},{"start":{"line":719,"column":8},"end":{"line":719,"column":8}}]},"65":{"line":723,"type":"if","locations":[{"start":{"line":723,"column":10},"end":{"line":723,"column":10}},{"start":{"line":723,"column":10},"end":{"line":723,"column":10}}]},"66":{"line":730,"type":"if","locations":[{"start":{"line":730,"column":14},"end":{"line":730,"column":14}},{"start":{"line":730,"column":14},"end":{"line":730,"column":14}}]},"67":{"line":736,"type":"if","locations":[{"start":{"line":736,"column":12},"end":{"line":736,"column":12}},{"start":{"line":736,"column":12},"end":{"line":736,"column":12}}]},"68":{"line":741,"type":"binary-expr","locations":[{"start":{"line":741,"column":23},"end":{"line":741,"column":40}},{"start":{"line":741,"column":44},"end":{"line":741,"column":77}}]},"69":{"line":742,"type":"if","locations":[{"start":{"line":742,"column":10},"end":{"line":742,"column":10}},{"start":{"line":742,"column":10},"end":{"line":742,"column":10}}]},"70":{"line":742,"type":"binary-expr","locations":[{"start":{"line":742,"column":14},"end":{"line":742,"column":24}},{"start":{"line":742,"column":28},"end":{"line":742,"column":68}}]},"71":{"line":742,"type":"binary-expr","locations":[{"start":{"line":742,"column":30},"end":{"line":742,"column":35}},{"start":{"line":742,"column":39},"end":{"line":742,"column":67}}]},"72":{"line":747,"type":"if","locations":[{"start":{"line":747,"column":10},"end":{"line":747,"column":10}},{"start":{"line":747,"column":10},"end":{"line":747,"column":10}}]},"73":{"line":753,"type":"if","locations":[{"start":{"line":753,"column":8},"end":{"line":753,"column":8}},{"start":{"line":753,"column":8},"end":{"line":753,"column":8}}]},"74":{"line":759,"type":"if","locations":[{"start":{"line":759,"column":10},"end":{"line":759,"column":10}},{"start":{"line":759,"column":10},"end":{"line":759,"column":10}}]},"75":{"line":807,"type":"if","locations":[{"start":{"line":807,"column":4},"end":{"line":807,"column":4}},{"start":{"line":807,"column":4},"end":{"line":807,"column":4}}]},"76":{"line":812,"type":"if","locations":[{"start":{"line":812,"column":11},"end":{"line":812,"column":11}},{"start":{"line":812,"column":11},"end":{"line":812,"column":11}}]},"77":{"line":824,"type":"if","locations":[{"start":{"line":824,"column":4},"end":{"line":824,"column":4}},{"start":{"line":824,"column":4},"end":{"line":824,"column":4}}]},"78":{"line":830,"type":"if","locations":[{"start":{"line":830,"column":4},"end":{"line":830,"column":4}},{"start":{"line":830,"column":4},"end":{"line":830,"column":4}}]},"79":{"line":831,"type":"if","locations":[{"start":{"line":831,"column":6},"end":{"line":831,"column":6}},{"start":{"line":831,"column":6},"end":{"line":831,"column":6}}]},"80":{"line":832,"type":"if","locations":[{"start":{"line":832,"column":8},"end":{"line":832,"column":8}},{"start":{"line":832,"column":8},"end":{"line":832,"column":8}}]},"81":{"line":850,"type":"if","locations":[{"start":{"line":850,"column":4},"end":{"line":850,"column":4}},{"start":{"line":850,"column":4},"end":{"line":850,"column":4}}]},"82":{"line":856,"type":"if","locations":[{"start":{"line":856,"column":4},"end":{"line":856,"column":4}},{"start":{"line":856,"column":4},"end":{"line":856,"column":4}}]},"83":{"line":860,"type":"cond-expr","locations":[{"start":{"line":861,"column":10},"end":{"line":861,"column":12}},{"start":{"line":862,"column":10},"end":{"line":862,"column":16}}]},"84":{"line":866,"type":"cond-expr","locations":[{"start":{"line":866,"column":34},"end":{"line":866,"column":37}},{"start":{"line":866,"column":40},"end":{"line":866,"column":50}}]},"85":{"line":891,"type":"if","locations":[{"start":{"line":891,"column":4},"end":{"line":891,"column":4}},{"start":{"line":891,"column":4},"end":{"line":891,"column":4}}]},"86":{"line":896,"type":"if","locations":[{"start":{"line":896,"column":4},"end":{"line":896,"column":4}},{"start":{"line":896,"column":4},"end":{"line":896,"column":4}}]},"87":{"line":942,"type":"if","locations":[{"start":{"line":942,"column":4},"end":{"line":942,"column":4}},{"start":{"line":942,"column":4},"end":{"line":942,"column":4}}]},"88":{"line":1007,"type":"if","locations":[{"start":{"line":1007,"column":6},"end":{"line":1007,"column":6}},{"start":{"line":1007,"column":6},"end":{"line":1007,"column":6}}]},"89":{"line":1007,"type":"binary-expr","locations":[{"start":{"line":1007,"column":10},"end":{"line":1007,"column":19}},{"start":{"line":1007,"column":23},"end":{"line":1007,"column":51}}]},"90":{"line":1008,"type":"if","locations":[{"start":{"line":1008,"column":8},"end":{"line":1008,"column":8}},{"start":{"line":1008,"column":8},"end":{"line":1008,"column":8}}]},"91":{"line":1011,"type":"if","locations":[{"start":{"line":1011,"column":10},"end":{"line":1011,"column":10}},{"start":{"line":1011,"column":10},"end":{"line":1011,"column":10}}]},"92":{"line":1019,"type":"if","locations":[{"start":{"line":1019,"column":13},"end":{"line":1019,"column":13}},{"start":{"line":1019,"column":13},"end":{"line":1019,"column":13}}]},"93":{"line":1019,"type":"binary-expr","locations":[{"start":{"line":1019,"column":18},"end":{"line":1019,"column":27}},{"start":{"line":1019,"column":31},"end":{"line":1019,"column":40}},{"start":{"line":1019,"column":45},"end":{"line":1019,"column":59}}]},"94":{"line":1022,"type":"if","locations":[{"start":{"line":1022,"column":8},"end":{"line":1022,"column":8}},{"start":{"line":1022,"column":8},"end":{"line":1022,"column":8}}]},"95":{"line":1026,"type":"if","locations":[{"start":{"line":1026,"column":10},"end":{"line":1026,"column":10}},{"start":{"line":1026,"column":10},"end":{"line":1026,"column":10}}]},"96":{"line":1032,"type":"if","locations":[{"start":{"line":1032,"column":10},"end":{"line":1032,"column":10}},{"start":{"line":1032,"column":10},"end":{"line":1032,"column":10}}]},"97":{"line":1047,"type":"if","locations":[{"start":{"line":1047,"column":8},"end":{"line":1047,"column":8}},{"start":{"line":1047,"column":8},"end":{"line":1047,"column":8}}]},"98":{"line":1052,"type":"cond-expr","locations":[{"start":{"line":1052,"column":31},"end":{"line":1052,"column":53}},{"start":{"line":1052,"column":56},"end":{"line":1052,"column":61}}]},"99":{"line":1054,"type":"if","locations":[{"start":{"line":1054,"column":8},"end":{"line":1054,"column":8}},{"start":{"line":1054,"column":8},"end":{"line":1054,"column":8}}]},"100":{"line":1077,"type":"binary-expr","locations":[{"start":{"line":1077,"column":12},"end":{"line":1077,"column":46}},{"start":{"line":1077,"column":51},"end":{"line":1077,"column":72}}]},"101":{"line":1092,"type":"if","locations":[{"start":{"line":1092,"column":4},"end":{"line":1092,"column":4}},{"start":{"line":1092,"column":4},"end":{"line":1092,"column":4}}]},"102":{"line":1098,"type":"binary-expr","locations":[{"start":{"line":1098,"column":17},"end":{"line":1098,"column":75}},{"start":{"line":1098,"column":79},"end":{"line":1098,"column":80}}]},"103":{"line":1105,"type":"if","locations":[{"start":{"line":1105,"column":6},"end":{"line":1105,"column":6}},{"start":{"line":1105,"column":6},"end":{"line":1105,"column":6}}]},"104":{"line":1129,"type":"binary-expr","locations":[{"start":{"line":1129,"column":21},"end":{"line":1129,"column":35}},{"start":{"line":1129,"column":39},"end":{"line":1129,"column":62}}]},"105":{"line":1152,"type":"if","locations":[{"start":{"line":1152,"column":6},"end":{"line":1152,"column":6}},{"start":{"line":1152,"column":6},"end":{"line":1152,"column":6}}]},"106":{"line":1167,"type":"binary-expr","locations":[{"start":{"line":1167,"column":13},"end":{"line":1167,"column":36}},{"start":{"line":1167,"column":40},"end":{"line":1167,"column":73}}]},"107":{"line":1179,"type":"if","locations":[{"start":{"line":1179,"column":4},"end":{"line":1179,"column":4}},{"start":{"line":1179,"column":4},"end":{"line":1179,"column":4}}]},"108":{"line":1187,"type":"binary-expr","locations":[{"start":{"line":1187,"column":22},"end":{"line":1187,"column":42}},{"start":{"line":1187,"column":46},"end":{"line":1187,"column":58}}]},"109":{"line":1189,"type":"binary-expr","locations":[{"start":{"line":1189,"column":21},"end":{"line":1189,"column":53}},{"start":{"line":1189,"column":57},"end":{"line":1189,"column":69}}]},"110":{"line":1195,"type":"if","locations":[{"start":{"line":1195,"column":8},"end":{"line":1195,"column":8}},{"start":{"line":1195,"column":8},"end":{"line":1195,"column":8}}]},"111":{"line":1195,"type":"binary-expr","locations":[{"start":{"line":1195,"column":12},"end":{"line":1195,"column":35}},{"start":{"line":1197,"column":16},"end":{"line":1197,"column":63}}]},"112":{"line":1203,"type":"if","locations":[{"start":{"line":1203,"column":10},"end":{"line":1203,"column":10}},{"start":{"line":1203,"column":10},"end":{"line":1203,"column":10}}]},"113":{"line":1213,"type":"if","locations":[{"start":{"line":1213,"column":10},"end":{"line":1213,"column":10}},{"start":{"line":1213,"column":10},"end":{"line":1213,"column":10}}]},"114":{"line":1223,"type":"if","locations":[{"start":{"line":1223,"column":8},"end":{"line":1223,"column":8}},{"start":{"line":1223,"column":8},"end":{"line":1223,"column":8}}]},"115":{"line":1226,"type":"if","locations":[{"start":{"line":1226,"column":8},"end":{"line":1226,"column":8}},{"start":{"line":1226,"column":8},"end":{"line":1226,"column":8}}]},"116":{"line":1231,"type":"if","locations":[{"start":{"line":1231,"column":6},"end":{"line":1231,"column":6}},{"start":{"line":1231,"column":6},"end":{"line":1231,"column":6}}]},"117":{"line":1258,"type":"if","locations":[{"start":{"line":1258,"column":6},"end":{"line":1258,"column":6}},{"start":{"line":1258,"column":6},"end":{"line":1258,"column":6}}]},"118":{"line":1260,"type":"if","locations":[{"start":{"line":1260,"column":13},"end":{"line":1260,"column":13}},{"start":{"line":1260,"column":13},"end":{"line":1260,"column":13}}]},"119":{"line":1266,"type":"if","locations":[{"start":{"line":1266,"column":4},"end":{"line":1266,"column":4}},{"start":{"line":1266,"column":4},"end":{"line":1266,"column":4}}]},"120":{"line":1266,"type":"binary-expr","locations":[{"start":{"line":1266,"column":10},"end":{"line":1266,"column":19}},{"start":{"line":1266,"column":23},"end":{"line":1266,"column":68}}]},"121":{"line":1269,"type":"cond-expr","locations":[{"start":{"line":1270,"column":12},"end":{"line":1270,"column":28}},{"start":{"line":1271,"column":12},"end":{"line":1271,"column":26}}]},"122":{"line":1399,"type":"if","locations":[{"start":{"line":1399,"column":6},"end":{"line":1399,"column":6}},{"start":{"line":1399,"column":6},"end":{"line":1399,"column":6}}]},"123":{"line":1400,"type":"binary-expr","locations":[{"start":{"line":1400,"column":23},"end":{"line":1400,"column":24}},{"start":{"line":1400,"column":28},"end":{"line":1400,"column":38}},{"start":{"line":1400,"column":42},"end":{"line":1400,"column":43}}]},"124":{"line":1424,"type":"if","locations":[{"start":{"line":1424,"column":4},"end":{"line":1424,"column":4}},{"start":{"line":1424,"column":4},"end":{"line":1424,"column":4}}]},"125":{"line":1448,"type":"binary-expr","locations":[{"start":{"line":1448,"column":15},"end":{"line":1448,"column":23}},{"start":{"line":1448,"column":27},"end":{"line":1448,"column":40}}]},"126":{"line":1449,"type":"binary-expr","locations":[{"start":{"line":1449,"column":14},"end":{"line":1449,"column":32}},{"start":{"line":1449,"column":36},"end":{"line":1449,"column":44}}]},"127":{"line":1462,"type":"if","locations":[{"start":{"line":1462,"column":4},"end":{"line":1462,"column":4}},{"start":{"line":1462,"column":4},"end":{"line":1462,"column":4}}]},"128":{"line":1480,"type":"cond-expr","locations":[{"start":{"line":1481,"column":21},"end":{"line":1481,"column":41}},{"start":{"line":1482,"column":21},"end":{"line":1482,"column":29}}]},"129":{"line":1483,"type":"binary-expr","locations":[{"start":{"line":1483,"column":13},"end":{"line":1483,"column":32}},{"start":{"line":1483,"column":36},"end":{"line":1483,"column":60}}]},"130":{"line":1494,"type":"binary-expr","locations":[{"start":{"line":1494,"column":25},"end":{"line":1494,"column":33}},{"start":{"line":1494,"column":37},"end":{"line":1494,"column":45}},{"start":{"line":1494,"column":50},"end":{"line":1494,"column":68}}]},"131":{"line":1495,"type":"if","locations":[{"start":{"line":1495,"column":12},"end":{"line":1495,"column":12}},{"start":{"line":1495,"column":12},"end":{"line":1495,"column":12}}]},"132":{"line":1495,"type":"cond-expr","locations":[{"start":{"line":1496,"column":18},"end":{"line":1496,"column":47}},{"start":{"line":1497,"column":19},"end":{"line":1497,"column":60}}]},"133":{"line":1497,"type":"binary-expr","locations":[{"start":{"line":1497,"column":19},"end":{"line":1497,"column":27}},{"start":{"line":1497,"column":31},"end":{"line":1497,"column":60}}]},"134":{"line":1501,"type":"if","locations":[{"start":{"line":1501,"column":12},"end":{"line":1501,"column":12}},{"start":{"line":1501,"column":12},"end":{"line":1501,"column":12}}]},"135":{"line":1512,"type":"if","locations":[{"start":{"line":1512,"column":8},"end":{"line":1512,"column":8}},{"start":{"line":1512,"column":8},"end":{"line":1512,"column":8}}]},"136":{"line":1512,"type":"binary-expr","locations":[{"start":{"line":1512,"column":13},"end":{"line":1512,"column":28}},{"start":{"line":1512,"column":32},"end":{"line":1512,"column":61}},{"start":{"line":1516,"column":15},"end":{"line":1516,"column":47}}]},"137":{"line":1522,"type":"if","locations":[{"start":{"line":1522,"column":12},"end":{"line":1522,"column":12}},{"start":{"line":1522,"column":12},"end":{"line":1522,"column":12}}]},"138":{"line":1522,"type":"binary-expr","locations":[{"start":{"line":1522,"column":16},"end":{"line":1522,"column":37}},{"start":{"line":1523,"column":19},"end":{"line":1523,"column":30}},{"start":{"line":1523,"column":34},"end":{"line":1523,"column":65}}]},"139":{"line":1528,"type":"if","locations":[{"start":{"line":1528,"column":10},"end":{"line":1528,"column":10}},{"start":{"line":1528,"column":10},"end":{"line":1528,"column":10}}]},"140":{"line":1542,"type":"if","locations":[{"start":{"line":1542,"column":12},"end":{"line":1542,"column":12}},{"start":{"line":1542,"column":12},"end":{"line":1542,"column":12}}]},"141":{"line":1546,"type":"if","locations":[{"start":{"line":1546,"column":14},"end":{"line":1546,"column":14}},{"start":{"line":1546,"column":14},"end":{"line":1546,"column":14}}]},"142":{"line":1546,"type":"binary-expr","locations":[{"start":{"line":1546,"column":18},"end":{"line":1546,"column":32}},{"start":{"line":1546,"column":37},"end":{"line":1546,"column":70}},{"start":{"line":1547,"column":21},"end":{"line":1547,"column":49}}]},"143":{"line":1551,"type":"if","locations":[{"start":{"line":1551,"column":14},"end":{"line":1551,"column":14}},{"start":{"line":1551,"column":14},"end":{"line":1551,"column":14}}]},"144":{"line":1555,"type":"if","locations":[{"start":{"line":1555,"column":12},"end":{"line":1555,"column":12}},{"start":{"line":1555,"column":12},"end":{"line":1555,"column":12}}]},"145":{"line":1561,"type":"cond-expr","locations":[{"start":{"line":1562,"column":20},"end":{"line":1562,"column":46}},{"start":{"line":1563,"column":20},"end":{"line":1567,"column":21}}]},"146":{"line":1563,"type":"cond-expr","locations":[{"start":{"line":1565,"column":20},"end":{"line":1566,"column":50}},{"start":{"line":1567,"column":20},"end":{"line":1567,"column":21}}]},"147":{"line":1563,"type":"binary-expr","locations":[{"start":{"line":1563,"column":21},"end":{"line":1563,"column":32}},{"start":{"line":1564,"column":24},"end":{"line":1564,"column":52}}]},"148":{"line":1568,"type":"binary-expr","locations":[{"start":{"line":1568,"column":29},"end":{"line":1568,"column":39}},{"start":{"line":1569,"column":21},"end":{"line":1569,"column":57}}]},"149":{"line":1575,"type":"if","locations":[{"start":{"line":1575,"column":12},"end":{"line":1575,"column":12}},{"start":{"line":1575,"column":12},"end":{"line":1575,"column":12}}]},"150":{"line":1575,"type":"binary-expr","locations":[{"start":{"line":1575,"column":29},"end":{"line":1575,"column":48}},{"start":{"line":1575,"column":52},"end":{"line":1575,"column":61}}]},"151":{"line":1578,"type":"cond-expr","locations":[{"start":{"line":1579,"column":18},"end":{"line":1580,"column":39}},{"start":{"line":1581,"column":18},"end":{"line":1581,"column":23}}]},"152":{"line":1579,"type":"cond-expr","locations":[{"start":{"line":1580,"column":20},"end":{"line":1580,"column":32}},{"start":{"line":1580,"column":35},"end":{"line":1580,"column":39}}]},"153":{"line":1579,"type":"binary-expr","locations":[{"start":{"line":1579,"column":18},"end":{"line":1579,"column":29}},{"start":{"line":1579,"column":33},"end":{"line":1579,"column":51}}]},"154":{"line":1583,"type":"if","locations":[{"start":{"line":1583,"column":12},"end":{"line":1583,"column":12}},{"start":{"line":1583,"column":12},"end":{"line":1583,"column":12}}]},"155":{"line":1596,"type":"if","locations":[{"start":{"line":1596,"column":6},"end":{"line":1596,"column":6}},{"start":{"line":1596,"column":6},"end":{"line":1596,"column":6}}]},"156":{"line":1599,"type":"if","locations":[{"start":{"line":1599,"column":13},"end":{"line":1599,"column":13}},{"start":{"line":1599,"column":13},"end":{"line":1599,"column":13}}]},"157":{"line":1629,"type":"cond-expr","locations":[{"start":{"line":1630,"column":16},"end":{"line":1630,"column":55}},{"start":{"line":1631,"column":16},"end":{"line":1631,"column":48}}]},"158":{"line":1633,"type":"cond-expr","locations":[{"start":{"line":1634,"column":16},"end":{"line":1634,"column":49}},{"start":{"line":1635,"column":16},"end":{"line":1635,"column":42}}]},"159":{"line":1650,"type":"if","locations":[{"start":{"line":1650,"column":2},"end":{"line":1650,"column":2}},{"start":{"line":1650,"column":2},"end":{"line":1650,"column":2}}]},"160":{"line":1650,"type":"binary-expr","locations":[{"start":{"line":1650,"column":6},"end":{"line":1650,"column":34}},{"start":{"line":1650,"column":38},"end":{"line":1650,"column":51}}]}},"code":["// Copyright (C) 2006 Google Inc.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","//      http://www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// See the License for the specific language governing permissions and","// limitations under the License.","","","/**"," * @fileoverview"," * some functions for browser-side pretty printing of code contained in html."," *"," * <p>"," * For a fairly comprehensive set of languages see the"," * <a href=\"http://google-code-prettify.googlecode.com/svn/trunk/README.html#langs\">README</a>"," * file that came with this source.  At a minimum, the lexer should work on a"," * number of languages including C and friends, Java, Python, Bash, SQL, HTML,"," * XML, CSS, Javascript, and Makefiles.  It works passably on Ruby, PHP and Awk"," * and a subset of Perl, but, because of commenting conventions, doesn't work on"," * Smalltalk, Lisp-like, or CAML-like languages without an explicit lang class."," * <p>"," * Usage: <ol>"," * <li> include this source file in an html page via"," *   {@code <script type=\"text/javascript\" src=\"/path/to/prettify.js\"></script>}"," * <li> define style rules.  See the example page for examples."," * <li> mark the {@code <pre>} and {@code <code>} tags in your source with"," *    {@code class=prettyprint.}"," *    You can also use the (html deprecated) {@code <xmp>} tag, but the pretty"," *    printer needs to do more substantial DOM manipulations to support that, so"," *    some css styles may not be preserved."," * </ol>"," * That's it.  I wanted to keep the API as simple as possible, so there's no"," * need to specify which language the code is in, but if you wish, you can add"," * another class to the {@code <pre>} or {@code <code>} element to specify the"," * language, as in {@code <pre class=\"prettyprint lang-java\">}.  Any class that"," * starts with \"lang-\" followed by a file extension, specifies the file type."," * See the \"lang-*.js\" files in this directory for code that implements"," * per-language file handlers."," * <p>"," * Change log:<br>"," * cbeust, 2006/08/22"," * <blockquote>"," *   Java annotations (start with \"@\") are now captured as literals (\"lit\")"," * </blockquote>"," * @requires console"," */","","// JSLint declarations","/*global console, document, navigator, setTimeout, window, define */","","/** @define {boolean} */","var IN_GLOBAL_SCOPE = true;","","/**"," * Split {@code prettyPrint} into multiple timeouts so as not to interfere with"," * UI events."," * If set to {@code false}, {@code prettyPrint()} is synchronous."," */","window['PR_SHOULD_USE_CONTINUATION'] = true;","","/**"," * Pretty print a chunk of code."," * @param {string} sourceCodeHtml The HTML to pretty print."," * @param {string} opt_langExtension The language name to use."," *     Typically, a filename extension like 'cpp' or 'java'."," * @param {number|boolean} opt_numberLines True to number lines,"," *     or the 1-indexed number of the first line in sourceCodeHtml."," * @return {string} code as html, but prettier"," */","var prettyPrintOne;","/**"," * Find all the {@code <pre>} and {@code <code>} tags in the DOM with"," * {@code class=prettyprint} and prettify them."," *"," * @param {Function} opt_whenDone called when prettifying is done."," * @param {HTMLElement|HTMLDocument} opt_root an element or document"," *   containing all the elements to pretty print."," *   Defaults to {@code document.body}."," */","var prettyPrint;","","","(function () {","  var win = window;","  // Keyword lists for various languages.","  // We use things that coerce to strings to make them compact when minified","  // and to defeat aggressive optimizers that fold large string constants.","  var FLOW_CONTROL_KEYWORDS = [\"break,continue,do,else,for,if,return,while\"];","  var C_KEYWORDS = [FLOW_CONTROL_KEYWORDS,\"auto,case,char,const,default,\" + ","      \"double,enum,extern,float,goto,inline,int,long,register,short,signed,\" +","      \"sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"];","  var COMMON_KEYWORDS = [C_KEYWORDS,\"catch,class,delete,false,import,\" +","      \"new,operator,private,protected,public,this,throw,true,try,typeof\"];","  var CPP_KEYWORDS = [COMMON_KEYWORDS,\"alignof,align_union,asm,axiom,bool,\" +","      \"concept,concept_map,const_cast,constexpr,decltype,delegate,\" +","      \"dynamic_cast,explicit,export,friend,generic,late_check,\" +","      \"mutable,namespace,nullptr,property,reinterpret_cast,static_assert,\" +","      \"static_cast,template,typeid,typename,using,virtual,where\"];","  var JAVA_KEYWORDS = [COMMON_KEYWORDS,","      \"abstract,assert,boolean,byte,extends,final,finally,implements,import,\" +","      \"instanceof,interface,null,native,package,strictfp,super,synchronized,\" +","      \"throws,transient\"];","  var CSHARP_KEYWORDS = [COMMON_KEYWORDS,","      \"abstract,as,base,bool,by,byte,checked,decimal,delegate,descending,\" +","      \"dynamic,event,finally,fixed,foreach,from,group,implicit,in,interface,\" +","      \"internal,into,is,let,lock,null,object,out,override,orderby,params,\" +","      \"partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,\" +","      \"unchecked,unsafe,ushort,var,virtual,where\"];","  var COFFEE_KEYWORDS = \"all,and,by,catch,class,else,extends,false,finally,\" +","      \"for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,\" +","      \"throw,true,try,unless,until,when,while,yes\";","  var JSCRIPT_KEYWORDS = [COMMON_KEYWORDS,","      \"debugger,eval,export,function,get,null,set,undefined,var,with,\" +","      \"Infinity,NaN\"];","  var PERL_KEYWORDS = \"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,\" +","      \"goto,if,import,last,local,my,next,no,our,print,package,redo,require,\" +","      \"sub,undef,unless,until,use,wantarray,while,BEGIN,END\";","  var PYTHON_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"and,as,assert,class,def,del,\" +","      \"elif,except,exec,finally,from,global,import,in,is,lambda,\" +","      \"nonlocal,not,or,pass,print,raise,try,with,yield,\" +","      \"False,True,None\"];","  var RUBY_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"alias,and,begin,case,class,\" +","      \"def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,\" +","      \"rescue,retry,self,super,then,true,undef,unless,until,when,yield,\" +","      \"BEGIN,END\"];","   var RUST_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"as,assert,const,copy,drop,\" +","      \"enum,extern,fail,false,fn,impl,let,log,loop,match,mod,move,mut,priv,\" +","      \"pub,pure,ref,self,static,struct,true,trait,type,unsafe,use\"];","  var SH_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"case,done,elif,esac,eval,fi,\" +","      \"function,in,local,set,then,until\"];","  var ALL_KEYWORDS = [","      CPP_KEYWORDS, CSHARP_KEYWORDS, JSCRIPT_KEYWORDS, PERL_KEYWORDS,","      PYTHON_KEYWORDS, RUBY_KEYWORDS, SH_KEYWORDS];","  var C_TYPES = /^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/;","","  // token style names.  correspond to css classes","  /**","   * token style for a string literal","   * @const","   */","  var PR_STRING = 'str';","  /**","   * token style for a keyword","   * @const","   */","  var PR_KEYWORD = 'kwd';","  /**","   * token style for a comment","   * @const","   */","  var PR_COMMENT = 'com';","  /**","   * token style for a type","   * @const","   */","  var PR_TYPE = 'typ';","  /**","   * token style for a literal value.  e.g. 1, null, true.","   * @const","   */","  var PR_LITERAL = 'lit';","  /**","   * token style for a punctuation string.","   * @const","   */","  var PR_PUNCTUATION = 'pun';","  /**","   * token style for plain text.","   * @const","   */","  var PR_PLAIN = 'pln';","","  /**","   * token style for an sgml tag.","   * @const","   */","  var PR_TAG = 'tag';","  /**","   * token style for a markup declaration such as a DOCTYPE.","   * @const","   */","  var PR_DECLARATION = 'dec';","  /**","   * token style for embedded source.","   * @const","   */","  var PR_SOURCE = 'src';","  /**","   * token style for an sgml attribute name.","   * @const","   */","  var PR_ATTRIB_NAME = 'atn';","  /**","   * token style for an sgml attribute value.","   * @const","   */","  var PR_ATTRIB_VALUE = 'atv';","","  /**","   * A class that indicates a section of markup that is not code, e.g. to allow","   * embedding of line numbers within code listings.","   * @const","   */","  var PR_NOCODE = 'nocode';","","  ","  ","  /**","   * A set of tokens that can precede a regular expression literal in","   * javascript","   * http://web.archive.org/web/20070717142515/http://www.mozilla.org/js/language/js20/rationale/syntax.html","   * has the full list, but I've removed ones that might be problematic when","   * seen in languages that don't support regular expression literals.","   *","   * <p>Specifically, I've removed any keywords that can't precede a regexp","   * literal in a syntactically legal javascript program, and I've removed the","   * \"in\" keyword since it's not a keyword in many languages, and might be used","   * as a count of inches.","   *","   * <p>The link above does not accurately describe EcmaScript rules since","   * it fails to distinguish between (a=++/b/i) and (a++/b/i) but it works","   * very well in practice.","   *","   * @private","   * @const","   */","  var REGEXP_PRECEDER_PATTERN = '(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*';","  ","  // CAVEAT: this does not properly handle the case where a regular","  // expression immediately follows another since a regular expression may","  // have flags for case-sensitivity and the like.  Having regexp tokens","  // adjacent is not valid in any language I'm aware of, so I'm punting.","  // TODO: maybe style special characters inside a regexp as punctuation.","","  /**","   * Given a group of {@link RegExp}s, returns a {@code RegExp} that globally","   * matches the union of the sets of strings matched by the input RegExp.","   * Since it matches globally, if the input strings have a start-of-input","   * anchor (/^.../), it is ignored for the purposes of unioning.","   * @param {Array.<RegExp>} regexs non multiline, non-global regexs.","   * @return {RegExp} a global regex.","   */","  function combinePrefixPatterns(regexs) {","    var capturedGroupIndex = 0;","  ","    var needToFoldCase = false;","    var ignoreCase = false;","    for (var i = 0, n = regexs.length; i < n; ++i) {","      var regex = regexs[i];","      if (regex.ignoreCase) {","        ignoreCase = true;","      } else if (/[a-z]/i.test(regex.source.replace(","                     /\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi, ''))) {","        needToFoldCase = true;","        ignoreCase = false;","        break;","      }","    }","  ","    var escapeCharToCodeUnit = {","      'b': 8,","      't': 9,","      'n': 0xa,","      'v': 0xb,","      'f': 0xc,","      'r': 0xd","    };","  ","    function decodeEscape(charsetPart) {","      var cc0 = charsetPart.charCodeAt(0);","      if (cc0 !== 92 /* \\\\ */) {","        return cc0;","      }","      var c1 = charsetPart.charAt(1);","      cc0 = escapeCharToCodeUnit[c1];","      if (cc0) {","        return cc0;","      } else if ('0' <= c1 && c1 <= '7') {","        return parseInt(charsetPart.substring(1), 8);","      } else if (c1 === 'u' || c1 === 'x') {","        return parseInt(charsetPart.substring(2), 16);","      } else {","        return charsetPart.charCodeAt(1);","      }","    }","  ","    function encodeEscape(charCode) {","      if (charCode < 0x20) {","        return (charCode < 0x10 ? '\\\\x0' : '\\\\x') + charCode.toString(16);","      }","      var ch = String.fromCharCode(charCode);","      return (ch === '\\\\' || ch === '-' || ch === ']' || ch === '^')","          ? \"\\\\\" + ch : ch;","    }","  ","    function caseFoldCharset(charSet) {","      var charsetParts = charSet.substring(1, charSet.length - 1).match(","          new RegExp(","              '\\\\\\\\u[0-9A-Fa-f]{4}'","              + '|\\\\\\\\x[0-9A-Fa-f]{2}'","              + '|\\\\\\\\[0-3][0-7]{0,2}'","              + '|\\\\\\\\[0-7]{1,2}'","              + '|\\\\\\\\[\\\\s\\\\S]'","              + '|-'","              + '|[^-\\\\\\\\]',","              'g'));","      var ranges = [];","      var inverse = charsetParts[0] === '^';","  ","      var out = ['['];","      if (inverse) { out.push('^'); }","  ","      for (var i = inverse ? 1 : 0, n = charsetParts.length; i < n; ++i) {","        var p = charsetParts[i];","        if (/\\\\[bdsw]/i.test(p)) {  // Don't muck with named groups.","          out.push(p);","        } else {","          var start = decodeEscape(p);","          var end;","          if (i + 2 < n && '-' === charsetParts[i + 1]) {","            end = decodeEscape(charsetParts[i + 2]);","            i += 2;","          } else {","            end = start;","          }","          ranges.push([start, end]);","          // If the range might intersect letters, then expand it.","          // This case handling is too simplistic.","          // It does not deal with non-latin case folding.","          // It works for latin source code identifiers though.","          if (!(end < 65 || start > 122)) {","            if (!(end < 65 || start > 90)) {","              ranges.push([Math.max(65, start) | 32, Math.min(end, 90) | 32]);","            }","            if (!(end < 97 || start > 122)) {","              ranges.push([Math.max(97, start) & ~32, Math.min(end, 122) & ~32]);","            }","          }","        }","      }","  ","      // [[1, 10], [3, 4], [8, 12], [14, 14], [16, 16], [17, 17]]","      // -> [[1, 12], [14, 14], [16, 17]]","      ranges.sort(function (a, b) { return (a[0] - b[0]) || (b[1]  - a[1]); });","      var consolidatedRanges = [];","      var lastRange = [];","      for (var i = 0; i < ranges.length; ++i) {","        var range = ranges[i];","        if (range[0] <= lastRange[1] + 1) {","          lastRange[1] = Math.max(lastRange[1], range[1]);","        } else {","          consolidatedRanges.push(lastRange = range);","        }","      }","  ","      for (var i = 0; i < consolidatedRanges.length; ++i) {","        var range = consolidatedRanges[i];","        out.push(encodeEscape(range[0]));","        if (range[1] > range[0]) {","          if (range[1] + 1 > range[0]) { out.push('-'); }","          out.push(encodeEscape(range[1]));","        }","      }","      out.push(']');","      return out.join('');","    }","  ","    function allowAnywhereFoldCaseAndRenumberGroups(regex) {","      // Split into character sets, escape sequences, punctuation strings","      // like ('(', '(?:', ')', '^'), and runs of characters that do not","      // include any of the above.","      var parts = regex.source.match(","          new RegExp(","              '(?:'","              + '\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]'  // a character set","              + '|\\\\\\\\u[A-Fa-f0-9]{4}'  // a unicode escape","              + '|\\\\\\\\x[A-Fa-f0-9]{2}'  // a hex escape","              + '|\\\\\\\\[0-9]+'  // a back-reference or octal escape","              + '|\\\\\\\\[^ux0-9]'  // other escape sequence","              + '|\\\\(\\\\?[:!=]'  // start of a non-capturing group","              + '|[\\\\(\\\\)\\\\^]'  // start/end of a group, or line start","              + '|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+'  // run of other characters","              + ')',","              'g'));","      var n = parts.length;","  ","      // Maps captured group numbers to the number they will occupy in","      // the output or to -1 if that has not been determined, or to","      // undefined if they need not be capturing in the output.","      var capturedGroups = [];","  ","      // Walk over and identify back references to build the capturedGroups","      // mapping.","      for (var i = 0, groupIndex = 0; i < n; ++i) {","        var p = parts[i];","        if (p === '(') {","          // groups are 1-indexed, so max group index is count of '('","          ++groupIndex;","        } else if ('\\\\' === p.charAt(0)) {","          var decimalValue = +p.substring(1);","          if (decimalValue) {","            if (decimalValue <= groupIndex) {","              capturedGroups[decimalValue] = -1;","            } else {","              // Replace with an unambiguous escape sequence so that","              // an octal escape sequence does not turn into a backreference","              // to a capturing group from an earlier regex.","              parts[i] = encodeEscape(decimalValue);","            }","          }","        }","      }","  ","      // Renumber groups and reduce capturing groups to non-capturing groups","      // where possible.","      for (var i = 1; i < capturedGroups.length; ++i) {","        if (-1 === capturedGroups[i]) {","          capturedGroups[i] = ++capturedGroupIndex;","        }","      }","      for (var i = 0, groupIndex = 0; i < n; ++i) {","        var p = parts[i];","        if (p === '(') {","          ++groupIndex;","          if (!capturedGroups[groupIndex]) {","            parts[i] = '(?:';","          }","        } else if ('\\\\' === p.charAt(0)) {","          var decimalValue = +p.substring(1);","          if (decimalValue && decimalValue <= groupIndex) {","            parts[i] = '\\\\' + capturedGroups[decimalValue];","          }","        }","      }","  ","      // Remove any prefix anchors so that the output will match anywhere.","      // ^^ really does mean an anchored match though.","      for (var i = 0; i < n; ++i) {","        if ('^' === parts[i] && '^' !== parts[i + 1]) { parts[i] = ''; }","      }","  ","      // Expand letters to groups to handle mixing of case-sensitive and","      // case-insensitive patterns if necessary.","      if (regex.ignoreCase && needToFoldCase) {","        for (var i = 0; i < n; ++i) {","          var p = parts[i];","          var ch0 = p.charAt(0);","          if (p.length >= 2 && ch0 === '[') {","            parts[i] = caseFoldCharset(p);","          } else if (ch0 !== '\\\\') {","            // TODO: handle letters in numeric escapes.","            parts[i] = p.replace(","                /[a-zA-Z]/g,","                function (ch) {","                  var cc = ch.charCodeAt(0);","                  return '[' + String.fromCharCode(cc & ~32, cc | 32) + ']';","                });","          }","        }","      }","  ","      return parts.join('');","    }","  ","    var rewritten = [];","    for (var i = 0, n = regexs.length; i < n; ++i) {","      var regex = regexs[i];","      if (regex.global || regex.multiline) { throw new Error('' + regex); }","      rewritten.push(","          '(?:' + allowAnywhereFoldCaseAndRenumberGroups(regex) + ')');","    }","  ","    return new RegExp(rewritten.join('|'), ignoreCase ? 'gi' : 'g');","  }","","  /**","   * Split markup into a string of source code and an array mapping ranges in","   * that string to the text nodes in which they appear.","   *","   * <p>","   * The HTML DOM structure:</p>","   * <pre>","   * (Element   \"p\"","   *   (Element \"b\"","   *     (Text  \"print \"))       ; #1","   *   (Text    \"'Hello '\")      ; #2","   *   (Element \"br\")            ; #3","   *   (Text    \"  + 'World';\")) ; #4","   * </pre>","   * <p>","   * corresponds to the HTML","   * {@code <p><b>print </b>'Hello '<br>  + 'World';</p>}.</p>","   *","   * <p>","   * It will produce the output:</p>","   * <pre>","   * {","   *   sourceCode: \"print 'Hello '\\n  + 'World';\",","   *   //                     1          2","   *   //           012345678901234 5678901234567","   *   spans: [0, #1, 6, #2, 14, #3, 15, #4]","   * }","   * </pre>","   * <p>","   * where #1 is a reference to the {@code \"print \"} text node above, and so","   * on for the other text nodes.","   * </p>","   *","   * <p>","   * The {@code} spans array is an array of pairs.  Even elements are the start","   * indices of substrings, and odd elements are the text nodes (or BR elements)","   * that contain the text for those substrings.","   * Substrings continue until the next index or the end of the source.","   * </p>","   *","   * @param {Node} node an HTML DOM subtree containing source-code.","   * @param {boolean} isPreformatted true if white-space in text nodes should","   *    be considered significant.","   * @return {Object} source code and the text nodes in which they occur.","   */","  function extractSourceSpans(node, isPreformatted) {","    var nocode = /(?:^|\\s)nocode(?:\\s|$)/;","  ","    var chunks = [];","    var length = 0;","    var spans = [];","    var k = 0;","  ","    function walk(node) {","      var type = node.nodeType;","      if (type == 1) {  // Element","        if (nocode.test(node.className)) { return; }","        for (var child = node.firstChild; child; child = child.nextSibling) {","          walk(child);","        }","        var nodeName = node.nodeName.toLowerCase();","        if ('br' === nodeName || 'li' === nodeName) {","          chunks[k] = '\\n';","          spans[k << 1] = length++;","          spans[(k++ << 1) | 1] = node;","        }","      } else if (type == 3 || type == 4) {  // Text","        var text = node.nodeValue;","        if (text.length) {","          if (!isPreformatted) {","            text = text.replace(/[ \\t\\r\\n]+/g, ' ');","          } else {","            text = text.replace(/\\r\\n?/g, '\\n');  // Normalize newlines.","          }","          // TODO: handle tabs here?","          chunks[k] = text;","          spans[k << 1] = length;","          length += text.length;","          spans[(k++ << 1) | 1] = node;","        }","      }","    }","  ","    walk(node);","  ","    return {","      sourceCode: chunks.join('').replace(/\\n$/, ''),","      spans: spans","    };","  }","","  /**","   * Apply the given language handler to sourceCode and add the resulting","   * decorations to out.","   * @param {number} basePos the index of sourceCode within the chunk of source","   *    whose decorations are already present on out.","   */","  function appendDecorations(basePos, sourceCode, langHandler, out) {","    if (!sourceCode) { return; }","    var job = {","      sourceCode: sourceCode,","      basePos: basePos","    };","    langHandler(job);","    out.push.apply(out, job.decorations);","  }","","  var notWs = /\\S/;","","  /**","   * Given an element, if it contains only one child element and any text nodes","   * it contains contain only space characters, return the sole child element.","   * Otherwise returns undefined.","   * <p>","   * This is meant to return the CODE element in {@code <pre><code ...>} when","   * there is a single child element that contains all the non-space textual","   * content, but not to return anything where there are multiple child elements","   * as in {@code <pre><code>...</code><code>...</code></pre>} or when there","   * is textual content.","   */","  function childContentWrapper(element) {","    var wrapper = undefined;","    for (var c = element.firstChild; c; c = c.nextSibling) {","      var type = c.nodeType;","      wrapper = (type === 1)  // Element Node","          ? (wrapper ? element : c)","          : (type === 3)  // Text Node","          ? (notWs.test(c.nodeValue) ? element : wrapper)","          : wrapper;","    }","    return wrapper === element ? undefined : wrapper;","  }","","  /** Given triples of [style, pattern, context] returns a lexing function,","    * The lexing function interprets the patterns to find token boundaries and","    * returns a decoration list of the form","    * [index_0, style_0, index_1, style_1, ..., index_n, style_n]","    * where index_n is an index into the sourceCode, and style_n is a style","    * constant like PR_PLAIN.  index_n-1 <= index_n, and style_n-1 applies to","    * all characters in sourceCode[index_n-1:index_n].","    *","    * The stylePatterns is a list whose elements have the form","    * [style : string, pattern : RegExp, DEPRECATED, shortcut : string].","    *","    * Style is a style constant like PR_PLAIN, or can be a string of the","    * form 'lang-FOO', where FOO is a language extension describing the","    * language of the portion of the token in $1 after pattern executes.","    * E.g., if style is 'lang-lisp', and group 1 contains the text","    * '(hello (world))', then that portion of the token will be passed to the","    * registered lisp handler for formatting.","    * The text before and after group 1 will be restyled using this decorator","    * so decorators should take care that this doesn't result in infinite","    * recursion.  For example, the HTML lexer rule for SCRIPT elements looks","    * something like ['lang-js', /<[s]cript>(.+?)<\\/script>/].  This may match","    * '<script>foo()<\\/script>', which would cause the current decorator to","    * be called with '<script>' which would not match the same rule since","    * group 1 must not be empty, so it would be instead styled as PR_TAG by","    * the generic tag rule.  The handler registered for the 'js' extension would","    * then be called with 'foo()', and finally, the current decorator would","    * be called with '<\\/script>' which would not match the original rule and","    * so the generic tag rule would identify it as a tag.","    *","    * Pattern must only match prefixes, and if it matches a prefix, then that","    * match is considered a token with the same style.","    *","    * Context is applied to the last non-whitespace, non-comment token","    * recognized.","    *","    * Shortcut is an optional string of characters, any of which, if the first","    * character, gurantee that this pattern and only this pattern matches.","    *","    * @param {Array} shortcutStylePatterns patterns that always start with","    *   a known character.  Must have a shortcut string.","    * @param {Array} fallthroughStylePatterns patterns that will be tried in","    *   order if the shortcut ones fail.  May have shortcuts.","    *","    * @return {function (Object)} a","    *   function that takes source code and returns a list of decorations.","    */","  function createSimpleLexer(shortcutStylePatterns, fallthroughStylePatterns) {","    var shortcuts = {};","    var tokenizer;","    (function () {","      var allPatterns = shortcutStylePatterns.concat(fallthroughStylePatterns);","      var allRegexs = [];","      var regexKeys = {};","      for (var i = 0, n = allPatterns.length; i < n; ++i) {","        var patternParts = allPatterns[i];","        var shortcutChars = patternParts[3];","        if (shortcutChars) {","          for (var c = shortcutChars.length; --c >= 0;) {","            shortcuts[shortcutChars.charAt(c)] = patternParts;","          }","        }","        var regex = patternParts[1];","        var k = '' + regex;","        if (!regexKeys.hasOwnProperty(k)) {","          allRegexs.push(regex);","          regexKeys[k] = null;","        }","      }","      allRegexs.push(/[\\0-\\uffff]/);","      tokenizer = combinePrefixPatterns(allRegexs);","    })();","","    var nPatterns = fallthroughStylePatterns.length;","","    /**","     * Lexes job.sourceCode and produces an output array job.decorations of","     * style classes preceded by the position at which they start in","     * job.sourceCode in order.","     *","     * @param {Object} job an object like <pre>{","     *    sourceCode: {string} sourceText plain text,","     *    basePos: {int} position of job.sourceCode in the larger chunk of","     *        sourceCode.","     * }</pre>","     */","    var decorate = function (job) {","      var sourceCode = job.sourceCode, basePos = job.basePos;","      /** Even entries are positions in source in ascending order.  Odd enties","        * are style markers (e.g., PR_COMMENT) that run from that position until","        * the end.","        * @type {Array.<number|string>}","        */","      var decorations = [basePos, PR_PLAIN];","      var pos = 0;  // index into sourceCode","      var tokens = sourceCode.match(tokenizer) || [];","      var styleCache = {};","","      for (var ti = 0, nTokens = tokens.length; ti < nTokens; ++ti) {","        var token = tokens[ti];","        var style = styleCache[token];","        var match = void 0;","","        var isEmbedded;","        if (typeof style === 'string') {","          isEmbedded = false;","        } else {","          var patternParts = shortcuts[token.charAt(0)];","          if (patternParts) {","            match = token.match(patternParts[1]);","            style = patternParts[0];","          } else {","            for (var i = 0; i < nPatterns; ++i) {","              patternParts = fallthroughStylePatterns[i];","              match = token.match(patternParts[1]);","              if (match) {","                style = patternParts[0];","                break;","              }","            }","","            if (!match) {  // make sure that we make progress","              style = PR_PLAIN;","            }","          }","","          isEmbedded = style.length >= 5 && 'lang-' === style.substring(0, 5);","          if (isEmbedded && !(match && typeof match[1] === 'string')) {","            isEmbedded = false;","            style = PR_SOURCE;","          }","","          if (!isEmbedded) { styleCache[token] = style; }","        }","","        var tokenStart = pos;","        pos += token.length;","","        if (!isEmbedded) {","          decorations.push(basePos + tokenStart, style);","        } else {  // Treat group 1 as an embedded block of source code.","          var embeddedSource = match[1];","          var embeddedSourceStart = token.indexOf(embeddedSource);","          var embeddedSourceEnd = embeddedSourceStart + embeddedSource.length;","          if (match[2]) {","            // If embeddedSource can be blank, then it would match at the","            // beginning which would cause us to infinitely recurse on the","            // entire token, so we catch the right context in match[2].","            embeddedSourceEnd = token.length - match[2].length;","            embeddedSourceStart = embeddedSourceEnd - embeddedSource.length;","          }","          var lang = style.substring(5);","          // Decorate the left of the embedded source","          appendDecorations(","              basePos + tokenStart,","              token.substring(0, embeddedSourceStart),","              decorate, decorations);","          // Decorate the embedded source","          appendDecorations(","              basePos + tokenStart + embeddedSourceStart,","              embeddedSource,","              langHandlerForExtension(lang, embeddedSource),","              decorations);","          // Decorate the right of the embedded section","          appendDecorations(","              basePos + tokenStart + embeddedSourceEnd,","              token.substring(embeddedSourceEnd),","              decorate, decorations);","        }","      }","      job.decorations = decorations;","    };","    return decorate;","  }","","  /** returns a function that produces a list of decorations from source text.","    *","    * This code treats \", ', and ` as string delimiters, and \\ as a string","    * escape.  It does not recognize perl's qq() style strings.","    * It has no special handling for double delimiter escapes as in basic, or","    * the tripled delimiters used in python, but should work on those regardless","    * although in those cases a single string literal may be broken up into","    * multiple adjacent string literals.","    *","    * It recognizes C, C++, and shell style comments.","    *","    * @param {Object} options a set of optional parameters.","    * @return {function (Object)} a function that examines the source code","    *     in the input job and builds the decoration list.","    */","  function sourceDecorator(options) {","    var shortcutStylePatterns = [], fallthroughStylePatterns = [];","    if (options['tripleQuotedStrings']) {","      // '''multi-line-string''', 'single-line-string', and double-quoted","      shortcutStylePatterns.push(","          [PR_STRING,  /^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,","           null, '\\'\"']);","    } else if (options['multiLineStrings']) {","      // 'multi-line-string', \"multi-line-string\"","      shortcutStylePatterns.push(","          [PR_STRING,  /^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,","           null, '\\'\"`']);","    } else {","      // 'single-line-string', \"single-line-string\"","      shortcutStylePatterns.push(","          [PR_STRING,","           /^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,","           null, '\"\\'']);","    }","    if (options['verbatimStrings']) {","      // verbatim-string-literal production from the C# grammar.  See issue 93.","      fallthroughStylePatterns.push(","          [PR_STRING, /^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/, null]);","    }","    var hc = options['hashComments'];","    if (hc) {","      if (options['cStyleComments']) {","        if (hc > 1) {  // multiline hash comments","          shortcutStylePatterns.push(","              [PR_COMMENT, /^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/, null, '#']);","        } else {","          // Stop C preprocessor declarations at an unclosed open comment","          shortcutStylePatterns.push(","              [PR_COMMENT, /^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,","               null, '#']);","        }","        // #include <stdio.h>","        fallthroughStylePatterns.push(","            [PR_STRING,","             /^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,","             null]);","      } else {","        shortcutStylePatterns.push([PR_COMMENT, /^#[^\\r\\n]*/, null, '#']);","      }","    }","    if (options['cStyleComments']) {","      fallthroughStylePatterns.push([PR_COMMENT, /^\\/\\/[^\\r\\n]*/, null]);","      fallthroughStylePatterns.push(","          [PR_COMMENT, /^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/, null]);","    }","    var regexLiterals = options['regexLiterals'];","    if (regexLiterals) {","      /**","       * @const","       */","      var regexExcls = regexLiterals > 1","        ? ''  // Multiline regex literals","        : '\\n\\r';","      /**","       * @const","       */","      var regexAny = regexExcls ? '.' : '[\\\\S\\\\s]';","      /**","       * @const","       */","      var REGEX_LITERAL = (","          // A regular expression literal starts with a slash that is","          // not followed by * or / so that it is not confused with","          // comments.","          '/(?=[^/*' + regexExcls + '])'","          // and then contains any number of raw characters,","          + '(?:[^/\\\\x5B\\\\x5C' + regexExcls + ']'","          // escape sequences (\\x5C),","          +    '|\\\\x5C' + regexAny","          // or non-nesting character sets (\\x5B\\x5D);","          +    '|\\\\x5B(?:[^\\\\x5C\\\\x5D' + regexExcls + ']'","          +             '|\\\\x5C' + regexAny + ')*(?:\\\\x5D|$))+'","          // finally closed by a /.","          + '/');","      fallthroughStylePatterns.push(","          ['lang-regex',","           RegExp('^' + REGEXP_PRECEDER_PATTERN + '(' + REGEX_LITERAL + ')')","           ]);","    }","","    var types = options['types'];","    if (types) {","      fallthroughStylePatterns.push([PR_TYPE, types]);","    }","","    var keywords = (\"\" + options['keywords']).replace(/^ | $/g, '');","    if (keywords.length) {","      fallthroughStylePatterns.push(","          [PR_KEYWORD,","           new RegExp('^(?:' + keywords.replace(/[\\s,]+/g, '|') + ')\\\\b'),","           null]);","    }","","    shortcutStylePatterns.push([PR_PLAIN,       /^\\s+/, null, ' \\r\\n\\t\\xA0']);","","    var punctuation =","      // The Bash man page says","","      // A word is a sequence of characters considered as a single","      // unit by GRUB. Words are separated by metacharacters,","      // which are the following plus space, tab, and newline: { }","      // | & $ ; < >","      // ...","      ","      // A word beginning with # causes that word and all remaining","      // characters on that line to be ignored.","","      // which means that only a '#' after /(?:^|[{}|&$;<>\\s])/ starts a","      // comment but empirically","      // $ echo {#}","      // {#}","      // $ echo \\$#","      // $#","      // $ echo }#","      // }#","","      // so /(?:^|[|&;<>\\s])/ is more appropriate.","","      // http://gcc.gnu.org/onlinedocs/gcc-2.95.3/cpp_1.html#SEC3","      // suggests that this definition is compatible with a","      // default mode that tries to use a single token definition","      // to recognize both bash/python style comments and C","      // preprocessor directives.","","      // This definition of punctuation does not include # in the list of","      // follow-on exclusions, so # will not be broken before if preceeded","      // by a punctuation character.  We could try to exclude # after","      // [|&;<>] but that doesn't seem to cause many major problems.","      // If that does turn out to be a problem, we should change the below","      // when hc is truthy to include # in the run of punctuation characters","      // only when not followint [|&;<>].","      '^.[^\\\\s\\\\w.$@\\'\"`/\\\\\\\\]*';","    if (options['regexLiterals']) {","      punctuation += '(?!\\s*\\/)';","    }","","    fallthroughStylePatterns.push(","        // TODO(mikesamuel): recognize non-latin letters and numerals in idents","        [PR_LITERAL,     /^@[a-z_$][a-z_$@0-9]*/i, null],","        [PR_TYPE,        /^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/, null],","        [PR_PLAIN,       /^[a-z_$][a-z_$@0-9]*/i, null],","        [PR_LITERAL,","         new RegExp(","             '^(?:'","             // A hex number","             + '0x[a-f0-9]+'","             // or an octal or decimal number,","             + '|(?:\\\\d(?:_\\\\d+)*\\\\d*(?:\\\\.\\\\d*)?|\\\\.\\\\d\\\\+)'","             // possibly in scientific notation","             + '(?:e[+\\\\-]?\\\\d+)?'","             + ')'","             // with an optional modifier like UL for unsigned long","             + '[a-z]*', 'i'),","         null, '0123456789'],","        // Don't treat escaped quotes in bash as starting strings.","        // See issue 144.","        [PR_PLAIN,       /^\\\\[\\s\\S]?/, null],","        [PR_PUNCTUATION, new RegExp(punctuation), null]);","","    return createSimpleLexer(shortcutStylePatterns, fallthroughStylePatterns);","  }","","  var decorateSource = sourceDecorator({","        'keywords': ALL_KEYWORDS,","        'hashComments': true,","        'cStyleComments': true,","        'multiLineStrings': true,","        'regexLiterals': true","      });","","  /**","   * Given a DOM subtree, wraps it in a list, and puts each line into its own","   * list item.","   *","   * @param {Node} node modified in place.  Its content is pulled into an","   *     HTMLOListElement, and each line is moved into a separate list item.","   *     This requires cloning elements, so the input might not have unique","   *     IDs after numbering.","   * @param {boolean} isPreformatted true iff white-space in text nodes should","   *     be treated as significant.","   */","  function numberLines(node, opt_startLineNum, isPreformatted) {","    var nocode = /(?:^|\\s)nocode(?:\\s|$)/;","    var lineBreak = /\\r\\n?|\\n/;","  ","    var document = node.ownerDocument;","  ","    var li = document.createElement('li');","    while (node.firstChild) {","      li.appendChild(node.firstChild);","    }","    // An array of lines.  We split below, so this is initialized to one","    // un-split line.","    var listItems = [li];","  ","    function walk(node) {","      var type = node.nodeType;","      if (type == 1 && !nocode.test(node.className)) {  // Element","        if ('br' === node.nodeName) {","          breakAfter(node);","          // Discard the <BR> since it is now flush against a </LI>.","          if (node.parentNode) {","            node.parentNode.removeChild(node);","          }","        } else {","          for (var child = node.firstChild; child; child = child.nextSibling) {","            walk(child);","          }","        }","      } else if ((type == 3 || type == 4) && isPreformatted) {  // Text","        var text = node.nodeValue;","        var match = text.match(lineBreak);","        if (match) {","          var firstLine = text.substring(0, match.index);","          node.nodeValue = firstLine;","          var tail = text.substring(match.index + match[0].length);","          if (tail) {","            var parent = node.parentNode;","            parent.insertBefore(","              document.createTextNode(tail), node.nextSibling);","          }","          breakAfter(node);","          if (!firstLine) {","            // Don't leave blank text nodes in the DOM.","            node.parentNode.removeChild(node);","          }","        }","      }","    }","  ","    // Split a line after the given node.","    function breakAfter(lineEndNode) {","      // If there's nothing to the right, then we can skip ending the line","      // here, and move root-wards since splitting just before an end-tag","      // would require us to create a bunch of empty copies.","      while (!lineEndNode.nextSibling) {","        lineEndNode = lineEndNode.parentNode;","        if (!lineEndNode) { return; }","      }","  ","      function breakLeftOf(limit, copy) {","        // Clone shallowly if this node needs to be on both sides of the break.","        var rightSide = copy ? limit.cloneNode(false) : limit;","        var parent = limit.parentNode;","        if (parent) {","          // We clone the parent chain.","          // This helps us resurrect important styling elements that cross lines.","          // E.g. in <i>Foo<br>Bar</i>","          // should be rewritten to <li><i>Foo</i></li><li><i>Bar</i></li>.","          var parentClone = breakLeftOf(parent, 1);","          // Move the clone and everything to the right of the original","          // onto the cloned parent.","          var next = limit.nextSibling;","          parentClone.appendChild(rightSide);","          for (var sibling = next; sibling; sibling = next) {","            next = sibling.nextSibling;","            parentClone.appendChild(sibling);","          }","        }","        return rightSide;","      }","  ","      var copiedListItem = breakLeftOf(lineEndNode.nextSibling, 0);","  ","      // Walk the parent chain until we reach an unattached LI.","      for (var parent;","           // Check nodeType since IE invents document fragments.","           (parent = copiedListItem.parentNode) && parent.nodeType === 1;) {","        copiedListItem = parent;","      }","      // Put it on the list of lines for later processing.","      listItems.push(copiedListItem);","    }","  ","    // Split lines while there are lines left to split.","    for (var i = 0;  // Number of lines that have been split so far.","         i < listItems.length;  // length updated by breakAfter calls.","         ++i) {","      walk(listItems[i]);","    }","  ","    // Make sure numeric indices show correctly.","    if (opt_startLineNum === (opt_startLineNum|0)) {","      listItems[0].setAttribute('value', opt_startLineNum);","    }","  ","    var ol = document.createElement('ol');","    ol.className = 'linenums';","    var offset = Math.max(0, ((opt_startLineNum - 1 /* zero index */)) | 0) || 0;","    for (var i = 0, n = listItems.length; i < n; ++i) {","      li = listItems[i];","      // Stick a class on the LIs so that stylesheets can","      // color odd/even rows, or any other row pattern that","      // is co-prime with 10.","      li.className = 'L' + ((i + offset) % 10);","      if (!li.firstChild) {","        li.appendChild(document.createTextNode('\\xA0'));","      }","      ol.appendChild(li);","    }","  ","    node.appendChild(ol);","  }","  /**","   * Breaks {@code job.sourceCode} around style boundaries in","   * {@code job.decorations} and modifies {@code job.sourceNode} in place.","   * @param {Object} job like <pre>{","   *    sourceCode: {string} source as plain text,","   *    sourceNode: {HTMLElement} the element containing the source,","   *    spans: {Array.<number|Node>} alternating span start indices into source","   *       and the text node or element (e.g. {@code <BR>}) corresponding to that","   *       span.","   *    decorations: {Array.<number|string} an array of style classes preceded","   *       by the position at which they start in job.sourceCode in order","   * }</pre>","   * @private","   */","  function recombineTagsAndDecorations(job) {","    var isIE8OrEarlier = /\\bMSIE\\s(\\d+)/.exec(navigator.userAgent);","    isIE8OrEarlier = isIE8OrEarlier && +isIE8OrEarlier[1] <= 8;","    var newlineRe = /\\n/g;","  ","    var source = job.sourceCode;","    var sourceLength = source.length;","    // Index into source after the last code-unit recombined.","    var sourceIndex = 0;","  ","    var spans = job.spans;","    var nSpans = spans.length;","    // Index into spans after the last span which ends at or before sourceIndex.","    var spanIndex = 0;","  ","    var decorations = job.decorations;","    var nDecorations = decorations.length;","    // Index into decorations after the last decoration which ends at or before","    // sourceIndex.","    var decorationIndex = 0;","  ","    // Remove all zero-length decorations.","    decorations[nDecorations] = sourceLength;","    var decPos, i;","    for (i = decPos = 0; i < nDecorations;) {","      if (decorations[i] !== decorations[i + 2]) {","        decorations[decPos++] = decorations[i++];","        decorations[decPos++] = decorations[i++];","      } else {","        i += 2;","      }","    }","    nDecorations = decPos;","  ","    // Simplify decorations.","    for (i = decPos = 0; i < nDecorations;) {","      var startPos = decorations[i];","      // Conflate all adjacent decorations that use the same style.","      var startDec = decorations[i + 1];","      var end = i + 2;","      while (end + 2 <= nDecorations && decorations[end + 1] === startDec) {","        end += 2;","      }","      decorations[decPos++] = startPos;","      decorations[decPos++] = startDec;","      i = end;","    }","  ","    nDecorations = decorations.length = decPos;","  ","    var sourceNode = job.sourceNode;","    var oldDisplay;","    if (sourceNode) {","      oldDisplay = sourceNode.style.display;","      sourceNode.style.display = 'none';","    }","    try {","      var decoration = null;","      while (spanIndex < nSpans) {","        var spanStart = spans[spanIndex];","        var spanEnd = spans[spanIndex + 2] || sourceLength;","  ","        var decEnd = decorations[decorationIndex + 2] || sourceLength;","  ","        var end = Math.min(spanEnd, decEnd);","  ","        var textNode = spans[spanIndex + 1];","        var styledText;","        if (textNode.nodeType !== 1  // Don't muck with <BR>s or <LI>s","            // Don't introduce spans around empty text nodes.","            && (styledText = source.substring(sourceIndex, end))) {","          // This may seem bizarre, and it is.  Emitting LF on IE causes the","          // code to display with spaces instead of line breaks.","          // Emitting Windows standard issue linebreaks (CRLF) causes a blank","          // space to appear at the beginning of every line but the first.","          // Emitting an old Mac OS 9 line separator makes everything spiffy.","          if (isIE8OrEarlier) {","            styledText = styledText.replace(newlineRe, '\\r');","          }","          textNode.nodeValue = styledText;","          var document = textNode.ownerDocument;","          var span = document.createElement('span');","          span.className = decorations[decorationIndex + 1];","          var parentNode = textNode.parentNode;","          parentNode.replaceChild(span, textNode);","          span.appendChild(textNode);","          if (sourceIndex < spanEnd) {  // Split off a text node.","            spans[spanIndex + 1] = textNode","                // TODO: Possibly optimize by using '' if there's no flicker.","                = document.createTextNode(source.substring(end, spanEnd));","            parentNode.insertBefore(textNode, span.nextSibling);","          }","        }","  ","        sourceIndex = end;","  ","        if (sourceIndex >= spanEnd) {","          spanIndex += 2;","        }","        if (sourceIndex >= decEnd) {","          decorationIndex += 2;","        }","      }","    } finally {","      if (sourceNode) {","        sourceNode.style.display = oldDisplay;","      }","    }","  }","","  /** Maps language-specific file extensions to handlers. */","  var langHandlerRegistry = {};","  /** Register a language handler for the given file extensions.","    * @param {function (Object)} handler a function from source code to a list","    *      of decorations.  Takes a single argument job which describes the","    *      state of the computation.   The single parameter has the form","    *      {@code {","    *        sourceCode: {string} as plain text.","    *        decorations: {Array.<number|string>} an array of style classes","    *                     preceded by the position at which they start in","    *                     job.sourceCode in order.","    *                     The language handler should assigned this field.","    *        basePos: {int} the position of source in the larger source chunk.","    *                 All positions in the output decorations array are relative","    *                 to the larger source chunk.","    *      } }","    * @param {Array.<string>} fileExtensions","    */","  function registerLangHandler(handler, fileExtensions) {","    for (var i = fileExtensions.length; --i >= 0;) {","      var ext = fileExtensions[i];","      if (!langHandlerRegistry.hasOwnProperty(ext)) {","        langHandlerRegistry[ext] = handler;","      } else if (win['console']) {","        console['warn']('cannot override language handler %s', ext);","      }","    }","  }","  function langHandlerForExtension(extension, source) {","    if (!(extension && langHandlerRegistry.hasOwnProperty(extension))) {","      // Treat it as markup if the first non whitespace character is a < and","      // the last non-whitespace character is a >.","      extension = /^\\s*</.test(source)","          ? 'default-markup'","          : 'default-code';","    }","    return langHandlerRegistry[extension];","  }","  registerLangHandler(decorateSource, ['default-code']);","  registerLangHandler(","      createSimpleLexer(","          [],","          [","           [PR_PLAIN,       /^[^<?]+/],","           [PR_DECLARATION, /^<!\\w[^>]*(?:>|$)/],","           [PR_COMMENT,     /^<\\!--[\\s\\S]*?(?:-\\->|$)/],","           // Unescaped content in an unknown language","           ['lang-',        /^<\\?([\\s\\S]+?)(?:\\?>|$)/],","           ['lang-',        /^<%([\\s\\S]+?)(?:%>|$)/],","           [PR_PUNCTUATION, /^(?:<[%?]|[%?]>)/],","           ['lang-',        /^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],","           // Unescaped content in javascript.  (Or possibly vbscript).","           ['lang-js',      /^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],","           // Contains unescaped stylesheet content","           ['lang-css',     /^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],","           ['lang-in.tag',  /^(<\\/?[a-z][^<>]*>)/i]","          ]),","      ['default-markup', 'htm', 'html', 'mxml', 'xhtml', 'xml', 'xsl']);","  registerLangHandler(","      createSimpleLexer(","          [","           [PR_PLAIN,        /^[\\s]+/, null, ' \\t\\r\\n'],","           [PR_ATTRIB_VALUE, /^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/, null, '\\\"\\'']","           ],","          [","           [PR_TAG,          /^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],","           [PR_ATTRIB_NAME,  /^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],","           ['lang-uq.val',   /^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],","           [PR_PUNCTUATION,  /^[=<>\\/]+/],","           ['lang-js',       /^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],","           ['lang-js',       /^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],","           ['lang-js',       /^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],","           ['lang-css',      /^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],","           ['lang-css',      /^style\\s*=\\s*\\'([^\\']+)\\'/i],","           ['lang-css',      /^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]","           ]),","      ['in.tag']);","  registerLangHandler(","      createSimpleLexer([], [[PR_ATTRIB_VALUE, /^[\\s\\S]+/]]), ['uq.val']);","  registerLangHandler(sourceDecorator({","          'keywords': CPP_KEYWORDS,","          'hashComments': true,","          'cStyleComments': true,","          'types': C_TYPES","        }), ['c', 'cc', 'cpp', 'cxx', 'cyc', 'm']);","  registerLangHandler(sourceDecorator({","          'keywords': 'null,true,false'","        }), ['json']);","  registerLangHandler(sourceDecorator({","          'keywords': CSHARP_KEYWORDS,","          'hashComments': true,","          'cStyleComments': true,","          'verbatimStrings': true,","          'types': C_TYPES","        }), ['cs']);","  registerLangHandler(sourceDecorator({","          'keywords': JAVA_KEYWORDS,","          'cStyleComments': true","        }), ['java']);","  registerLangHandler(sourceDecorator({","          'keywords': SH_KEYWORDS,","          'hashComments': true,","          'multiLineStrings': true","        }), ['bash', 'bsh', 'csh', 'sh']);","  registerLangHandler(sourceDecorator({","          'keywords': PYTHON_KEYWORDS,","          'hashComments': true,","          'multiLineStrings': true,","          'tripleQuotedStrings': true","        }), ['cv', 'py', 'python']);","  registerLangHandler(sourceDecorator({","          'keywords': PERL_KEYWORDS,","          'hashComments': true,","          'multiLineStrings': true,","          'regexLiterals': 2  // multiline regex literals","        }), ['perl', 'pl', 'pm']);","  registerLangHandler(sourceDecorator({","          'keywords': RUBY_KEYWORDS,","          'hashComments': true,","          'multiLineStrings': true,","          'regexLiterals': true","        }), ['rb', 'ruby']);","  registerLangHandler(sourceDecorator({","          'keywords': JSCRIPT_KEYWORDS,","          'cStyleComments': true,","          'regexLiterals': true","        }), ['javascript', 'js']);","  registerLangHandler(sourceDecorator({","          'keywords': COFFEE_KEYWORDS,","          'hashComments': 3,  // ### style block comments","          'cStyleComments': true,","          'multilineStrings': true,","          'tripleQuotedStrings': true,","          'regexLiterals': true","        }), ['coffee']);","  registerLangHandler(sourceDecorator({","          'keywords': RUST_KEYWORDS,","          'cStyleComments': true,","          'multilineStrings': true","        }), ['rc', 'rs', 'rust']);","  registerLangHandler(","      createSimpleLexer([], [[PR_STRING, /^[\\s\\S]+/]]), ['regex']);","","  function applyDecorator(job) {","    var opt_langExtension = job.langExtension;","","    try {","      // Extract tags, and convert the source code to plain text.","      var sourceAndSpans = extractSourceSpans(job.sourceNode, job.pre);","      /** Plain text. @type {string} */","      var source = sourceAndSpans.sourceCode;","      job.sourceCode = source;","      job.spans = sourceAndSpans.spans;","      job.basePos = 0;","","      // Apply the appropriate language handler","      langHandlerForExtension(opt_langExtension, source)(job);","","      // Integrate the decorations and tags back into the source code,","      // modifying the sourceNode in place.","      recombineTagsAndDecorations(job);","    } catch (e) {","      if (win['console']) {","        console['log'](e && e['stack'] || e);","      }","    }","  }","","  /**","   * Pretty print a chunk of code.","   * @param sourceCodeHtml {string} The HTML to pretty print.","   * @param opt_langExtension {string} The language name to use.","   *     Typically, a filename extension like 'cpp' or 'java'.","   * @param opt_numberLines {number|boolean} True to number lines,","   *     or the 1-indexed number of the first line in sourceCodeHtml.","   */","  function $prettyPrintOne(sourceCodeHtml, opt_langExtension, opt_numberLines) {","    var container = document.createElement('div');","    // This could cause images to load and onload listeners to fire.","    // E.g. <img onerror=\"alert(1337)\" src=\"nosuchimage.png\">.","    // We assume that the inner HTML is from a trusted source.","    // The pre-tag is required for IE8 which strips newlines from innerHTML","    // when it is injected into a <pre> tag.","    // http://stackoverflow.com/questions/451486/pre-tag-loses-line-breaks-when-setting-innerhtml-in-ie","    // http://stackoverflow.com/questions/195363/inserting-a-newline-into-a-pre-tag-ie-javascript","    container.innerHTML = '<pre>' + sourceCodeHtml + '</pre>';","    container = container.firstChild;","    if (opt_numberLines) {","      numberLines(container, opt_numberLines, true);","    }","","    var job = {","      langExtension: opt_langExtension,","      numberLines: opt_numberLines,","      sourceNode: container,","      pre: 1","    };","    applyDecorator(job);","    return container.innerHTML;","  }","","   /**","    * Find all the {@code <pre>} and {@code <code>} tags in the DOM with","    * {@code class=prettyprint} and prettify them.","    *","    * @param {Function} opt_whenDone called when prettifying is done.","    * @param {HTMLElement|HTMLDocument} opt_root an element or document","    *   containing all the elements to pretty print.","    *   Defaults to {@code document.body}.","    */","  function $prettyPrint(opt_whenDone, opt_root) {","    var root = opt_root || document.body;","    var doc = root.ownerDocument || document;","    function byTagName(tn) { return root.getElementsByTagName(tn); }","    // fetch a list of nodes to rewrite","    var codeSegments = [byTagName('pre'), byTagName('code'), byTagName('xmp')];","    var elements = [];","    for (var i = 0; i < codeSegments.length; ++i) {","      for (var j = 0, n = codeSegments[i].length; j < n; ++j) {","        elements.push(codeSegments[i][j]);","      }","    }","    codeSegments = null;","","    var clock = Date;","    if (!clock['now']) {","      clock = { 'now': function () { return +(new Date); } };","    }","","    // The loop is broken into a series of continuations to make sure that we","    // don't make the browser unresponsive when rewriting a large page.","    var k = 0;","    var prettyPrintingJob;","","    var langExtensionRe = /\\blang(?:uage)?-([\\w.]+)(?!\\S)/;","    var prettyPrintRe = /\\bprettyprint\\b/;","    var prettyPrintedRe = /\\bprettyprinted\\b/;","    var preformattedTagNameRe = /pre|xmp/i;","    var codeRe = /^code$/i;","    var preCodeXmpRe = /^(?:pre|code|xmp)$/i;","    var EMPTY = {};","","    function doWork() {","      var endTime = (win['PR_SHOULD_USE_CONTINUATION'] ?","                     clock['now']() + 250 /* ms */ :","                     Infinity);","      for (; k < elements.length && clock['now']() < endTime; k++) {","        var cs = elements[k];","","        // Look for a preceding comment like","        // <?prettify lang=\"...\" linenums=\"...\"?>","        var attrs = EMPTY;","        {","          for (var preceder = cs; (preceder = preceder.previousSibling);) {","            var nt = preceder.nodeType;","            // <?foo?> is parsed by HTML 5 to a comment node (8)","            // like <!--?foo?-->, but in XML is a processing instruction","            var value = (nt === 7 || nt === 8) && preceder.nodeValue;","            if (value","                ? !/^\\??prettify\\b/.test(value)","                : (nt !== 3 || /\\S/.test(preceder.nodeValue))) {","              // Skip over white-space text nodes but not others.","              break;","            }","            if (value) {","              attrs = {};","              value.replace(","                  /\\b(\\w+)=([\\w:.%+-]+)/g,","                function (_, name, value) { attrs[name] = value; });","              break;","            }","          }","        }","","        var className = cs.className;","        if ((attrs !== EMPTY || prettyPrintRe.test(className))","            // Don't redo this if we've already done it.","            // This allows recalling pretty print to just prettyprint elements","            // that have been added to the page since last call.","            && !prettyPrintedRe.test(className)) {","","          // make sure this is not nested in an already prettified element","          var nested = false;","          for (var p = cs.parentNode; p; p = p.parentNode) {","            var tn = p.tagName;","            if (preCodeXmpRe.test(tn)","                && p.className && prettyPrintRe.test(p.className)) {","              nested = true;","              break;","            }","          }","          if (!nested) {","            // Mark done.  If we fail to prettyprint for whatever reason,","            // we shouldn't try again.","            cs.className += ' prettyprinted';","","            // If the classes includes a language extensions, use it.","            // Language extensions can be specified like","            //     <pre class=\"prettyprint lang-cpp\">","            // the language extension \"cpp\" is used to find a language handler","            // as passed to PR.registerLangHandler.","            // HTML5 recommends that a language be specified using \"language-\"","            // as the prefix instead.  Google Code Prettify supports both.","            // http://dev.w3.org/html5/spec-author-view/the-code-element.html","            var langExtension = attrs['lang'];","            if (!langExtension) {","              langExtension = className.match(langExtensionRe);","              // Support <pre class=\"prettyprint\"><code class=\"language-c\">","              var wrapper;","              if (!langExtension && (wrapper = childContentWrapper(cs))","                  && codeRe.test(wrapper.tagName)) {","                langExtension = wrapper.className.match(langExtensionRe);","              }","","              if (langExtension) { langExtension = langExtension[1]; }","            }","","            var preformatted;","            if (preformattedTagNameRe.test(cs.tagName)) {","              preformatted = 1;","            } else {","              var currentStyle = cs['currentStyle'];","              var defaultView = doc.defaultView;","              var whitespace = (","                  currentStyle","                  ? currentStyle['whiteSpace']","                  : (defaultView","                     && defaultView.getComputedStyle)","                  ? defaultView.getComputedStyle(cs, null)","                  .getPropertyValue('white-space')","                  : 0);","              preformatted = whitespace","                  && 'pre' === whitespace.substring(0, 3);","            }","","            // Look for a class like linenums or linenums:<n> where <n> is the","            // 1-indexed number of the first line.","            var lineNums = attrs['linenums'];","            if (!(lineNums = lineNums === 'true' || +lineNums)) {","              lineNums = className.match(/\\blinenums\\b(?::(\\d+))?/);","              lineNums =","                lineNums","                ? lineNums[1] && lineNums[1].length","                  ? +lineNums[1] : true","                : false;","            }","            if (lineNums) { numberLines(cs, lineNums, preformatted); }","","            // do the pretty printing","            prettyPrintingJob = {","              langExtension: langExtension,","              sourceNode: cs,","              numberLines: lineNums,","              pre: preformatted","            };","            applyDecorator(prettyPrintingJob);","          }","        }","      }","      if (k < elements.length) {","        // finish up in a continuation","        setTimeout(doWork, 250);","      } else if ('function' === typeof opt_whenDone) {","        opt_whenDone();","      }","    }","","    doWork();","  }","","  /**","   * Contains functions for creating and registering new language handlers.","   * @type {Object}","   */","  var PR = win['PR'] = {","        'createSimpleLexer': createSimpleLexer,","        'registerLangHandler': registerLangHandler,","        'sourceDecorator': sourceDecorator,","        'PR_ATTRIB_NAME': PR_ATTRIB_NAME,","        'PR_ATTRIB_VALUE': PR_ATTRIB_VALUE,","        'PR_COMMENT': PR_COMMENT,","        'PR_DECLARATION': PR_DECLARATION,","        'PR_KEYWORD': PR_KEYWORD,","        'PR_LITERAL': PR_LITERAL,","        'PR_NOCODE': PR_NOCODE,","        'PR_PLAIN': PR_PLAIN,","        'PR_PUNCTUATION': PR_PUNCTUATION,","        'PR_SOURCE': PR_SOURCE,","        'PR_STRING': PR_STRING,","        'PR_TAG': PR_TAG,","        'PR_TYPE': PR_TYPE,","        'prettyPrintOne':","           IN_GLOBAL_SCOPE","             ? (win['prettyPrintOne'] = $prettyPrintOne)","             : (prettyPrintOne = $prettyPrintOne),","        'prettyPrint': prettyPrint =","           IN_GLOBAL_SCOPE","             ? (win['prettyPrint'] = $prettyPrint)","             : (prettyPrint = $prettyPrint)","      };","","  // Make PR available via the Asynchronous Module Definition (AMD) API.","  // Per https://github.com/amdjs/amdjs-api/wiki/AMD:","  // The Asynchronous Module Definition (AMD) API specifies a","  // mechanism for defining modules such that the module and its","  // dependencies can be asynchronously loaded.","  // ...","  // To allow a clear indicator that a global define function (as","  // needed for script src browser loading) conforms to the AMD API,","  // any global define function SHOULD have a property called \"amd\"","  // whose value is an object. This helps avoid conflict with any","  // other existing JavaScript code that could have defined a define()","  // function that does not conform to the AMD API.","  if (typeof define === \"function\" && define['amd']) {","    define(\"google-code-prettify\", [], function () {","      return PR; ","    });","  }","})();",""],"l":{"59":2,"66":2,"77":0,"87":0,"90":0,"91":0,"95":0,"96":0,"99":0,"101":0,"106":0,"110":0,"116":0,"119":0,"122":0,"125":0,"129":0,"133":0,"136":0,"138":0,"141":0,"148":0,"153":0,"158":0,"163":0,"168":0,"173":0,"178":0,"184":0,"189":0,"194":0,"199":0,"204":0,"211":0,"234":0,"250":1,"251":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"261":0,"262":0,"263":0,"267":0,"276":1,"277":0,"278":0,"279":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"290":0,"294":1,"295":0,"296":0,"298":0,"299":0,"303":1,"304":0,"314":0,"315":0,"317":0,"318":0,"320":0,"321":0,"322":0,"323":0,"325":0,"326":0,"327":0,"328":0,"329":0,"331":0,"333":0,"338":0,"339":0,"340":0,"342":0,"343":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"359":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"371":0,"372":0,"375":1,"379":0,"392":0,"397":0,"401":0,"402":0,"403":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"415":0,"423":0,"424":0,"425":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"435":0,"436":0,"437":0,"438":0,"445":0,"446":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"459":0,"462":0,"463":0,"469":0,"472":0,"473":0,"474":0,"475":0,"476":0,"480":0,"528":1,"529":0,"531":0,"532":0,"533":0,"534":0,"536":1,"537":0,"538":0,"539":0,"540":0,"541":0,"543":0,"544":0,"545":0,"546":0,"547":0,"549":0,"550":0,"551":0,"552":0,"553":0,"555":0,"558":0,"559":0,"560":0,"561":0,"566":0,"568":0,"580":1,"581":0,"582":0,"586":0,"587":0,"590":0,"603":1,"604":0,"605":0,"606":0,"607":0,"613":0,"662":1,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"677":0,"678":0,"679":0,"680":0,"681":0,"684":0,"685":0,"688":0,"701":0,"702":0,"708":0,"709":0,"710":0,"711":0,"713":0,"714":0,"715":0,"716":0,"718":0,"719":0,"720":0,"722":0,"723":0,"724":0,"725":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"736":0,"737":0,"741":0,"742":0,"743":0,"744":0,"747":0,"750":0,"751":0,"753":0,"754":0,"756":0,"757":0,"758":0,"759":0,"763":0,"764":0,"766":0,"768":0,"773":0,"779":0,"785":0,"787":0,"805":1,"806":0,"807":0,"809":0,"812":0,"814":0,"819":0,"824":0,"826":0,"829":0,"830":0,"831":0,"832":0,"833":0,"837":0,"842":0,"847":0,"850":0,"851":0,"852":0,"855":0,"856":0,"860":0,"866":0,"870":0,"884":0,"890":0,"891":0,"892":0,"895":0,"896":0,"897":0,"903":0,"905":0,"942":0,"943":0,"946":0,"969":0,"972":0,"991":1,"992":0,"993":0,"995":0,"997":0,"998":0,"999":0,"1003":0,"1005":1,"1006":0,"1007":0,"1008":0,"1009":0,"1011":0,"1012":0,"1015":0,"1016":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1031":0,"1032":0,"1034":0,"1041":1,"1045":0,"1046":0,"1047":0,"1050":1,"1052":0,"1053":0,"1054":0,"1059":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1069":0,"1072":0,"1075":0,"1078":0,"1081":0,"1085":0,"1088":0,"1092":0,"1093":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1104":0,"1105":0,"1106":0,"1108":0,"1111":0,"1127":1,"1128":0,"1129":0,"1130":0,"1132":0,"1133":0,"1135":0,"1137":0,"1138":0,"1140":0,"1142":0,"1143":0,"1146":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1156":0,"1159":0,"1162":0,"1163":0,"1165":0,"1166":0,"1167":0,"1168":0,"1170":0,"1171":0,"1172":0,"1175":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1189":0,"1191":0,"1193":0,"1194":0,"1195":0,"1203":0,"1204":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1217":0,"1221":0,"1223":0,"1224":0,"1226":0,"1227":0,"1231":0,"1232":0,"1238":0,"1255":1,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1265":1,"1266":0,"1269":0,"1273":0,"1275":0,"1276":0,"1295":0,"1314":0,"1316":0,"1322":0,"1325":0,"1332":0,"1336":0,"1341":0,"1347":0,"1353":0,"1359":0,"1364":0,"1372":0,"1377":0,"1380":1,"1381":0,"1383":0,"1385":0,"1387":0,"1388":0,"1389":0,"1390":0,"1393":0,"1397":0,"1399":0,"1400":0,"1413":1,"1414":0,"1422":0,"1423":0,"1424":0,"1425":0,"1428":0,"1434":0,"1435":0,"1447":1,"1448":0,"1449":0,"1450":1,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1459":0,"1461":0,"1462":0,"1463":0,"1468":0,"1469":0,"1471":0,"1472":0,"1473":0,"1474":0,"1475":0,"1476":0,"1477":0,"1479":1,"1480":0,"1483":0,"1484":0,"1488":0,"1490":0,"1491":0,"1494":0,"1495":0,"1499":0,"1501":0,"1502":0,"1503":0,"1505":0,"1506":0,"1511":0,"1512":0,"1519":0,"1520":0,"1521":0,"1522":0,"1524":0,"1525":0,"1528":0,"1531":0,"1541":0,"1542":0,"1543":0,"1545":0,"1546":0,"1548":0,"1551":0,"1554":0,"1555":0,"1556":0,"1558":0,"1559":0,"1560":0,"1568":0,"1574":0,"1575":0,"1576":0,"1577":0,"1583":0,"1586":0,"1592":0,"1596":0,"1598":0,"1599":0,"1600":0,"1604":0,"1611":0,"1650":0,"1651":0,"1652":0}},"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/sample-codes/app/config.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/sample-codes/app/config.js","s":{"1":2,"2":2,"3":1,"4":0},"b":{},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":13}}},"2":{"name":"stateConfig","line":16,"loc":{"start":{"line":16,"column":4},"end":{"line":16,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":19,"column":5}},"2":{"start":{"line":4,"column":4},"end":{"line":6,"column":24}},"3":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":47}}},"branchMap":{},"code":["(function () {","    'use strict';","","    angular","    .module('app')","    .config(stateConfig)","","   /**","    * Configures ui-router's states.","    * @memberof app","    * @ngdoc config","    * @name config","    * @param {Service} $urlRouterProvider Watches $location and provides interface to default state","    */","","    function stateConfig($urlRouterProvider) {","        $urlRouterProvider.otherwise('/search')","    }","})();",""],"l":{"1":2,"4":2,"16":1,"17":0}},"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/sample-codes/app/custom-currency.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/sample-codes/app/custom-currency.js","s":{"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":2},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":2,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":1},"end":{"line":13,"column":12}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":23},"end":{"line":15,"column":39}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":11},"end":{"line":28,"column":42}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":51,"column":5}},"2":{"start":{"line":15,"column":2},"end":{"line":48,"column":4}},"3":{"start":{"line":28,"column":4},"end":{"line":47,"column":5}},"4":{"start":{"line":31,"column":6},"end":{"line":46,"column":7}},"5":{"start":{"line":32,"column":8},"end":{"line":32,"column":21}},"6":{"start":{"line":36,"column":8},"end":{"line":36,"column":35}},"7":{"start":{"line":37,"column":8},"end":{"line":37,"column":55}},"8":{"start":{"line":40,"column":8},"end":{"line":44,"column":9}},"9":{"start":{"line":41,"column":10},"end":{"line":41,"column":32}},"10":{"start":{"line":43,"column":10},"end":{"line":43,"column":32}},"11":{"start":{"line":50,"column":2},"end":{"line":50,"column":65}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"2":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":21},"end":{"line":36,"column":27}},{"start":{"line":36,"column":31},"end":{"line":36,"column":34}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":42},"end":{"line":37,"column":46}},{"start":{"line":37,"column":49},"end":{"line":37,"column":54}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":8}},{"start":{"line":40,"column":8},"end":{"line":40,"column":8}}]}},"code":["/**"," * The siteLanguageServices provides information about available languges"," * of a site."," *"," * @memberof app"," * @ngdoc filter"," * @name customCurrency"," * @param {$http} Test"," * @desc"," *  returns custom currency from the given input"," * @tutorial tutorial1"," */","(function() {","  'use strict';","  var customCurrency = function($http) { ","","","    /**","     * @func customCurrencyFilter","     * @memberof customCurrency","     * @desc","     *  . Create the return function and set the required parameter name to **input**","     *  . setup optional parameters for the currency symbol and location (left or right of the amount)","     * @param {Number|String} input","     * @param {String} symbol","     * @param {Boolean} place  true or false","     */","    return function(input, symbol, place) {","","      // Ensure that we are working with a number","      if(isNaN(input)) {","        return input;","      } else {","","        // Check if optional parameters are passed, if not, use the defaults","        var symbol = symbol || '$';","        var place = place === undefined ? true : place;","","        // Perform the operation to set the symbol in the right location","        if( place === true) {","          return symbol + input;","        } else {","          return input + symbol;","        }","","      }","    }","  };","","  angular.module('app').filter('customCurrency', customCurrency);","})();","",""],"l":{"13":2,"15":2,"28":0,"31":0,"32":0,"36":0,"37":0,"40":0,"41":0,"43":0,"50":2}},"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/sample-codes/ngmap/attr2-options.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/sample-codes/ngmap/attr2-options.js","s":{"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":2},"b":{},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":12}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":21},"end":{"line":15,"column":80}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":24},"end":{"line":24,"column":49}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":17},"end":{"line":34,"column":33}}},"5":{"name":"(anonymous_5)","line":53,"loc":{"start":{"line":53,"column":21},"end":{"line":53,"column":44}}},"6":{"name":"(anonymous_6)","line":64,"loc":{"start":{"line":64,"column":20},"end":{"line":64,"column":43}}},"7":{"name":"(anonymous_7)","line":74,"loc":{"start":{"line":74,"column":28},"end":{"line":74,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":90,"column":5}},"2":{"start":{"line":15,"column":2},"end":{"line":87,"column":4}},"3":{"start":{"line":24,"column":4},"end":{"line":26,"column":6}},"4":{"start":{"line":34,"column":4},"end":{"line":36,"column":6}},"5":{"start":{"line":53,"column":4},"end":{"line":55,"column":6}},"6":{"start":{"line":64,"column":4},"end":{"line":66,"column":6}},"7":{"start":{"line":74,"column":4},"end":{"line":76,"column":6}},"8":{"start":{"line":78,"column":4},"end":{"line":85,"column":6}},"9":{"start":{"line":89,"column":2},"end":{"line":89,"column":64}}},"branchMap":{},"code":["(function() {","  'use strict';","","  /**","   * @memberof ngmap","   * @ngdoc service","   * @name Attr2Options","   * @param {service} $parse angular html parser","   * @param {service} $timeout angular window.setTimeout service","   * @param {service} NavigatorGeolocation Google NavigatorGeolocation wrapper","   * @param {service} GeoCoder Google GeoCoder wrapper","   * @description ","   *   Converts html attributes to google api v3 object options","   */","  var Attr2Options = function($parse, $timeout, NavigatorGeolocation, GeoCoder) { ","","    /**","     * Convert input to Google Map option input","     * @memberof Attr2Options","     * @param {Objec} input a value to convert","     * @param {Hash} options to convert the input","     * @returns {Hash} attributes","     */","    var toOptionValue = function(input, options) {","      // .. code ..","    };","","    /**","     * filters attributes by skipping angularjs methods $.. $$..","     * @memberof Attr2Options","     * @param {Hash} attrs tag attributes","     * @returns {Hash} filterd attributes","     */","    var filter = function(attrs) {","      // .. code ..","    };","","    /**","     * converts attributes hash to Google Maps API v3 options  ","     * ```","     *  . converts numbers to number   ","     *  . converts class-like string to google maps instance   ","     *    i.e. `LatLng(1,1)` to `new google.maps.LatLng(1,1)`  ","     *  . converts constant-like string to google maps constant    ","     *    i.e. `MapTypeId.HYBRID` to `google.maps.MapTypeId.HYBRID`   ","     *    i.e. `HYBRID\"` to `google.maps.MapTypeId.HYBRID`  ","     * ```","     * @memberof Attr2Options","     * @param {Hash} attrs tag attributes","     * @param {scope} scope angularjs scope","     * @returns {Hash} options converted attributess","     */","    var getOptions = function(attrs, scope) {","      // .. code ..","    };","","    /**","     * converts attributes hash to scope-specific event function ","     * @memberof Attr2Options","     * @param {scope} scope angularjs scope","     * @param {Hash} attrs tag attributes","     * @returns {Hash} events converted events","     */","    var getEvents = function(scope, attrs) {","      // .. code ..","    };","","    /**","     * Return options of Google map control, i.e streetview, pan, etc, not a general control","     * @memberof Attr2Options","     * @param {Hash} filtered filtered tag attributes","     * @returns {Hash} Google Map options","     */","    var getControlOptions = function(filtered) {","      // .. code ..","    };","","    return {","      filter: filter,","      getOptions: getOptions,","      getEvents: getEvents,","      getControlOptions: getControlOptions,","      toOptionValue: toOptionValue,","      orgAttributes: orgAttributes","    }; // return","","  }; ","","  angular.module('ngMap').service('Attr2Options', Attr2Options);","})();",""],"l":{"1":2,"15":2,"24":0,"34":0,"53":0,"64":0,"74":0,"78":0,"89":2}},"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/sample-codes/ngmap/map-controller.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/sample-codes/ngmap/map-controller.js","s":{"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":2},"b":{},"f":{"1":2,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":12}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":22},"end":{"line":14,"column":89}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":21},"end":{"line":28,"column":46}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":24},"end":{"line":39,"column":49}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":26},"end":{"line":50,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":57,"column":5}},"2":{"start":{"line":14,"column":2},"end":{"line":54,"column":4}},"3":{"start":{"line":19,"column":4},"end":{"line":19,"column":23}},"4":{"start":{"line":28,"column":4},"end":{"line":30,"column":6}},"5":{"start":{"line":39,"column":4},"end":{"line":41,"column":6}},"6":{"start":{"line":50,"column":4},"end":{"line":52,"column":6}},"7":{"start":{"line":56,"column":2},"end":{"line":56,"column":69}}},"branchMap":{},"code":["(function() {","  'use strict';","","  /**","   * @memberof ngmap","   * @ngdoc controller","   * @name MapController","   * @param $scope {service} controller scope","   * @param $q {service} promise service","   * @param NavigatorGeolocation {service} Google NavigatorGeolocation wrapper","   * @param GeoCoder {service} Google GeoCoder wrapper","   * @param Attr2Options {service} Converts element attributes to Google Maps API options","   */","  var MapController = function($scope, $q, NavigatorGeolocation, GeoCoder, Attr2Options) { ","","    /**","     * @property {Hash} _objects collection og objects that belongs to this map","     */","    this._objects = {};","","    /**","     * Add an object to the collection of group","     * @memberof MapController","     * @function addObject","     * @param groupName the name of collection that object belongs to","     * @param obj  an object to add into a collection, i.e. marker, shape","     */","    this.addObject = function(groupName, obj) {","      // .. code ..","    };","","    /**","     * Delete an object from the collection and remove from map","     * @memberof MapController","     * @function deleteObject","     * @param {Array} objs the collection of objects. i.e., map.markers","     * @param {Object} obj the object to be removed. i.e., marker","     */","    this.deleteObject = function(groupName, obj) {","      // .. code ..","    };","","    /**","     * returns the location of an address or 'current-location'","     * @memberof MapController","     * @function getGeoLocation","     * @param {String} string an address to find the location","     * @returns {Promise} latlng the location of the address","     */","    this.getGeoLocation = function(string) {","      // .. code ..","    };","","  };","","  angular.module('ngMap').controller('MapController', MapController);","})();",""],"l":{"1":2,"14":2,"19":0,"28":0,"39":0,"50":0,"56":2}},"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/sample-codes/ngmap/map.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-jsdoc/node_modules/angular-jsdoc/sample-codes/ngmap/map.js","s":{"1":2,"2":2,"3":0,"4":0,"5":2},"b":{},"f":{"1":2,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":13}}},"2":{"name":"(anonymous_2)","line":46,"loc":{"start":{"line":46,"column":12},"end":{"line":46,"column":53}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":19},"end":{"line":56,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":69,"column":5}},"2":{"start":{"line":46,"column":2},"end":{"line":66,"column":4}},"3":{"start":{"line":56,"column":4},"end":{"line":58,"column":6}},"4":{"start":{"line":60,"column":4},"end":{"line":65,"column":6}},"5":{"start":{"line":68,"column":2},"end":{"line":68,"column":48}}},"branchMap":{},"code":["(function () {","  'use strict';","","  /**","   * @memberof ngmap","   * @ngdoc directive","   * @name map","   * @param  {service} Attr2Options Converts html attributes to Google map options","   * @param  {service} $timeout     Angular window.setTimeout wrapper ","   * @param  {service} $parse       Angular html parser","   * @description","   *   Implementation of MapController","   *   Initialize a Google map within a `<div>` tag with given options and register events","   *   It accepts children directives; marker, shape, or marker-clusterer","   *","   *   It initialize map, children tags, then emits message as soon as the action is done","   *   The message emitted from this directive is;","   *     . mapInitialized","   *","   * @attr {Expression} geo-callback ","   *    If center is an address or current location, the expression is will be executed ","   *    when geo-lookup is successful. e.g., geo-callback=\"showMyStoreInfo()\"","   * @attr {Array} geo-fallback-center  The center of map incase geolocation failed. i.e. [0,0]","   * @attr {Boolean} zoom-to-include-markers","   *    If true, map boundary will be changed automatially to include all markers when initialized","   * @attr {Boolean} default-style","   *    When false, the default styling, `display:block;height:300px`, will be ignored.","   * @attr {String} init-event The name of event to initialize this map.","   *    If this option is given, the map won't be initialized until the event is received.","   *    To invoke the event, use $scope.$emit or $scope.$broacast.","   *    i.e. `<map init-event=\"init-map\" ng-click=\"$emit('init-map')\" center=... ></map>`","   * @attr {String} &lt;MapOption> [Any Google map options](https://developers.google.com/maps/documentation/javascript/reference?csw=1#MapOptions)","   * @attr {String} &lt;MapEvent> [Any Google map events](https://rawgit.com/allenhwkim/angularjs-google-maps/master/build/map_events.html)","   * @example","   *   Usage:","   *   <map MAP_OPTIONS_OR_MAP_EVENTS ..>","   *     ... Any children directives","   *   </map>","   *","   *   <map center=\"[40.74, -74.18]\" on-click=\"doThat()\">","   *   </map>","   *","   *   <map geo-fallback-center=\"[40.74, -74.18]\" zoom-to-inlude-markers=\"true\">","   *   </map>","   */","  var map = function(Attr2Options, $timeout, $parse) {","","    /**","     * Initialize map and events","     * @memberof map","     * @param {service} scope the scope of this element","     * @param {service} element element that this direcive is assigned to","     * @param {service}   attrs attribute of this element","     * @param {MapController} ctrl map controller","     */","    var linkFunc = function (scope, element, attrs, ctrl) {","      // .. code ..","    };","","    return {","      restrict: 'AE',","      controller: 'MapController',","      link: linkFunc,","      templateUrl: 'sample-codes/ngmap/test-template.html'","    };","  };","","  angular.module('ngMap').directive('map', map);","})();",""],"l":{"1":2,"46":2,"56":0,"60":0,"68":2}}}